<?xml version="1.0"?>
<SQL-List>        
        <!--【COLLATIONS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.COLLATIONS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Collations(COLLATION_NAME , CHARACTER_SET_NAME , ID , IS_DEFAULT , IS_COMPILED , SORTLEN ) VALUES(@COLLATION_NAME , @CHARACTER_SET_NAME , @ID , @IS_DEFAULT , @IS_COMPILED , @SORTLEN )
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@IS_DEFAULT" value="IS_DEFAULT" script="IS_DEFAULT"/>
                <paramer name="@IS_COMPILED" value="IS_COMPILED" script="IS_COMPILED"/>
                <paramer name="@SORTLEN" value="SORTLEN" script="SORTLEN"/>
            </Paramers>
        </SQL>

        <!--【COLLATIONS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.COLLATIONS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Collations SET COLLATION_NAME = @COLLATION_NAME ,CHARACTER_SET_NAME = @CHARACTER_SET_NAME ,ID = @ID ,IS_DEFAULT = @IS_DEFAULT ,IS_COMPILED = @IS_COMPILED ,SORTLEN = @SORTLEN  WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@IS_DEFAULT" value="IS_DEFAULT" script="IS_DEFAULT"/>
                <paramer name="@IS_COMPILED" value="IS_COMPILED" script="IS_COMPILED"/>
                <paramer name="@SORTLEN" value="SORTLEN" script="SORTLEN"/>
            </Paramers>
        </SQL>

        <!--【COLLATIONS】：查询-取得表中一条记录。-->
        <SQL id="DATA.COLLATIONS.GET" type="sqlserver">
            <TEXT>
            SELECT  COLLATION_NAME,  CHARACTER_SET_NAME,  ID,  IS_DEFAULT,  IS_COMPILED,  SORTLEN FROM Collations WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@IS_DEFAULT" value="IS_DEFAULT" script="IS_DEFAULT"/>
                <paramer name="@IS_COMPILED" value="IS_COMPILED" script="IS_COMPILED"/>
                <paramer name="@SORTLEN" value="SORTLEN" script="SORTLEN"/>
            </Paramers>
        </SQL>

        <!--【COLLATIONS】：删除-删除表中一条记录。-->
        <SQL id="DATA.COLLATIONS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Collations WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@IS_DEFAULT" value="IS_DEFAULT" script="IS_DEFAULT"/>
                <paramer name="@IS_COMPILED" value="IS_COMPILED" script="IS_COMPILED"/>
                <paramer name="@SORTLEN" value="SORTLEN" script="SORTLEN"/>
            </Paramers>
        </SQL>

        <!--【COLLATIONS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.COLLATIONS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT COLLATION_NAME AS KeyValue,COLLATION_NAME AS KeyText FROM [Collations];            
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.COLLATIONS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.COLLATIONS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：查询表中记录的列。-->
        <SQL id="DATA.COLLATIONS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 COLLATIONS.COLLATION_NAME,  COLLATIONS.CHARACTER_SET_NAME,  COLLATIONS.ID,  COLLATIONS.IS_DEFAULT,  COLLATIONS.IS_COMPILED,  COLLATIONS.SORTLEN                
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：表名。-->
        <SQL id="DATA.COLLATIONS.DBTABLE" type="sqlserver">
            <TEXT>
            Collations 
            
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：联合查询表中记录的列。-->
        <SQL id="DATA.COLLATIONS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             COLLATIONS.COLLATION_NAME,  COLLATIONS.CHARACTER_SET_NAME,  COLLATIONS.ID,  COLLATIONS.IS_DEFAULT,  COLLATIONS.IS_COMPILED,  COLLATIONS.SORTLEN                       
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：联合查询表中记录的表名。-->
        <SQL id="DATA.COLLATIONS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Collations 
            
            </TEXT>
        </SQL>

        <!--【COLLATIONS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.COLLATIONS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            COLLATIONS.COLLATION_NAME, ;COLLATIONS.CHARACTER_SET_NAME, ;COLLATIONS.IS_DEFAULT, ;COLLATIONS.IS_COMPILED,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Collationcharactersetapplicability" script="数据库表【Collationcharactersetapplicability】的基本数据库操作">
        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：添加-向表中添加一条记录。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Collationcharactersetapplicability(COLLATION_NAME , CHARACTER_SET_NAME ) VALUES(@COLLATION_NAME , @CHARACTER_SET_NAME )
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
            </Paramers>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Collationcharactersetapplicability SET COLLATION_NAME = @COLLATION_NAME ,CHARACTER_SET_NAME = @CHARACTER_SET_NAME  WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
            </Paramers>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：查询-取得表中一条记录。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.GET" type="sqlserver">
            <TEXT>
            SELECT  COLLATION_NAME,  CHARACTER_SET_NAME FROM Collationcharactersetapplicability WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
            </Paramers>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：删除-删除表中一条记录。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.DELETE" type="sqlserver">
            <TEXT>
            DELETE Collationcharactersetapplicability WHERE COLLATION_NAME = @COLLATION_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
            </Paramers>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT COLLATION_NAME AS KeyValue,COLLATION_NAME AS KeyText FROM [Collationcharactersetapplicability];            
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：查询表中记录的列。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 COLLATION_CHARACTER_SET_APPLICABILITY.COLLATION_NAME,  COLLATION_CHARACTER_SET_APPLICABILITY.CHARACTER_SET_NAME                
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：表名。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.DBTABLE" type="sqlserver">
            <TEXT>
            Collationcharactersetapplicability 
            
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：联合查询表中记录的列。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             COLLATION_CHARACTER_SET_APPLICABILITY.COLLATION_NAME,  COLLATION_CHARACTER_SET_APPLICABILITY.CHARACTER_SET_NAME                       
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：联合查询表中记录的表名。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.DBTABLEEX" type="sqlserver">
            <TEXT>
            Collationcharactersetapplicability 
            
            </TEXT>
        </SQL>

        <!--【COLLATION_CHARACTER_SET_APPLICABILITY】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.COLLATIONCHARACTERSETAPPLICABILITY.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            COLLATION_CHARACTER_SET_APPLICABILITY.COLLATION_NAME, ;COLLATION_CHARACTER_SET_APPLICABILITY.CHARACTER_SET_NAME,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Columns" script="数据库表【Columns】的基本数据库操作">
        <!--【COLUMNS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.COLUMNS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Columns(TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME , ORDINAL_POSITION , COLUMN_DEFAULT , IS_NULLABLE , DATA_TYPE , CHARACTER_MAXIMUM_LENGTH , CHARACTER_OCTET_LENGTH , NUMERIC_PRECISION , NUMERIC_SCALE , CHARACTER_SET_NAME , COLLATION_NAME , COLUMN_TYPE , COLUMN_KEY , EXTRA , PRIVILEGES , COLUMN_COMMENT ) VALUES(@TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @COLUMN_NAME , @ORDINAL_POSITION , @COLUMN_DEFAULT , @IS_NULLABLE , @DATA_TYPE , @CHARACTER_MAXIMUM_LENGTH , @CHARACTER_OCTET_LENGTH , @NUMERIC_PRECISION , @NUMERIC_SCALE , @CHARACTER_SET_NAME , @COLLATION_NAME , @COLUMN_TYPE , @COLUMN_KEY , @EXTRA , @PRIVILEGES , @COLUMN_COMMENT )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@COLUMN_DEFAULT" value="COLUMN_DEFAULT" script="COLUMN_DEFAULT"/>
                <paramer name="@IS_NULLABLE" value="IS_NULLABLE" script="IS_NULLABLE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@COLUMN_TYPE" value="COLUMN_TYPE" script="COLUMN_TYPE"/>
                <paramer name="@COLUMN_KEY" value="COLUMN_KEY" script="COLUMN_KEY"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
                <paramer name="@PRIVILEGES" value="PRIVILEGES" script="PRIVILEGES"/>
                <paramer name="@COLUMN_COMMENT" value="COLUMN_COMMENT" script="COLUMN_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【COLUMNS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.COLUMNS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Columns SET TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,COLUMN_NAME = @COLUMN_NAME ,ORDINAL_POSITION = @ORDINAL_POSITION ,COLUMN_DEFAULT = @COLUMN_DEFAULT ,IS_NULLABLE = @IS_NULLABLE ,DATA_TYPE = @DATA_TYPE ,CHARACTER_MAXIMUM_LENGTH = @CHARACTER_MAXIMUM_LENGTH ,CHARACTER_OCTET_LENGTH = @CHARACTER_OCTET_LENGTH ,NUMERIC_PRECISION = @NUMERIC_PRECISION ,NUMERIC_SCALE = @NUMERIC_SCALE ,CHARACTER_SET_NAME = @CHARACTER_SET_NAME ,COLLATION_NAME = @COLLATION_NAME ,COLUMN_TYPE = @COLUMN_TYPE ,COLUMN_KEY = @COLUMN_KEY ,EXTRA = @EXTRA ,PRIVILEGES = @PRIVILEGES ,COLUMN_COMMENT = @COLUMN_COMMENT  WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@COLUMN_DEFAULT" value="COLUMN_DEFAULT" script="COLUMN_DEFAULT"/>
                <paramer name="@IS_NULLABLE" value="IS_NULLABLE" script="IS_NULLABLE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@COLUMN_TYPE" value="COLUMN_TYPE" script="COLUMN_TYPE"/>
                <paramer name="@COLUMN_KEY" value="COLUMN_KEY" script="COLUMN_KEY"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
                <paramer name="@PRIVILEGES" value="PRIVILEGES" script="PRIVILEGES"/>
                <paramer name="@COLUMN_COMMENT" value="COLUMN_COMMENT" script="COLUMN_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【COLUMNS】：查询-取得表中一条记录。-->
        <SQL id="DATA.COLUMNS.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  COLUMN_NAME,  ORDINAL_POSITION,  COLUMN_DEFAULT,  IS_NULLABLE,  DATA_TYPE,  CHARACTER_MAXIMUM_LENGTH,  CHARACTER_OCTET_LENGTH,  NUMERIC_PRECISION,  NUMERIC_SCALE,  CHARACTER_SET_NAME,  COLLATION_NAME,  COLUMN_TYPE,  COLUMN_KEY,  EXTRA,  PRIVILEGES,  COLUMN_COMMENT FROM Columns WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@COLUMN_DEFAULT" value="COLUMN_DEFAULT" script="COLUMN_DEFAULT"/>
                <paramer name="@IS_NULLABLE" value="IS_NULLABLE" script="IS_NULLABLE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@COLUMN_TYPE" value="COLUMN_TYPE" script="COLUMN_TYPE"/>
                <paramer name="@COLUMN_KEY" value="COLUMN_KEY" script="COLUMN_KEY"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
                <paramer name="@PRIVILEGES" value="PRIVILEGES" script="PRIVILEGES"/>
                <paramer name="@COLUMN_COMMENT" value="COLUMN_COMMENT" script="COLUMN_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【COLUMNS】：删除-删除表中一条记录。-->
        <SQL id="DATA.COLUMNS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Columns WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@COLUMN_DEFAULT" value="COLUMN_DEFAULT" script="COLUMN_DEFAULT"/>
                <paramer name="@IS_NULLABLE" value="IS_NULLABLE" script="IS_NULLABLE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@COLUMN_TYPE" value="COLUMN_TYPE" script="COLUMN_TYPE"/>
                <paramer name="@COLUMN_KEY" value="COLUMN_KEY" script="COLUMN_KEY"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
                <paramer name="@PRIVILEGES" value="PRIVILEGES" script="PRIVILEGES"/>
                <paramer name="@COLUMN_COMMENT" value="COLUMN_COMMENT" script="COLUMN_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【COLUMNS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.COLUMNS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLE_CATALOG AS KeyValue,TABLE_CATALOG AS KeyText FROM [Columns];            
            </TEXT>
        </SQL>

        <!--【COLUMNS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.COLUMNS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLUMNS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.COLUMNS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLUMNS】：查询表中记录的列。-->
        <SQL id="DATA.COLUMNS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 COLUMNS.TABLE_CATALOG,  COLUMNS.TABLE_SCHEMA,  COLUMNS.TABLE_NAME,  COLUMNS.COLUMN_NAME,  COLUMNS.ORDINAL_POSITION,  COLUMNS.COLUMN_DEFAULT,  COLUMNS.IS_NULLABLE,  COLUMNS.DATA_TYPE,  COLUMNS.CHARACTER_MAXIMUM_LENGTH,  COLUMNS.CHARACTER_OCTET_LENGTH,  COLUMNS.NUMERIC_PRECISION,  COLUMNS.NUMERIC_SCALE,  COLUMNS.CHARACTER_SET_NAME,  COLUMNS.COLLATION_NAME,  COLUMNS.COLUMN_TYPE,  COLUMNS.COLUMN_KEY,  COLUMNS.EXTRA,  COLUMNS.PRIVILEGES,  COLUMNS.COLUMN_COMMENT                
            </TEXT>
        </SQL>

        <!--【COLUMNS】：表名。-->
        <SQL id="DATA.COLUMNS.DBTABLE" type="sqlserver">
            <TEXT>
            Columns 
            
            </TEXT>
        </SQL>

        <!--【COLUMNS】：联合查询表中记录的列。-->
        <SQL id="DATA.COLUMNS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             COLUMNS.TABLE_CATALOG,  COLUMNS.TABLE_SCHEMA,  COLUMNS.TABLE_NAME,  COLUMNS.COLUMN_NAME,  COLUMNS.ORDINAL_POSITION,  COLUMNS.COLUMN_DEFAULT,  COLUMNS.IS_NULLABLE,  COLUMNS.DATA_TYPE,  COLUMNS.CHARACTER_MAXIMUM_LENGTH,  COLUMNS.CHARACTER_OCTET_LENGTH,  COLUMNS.NUMERIC_PRECISION,  COLUMNS.NUMERIC_SCALE,  COLUMNS.CHARACTER_SET_NAME,  COLUMNS.COLLATION_NAME,  COLUMNS.COLUMN_TYPE,  COLUMNS.COLUMN_KEY,  COLUMNS.EXTRA,  COLUMNS.PRIVILEGES,  COLUMNS.COLUMN_COMMENT                       
            </TEXT>
        </SQL>

        <!--【COLUMNS】：联合查询表中记录的表名。-->
        <SQL id="DATA.COLUMNS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Columns 
            
            </TEXT>
        </SQL>

        <!--【COLUMNS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.COLUMNS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            COLUMNS.TABLE_CATALOG, ;COLUMNS.TABLE_SCHEMA, ;COLUMNS.TABLE_NAME, ;COLUMNS.COLUMN_NAME, ;COLUMNS.COLUMN_DEFAULT, ;COLUMNS.IS_NULLABLE, ;COLUMNS.DATA_TYPE, ;COLUMNS.CHARACTER_SET_NAME, ;COLUMNS.COLLATION_NAME, ;COLUMNS.COLUMN_TYPE, ;COLUMNS.COLUMN_KEY, ;COLUMNS.EXTRA, ;COLUMNS.PRIVILEGES, ;COLUMNS.COLUMN_COMMENT,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Columnprivileges" script="数据库表【Columnprivileges】的基本数据库操作">
        <!--【COLUMN_PRIVILEGES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.COLUMNPRIVILEGES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Columnprivileges(GRANTEE , TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME , PRIVILEGE_TYPE , IS_GRANTABLE ) VALUES(@GRANTEE , @TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @COLUMN_NAME , @PRIVILEGE_TYPE , @IS_GRANTABLE )
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.COLUMNPRIVILEGES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Columnprivileges SET GRANTEE = @GRANTEE ,TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,COLUMN_NAME = @COLUMN_NAME ,PRIVILEGE_TYPE = @PRIVILEGE_TYPE ,IS_GRANTABLE = @IS_GRANTABLE  WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：查询-取得表中一条记录。-->
        <SQL id="DATA.COLUMNPRIVILEGES.GET" type="sqlserver">
            <TEXT>
            SELECT  GRANTEE,  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  COLUMN_NAME,  PRIVILEGE_TYPE,  IS_GRANTABLE FROM Columnprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：删除-删除表中一条记录。-->
        <SQL id="DATA.COLUMNPRIVILEGES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Columnprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.COLUMNPRIVILEGES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT GRANTEE AS KeyValue,GRANTEE AS KeyText FROM [Columnprivileges];            
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.COLUMNPRIVILEGES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.COLUMNPRIVILEGES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：查询表中记录的列。-->
        <SQL id="DATA.COLUMNPRIVILEGES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 COLUMN_PRIVILEGES.GRANTEE,  COLUMN_PRIVILEGES.TABLE_CATALOG,  COLUMN_PRIVILEGES.TABLE_SCHEMA,  COLUMN_PRIVILEGES.TABLE_NAME,  COLUMN_PRIVILEGES.COLUMN_NAME,  COLUMN_PRIVILEGES.PRIVILEGE_TYPE,  COLUMN_PRIVILEGES.IS_GRANTABLE                
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：表名。-->
        <SQL id="DATA.COLUMNPRIVILEGES.DBTABLE" type="sqlserver">
            <TEXT>
            Columnprivileges 
            
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：联合查询表中记录的列。-->
        <SQL id="DATA.COLUMNPRIVILEGES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             COLUMN_PRIVILEGES.GRANTEE,  COLUMN_PRIVILEGES.TABLE_CATALOG,  COLUMN_PRIVILEGES.TABLE_SCHEMA,  COLUMN_PRIVILEGES.TABLE_NAME,  COLUMN_PRIVILEGES.COLUMN_NAME,  COLUMN_PRIVILEGES.PRIVILEGE_TYPE,  COLUMN_PRIVILEGES.IS_GRANTABLE                       
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：联合查询表中记录的表名。-->
        <SQL id="DATA.COLUMNPRIVILEGES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Columnprivileges 
            
            </TEXT>
        </SQL>

        <!--【COLUMN_PRIVILEGES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.COLUMNPRIVILEGES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            COLUMN_PRIVILEGES.GRANTEE, ;COLUMN_PRIVILEGES.TABLE_CATALOG, ;COLUMN_PRIVILEGES.TABLE_SCHEMA, ;COLUMN_PRIVILEGES.TABLE_NAME, ;COLUMN_PRIVILEGES.COLUMN_NAME, ;COLUMN_PRIVILEGES.PRIVILEGE_TYPE, ;COLUMN_PRIVILEGES.IS_GRANTABLE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Engines" script="数据库表【Engines】的基本数据库操作">
        <!--【ENGINES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.ENGINES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Engines(ENGINE , SUPPORT , COMMENT , TRANSACTIONS , XA , SAVEPOINTS ) VALUES(@ENGINE , @SUPPORT , @COMMENT , @TRANSACTIONS , @XA , @SAVEPOINTS )
            
            </TEXT>

            <Paramers>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@SUPPORT" value="SUPPORT" script="SUPPORT"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@TRANSACTIONS" value="TRANSACTIONS" script="TRANSACTIONS"/>
                <paramer name="@XA" value="XA" script="XA"/>
                <paramer name="@SAVEPOINTS" value="SAVEPOINTS" script="SAVEPOINTS"/>
            </Paramers>
        </SQL>

        <!--【ENGINES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.ENGINES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Engines SET ENGINE = @ENGINE ,SUPPORT = @SUPPORT ,COMMENT = @COMMENT ,TRANSACTIONS = @TRANSACTIONS ,XA = @XA ,SAVEPOINTS = @SAVEPOINTS  WHERE ENGINE = @ENGINE
            
            </TEXT>

            <Paramers>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@SUPPORT" value="SUPPORT" script="SUPPORT"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@TRANSACTIONS" value="TRANSACTIONS" script="TRANSACTIONS"/>
                <paramer name="@XA" value="XA" script="XA"/>
                <paramer name="@SAVEPOINTS" value="SAVEPOINTS" script="SAVEPOINTS"/>
            </Paramers>
        </SQL>

        <!--【ENGINES】：查询-取得表中一条记录。-->
        <SQL id="DATA.ENGINES.GET" type="sqlserver">
            <TEXT>
            SELECT  ENGINE,  SUPPORT,  COMMENT,  TRANSACTIONS,  XA,  SAVEPOINTS FROM Engines WHERE ENGINE = @ENGINE
            
            </TEXT>

            <Paramers>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@SUPPORT" value="SUPPORT" script="SUPPORT"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@TRANSACTIONS" value="TRANSACTIONS" script="TRANSACTIONS"/>
                <paramer name="@XA" value="XA" script="XA"/>
                <paramer name="@SAVEPOINTS" value="SAVEPOINTS" script="SAVEPOINTS"/>
            </Paramers>
        </SQL>

        <!--【ENGINES】：删除-删除表中一条记录。-->
        <SQL id="DATA.ENGINES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Engines WHERE ENGINE = @ENGINE
            
            </TEXT>

            <Paramers>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@SUPPORT" value="SUPPORT" script="SUPPORT"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@TRANSACTIONS" value="TRANSACTIONS" script="TRANSACTIONS"/>
                <paramer name="@XA" value="XA" script="XA"/>
                <paramer name="@SAVEPOINTS" value="SAVEPOINTS" script="SAVEPOINTS"/>
            </Paramers>
        </SQL>

        <!--【ENGINES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.ENGINES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT ENGINE AS KeyValue,ENGINE AS KeyText FROM [Engines];            
            </TEXT>
        </SQL>

        <!--【ENGINES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.ENGINES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【ENGINES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.ENGINES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【ENGINES】：查询表中记录的列。-->
        <SQL id="DATA.ENGINES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 ENGINES.ENGINE,  ENGINES.SUPPORT,  ENGINES.COMMENT,  ENGINES.TRANSACTIONS,  ENGINES.XA,  ENGINES.SAVEPOINTS                
            </TEXT>
        </SQL>

        <!--【ENGINES】：表名。-->
        <SQL id="DATA.ENGINES.DBTABLE" type="sqlserver">
            <TEXT>
            Engines 
            
            </TEXT>
        </SQL>

        <!--【ENGINES】：联合查询表中记录的列。-->
        <SQL id="DATA.ENGINES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             ENGINES.ENGINE,  ENGINES.SUPPORT,  ENGINES.COMMENT,  ENGINES.TRANSACTIONS,  ENGINES.XA,  ENGINES.SAVEPOINTS                       
            </TEXT>
        </SQL>

        <!--【ENGINES】：联合查询表中记录的表名。-->
        <SQL id="DATA.ENGINES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Engines 
            
            </TEXT>
        </SQL>

        <!--【ENGINES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.ENGINES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            ENGINES.ENGINE, ;ENGINES.SUPPORT, ;ENGINES.COMMENT, ;ENGINES.TRANSACTIONS, ;ENGINES.XA, ;ENGINES.SAVEPOINTS,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Events" script="数据库表【Events】的基本数据库操作">
        <!--【EVENTS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.EVENTS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Events(EVENT_CATALOG , EVENT_SCHEMA , EVENT_NAME , DEFINER , TIME_ZONE , EVENT_BODY , EVENT_DEFINITION , EVENT_TYPE , EXECUTE_AT , INTERVAL_VALUE , INTERVAL_FIELD , SQL_MODE , STARTS , ENDS , STATUS , ON_COMPLETION , CREATED , LAST_ALTERED , LAST_EXECUTED , EVENT_COMMENT , ORIGINATOR , CHARACTER_SET_CLIENT , COLLATION_CONNECTION , DATABASE_COLLATION ) VALUES(@EVENT_CATALOG , @EVENT_SCHEMA , @EVENT_NAME , @DEFINER , @TIME_ZONE , @EVENT_BODY , @EVENT_DEFINITION , @EVENT_TYPE , @EXECUTE_AT , @INTERVAL_VALUE , @INTERVAL_FIELD , @SQL_MODE , @STARTS , @ENDS , @STATUS , @ON_COMPLETION , @CREATED , @LAST_ALTERED , @LAST_EXECUTED , @EVENT_COMMENT , @ORIGINATOR , @CHARACTER_SET_CLIENT , @COLLATION_CONNECTION , @DATABASE_COLLATION )
            
            </TEXT>

            <Paramers>
                <paramer name="@EVENT_CATALOG" value="EVENT_CATALOG" script="EVENT_CATALOG"/>
                <paramer name="@EVENT_SCHEMA" value="EVENT_SCHEMA" script="EVENT_SCHEMA"/>
                <paramer name="@EVENT_NAME" value="EVENT_NAME" script="EVENT_NAME"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@TIME_ZONE" value="TIME_ZONE" script="TIME_ZONE"/>
                <paramer name="@EVENT_BODY" value="EVENT_BODY" script="EVENT_BODY"/>
                <paramer name="@EVENT_DEFINITION" value="EVENT_DEFINITION" script="EVENT_DEFINITION"/>
                <paramer name="@EVENT_TYPE" value="EVENT_TYPE" script="EVENT_TYPE"/>
                <paramer name="@EXECUTE_AT" value="EXECUTE_AT" script="EXECUTE_AT"/>
                <paramer name="@INTERVAL_VALUE" value="INTERVAL_VALUE" script="INTERVAL_VALUE"/>
                <paramer name="@INTERVAL_FIELD" value="INTERVAL_FIELD" script="INTERVAL_FIELD"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@STARTS" value="STARTS" script="STARTS"/>
                <paramer name="@ENDS" value="ENDS" script="ENDS"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@ON_COMPLETION" value="ON_COMPLETION" script="ON_COMPLETION"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@LAST_EXECUTED" value="LAST_EXECUTED" script="LAST_EXECUTED"/>
                <paramer name="@EVENT_COMMENT" value="EVENT_COMMENT" script="EVENT_COMMENT"/>
                <paramer name="@ORIGINATOR" value="ORIGINATOR" script="ORIGINATOR"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【EVENTS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.EVENTS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Events SET EVENT_CATALOG = @EVENT_CATALOG ,EVENT_SCHEMA = @EVENT_SCHEMA ,EVENT_NAME = @EVENT_NAME ,DEFINER = @DEFINER ,TIME_ZONE = @TIME_ZONE ,EVENT_BODY = @EVENT_BODY ,EVENT_DEFINITION = @EVENT_DEFINITION ,EVENT_TYPE = @EVENT_TYPE ,EXECUTE_AT = @EXECUTE_AT ,INTERVAL_VALUE = @INTERVAL_VALUE ,INTERVAL_FIELD = @INTERVAL_FIELD ,SQL_MODE = @SQL_MODE ,STARTS = @STARTS ,ENDS = @ENDS ,STATUS = @STATUS ,ON_COMPLETION = @ON_COMPLETION ,CREATED = @CREATED ,LAST_ALTERED = @LAST_ALTERED ,LAST_EXECUTED = @LAST_EXECUTED ,EVENT_COMMENT = @EVENT_COMMENT ,ORIGINATOR = @ORIGINATOR ,CHARACTER_SET_CLIENT = @CHARACTER_SET_CLIENT ,COLLATION_CONNECTION = @COLLATION_CONNECTION ,DATABASE_COLLATION = @DATABASE_COLLATION  WHERE EVENT_CATALOG = @EVENT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@EVENT_CATALOG" value="EVENT_CATALOG" script="EVENT_CATALOG"/>
                <paramer name="@EVENT_SCHEMA" value="EVENT_SCHEMA" script="EVENT_SCHEMA"/>
                <paramer name="@EVENT_NAME" value="EVENT_NAME" script="EVENT_NAME"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@TIME_ZONE" value="TIME_ZONE" script="TIME_ZONE"/>
                <paramer name="@EVENT_BODY" value="EVENT_BODY" script="EVENT_BODY"/>
                <paramer name="@EVENT_DEFINITION" value="EVENT_DEFINITION" script="EVENT_DEFINITION"/>
                <paramer name="@EVENT_TYPE" value="EVENT_TYPE" script="EVENT_TYPE"/>
                <paramer name="@EXECUTE_AT" value="EXECUTE_AT" script="EXECUTE_AT"/>
                <paramer name="@INTERVAL_VALUE" value="INTERVAL_VALUE" script="INTERVAL_VALUE"/>
                <paramer name="@INTERVAL_FIELD" value="INTERVAL_FIELD" script="INTERVAL_FIELD"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@STARTS" value="STARTS" script="STARTS"/>
                <paramer name="@ENDS" value="ENDS" script="ENDS"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@ON_COMPLETION" value="ON_COMPLETION" script="ON_COMPLETION"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@LAST_EXECUTED" value="LAST_EXECUTED" script="LAST_EXECUTED"/>
                <paramer name="@EVENT_COMMENT" value="EVENT_COMMENT" script="EVENT_COMMENT"/>
                <paramer name="@ORIGINATOR" value="ORIGINATOR" script="ORIGINATOR"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【EVENTS】：查询-取得表中一条记录。-->
        <SQL id="DATA.EVENTS.GET" type="sqlserver">
            <TEXT>
            SELECT  EVENT_CATALOG,  EVENT_SCHEMA,  EVENT_NAME,  DEFINER,  TIME_ZONE,  EVENT_BODY,  EVENT_DEFINITION,  EVENT_TYPE,  EXECUTE_AT,  INTERVAL_VALUE,  INTERVAL_FIELD,  SQL_MODE,  STARTS,  ENDS,  STATUS,  ON_COMPLETION,  CREATED,  LAST_ALTERED,  LAST_EXECUTED,  EVENT_COMMENT,  ORIGINATOR,  CHARACTER_SET_CLIENT,  COLLATION_CONNECTION,  DATABASE_COLLATION FROM Events WHERE EVENT_CATALOG = @EVENT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@EVENT_CATALOG" value="EVENT_CATALOG" script="EVENT_CATALOG"/>
                <paramer name="@EVENT_SCHEMA" value="EVENT_SCHEMA" script="EVENT_SCHEMA"/>
                <paramer name="@EVENT_NAME" value="EVENT_NAME" script="EVENT_NAME"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@TIME_ZONE" value="TIME_ZONE" script="TIME_ZONE"/>
                <paramer name="@EVENT_BODY" value="EVENT_BODY" script="EVENT_BODY"/>
                <paramer name="@EVENT_DEFINITION" value="EVENT_DEFINITION" script="EVENT_DEFINITION"/>
                <paramer name="@EVENT_TYPE" value="EVENT_TYPE" script="EVENT_TYPE"/>
                <paramer name="@EXECUTE_AT" value="EXECUTE_AT" script="EXECUTE_AT"/>
                <paramer name="@INTERVAL_VALUE" value="INTERVAL_VALUE" script="INTERVAL_VALUE"/>
                <paramer name="@INTERVAL_FIELD" value="INTERVAL_FIELD" script="INTERVAL_FIELD"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@STARTS" value="STARTS" script="STARTS"/>
                <paramer name="@ENDS" value="ENDS" script="ENDS"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@ON_COMPLETION" value="ON_COMPLETION" script="ON_COMPLETION"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@LAST_EXECUTED" value="LAST_EXECUTED" script="LAST_EXECUTED"/>
                <paramer name="@EVENT_COMMENT" value="EVENT_COMMENT" script="EVENT_COMMENT"/>
                <paramer name="@ORIGINATOR" value="ORIGINATOR" script="ORIGINATOR"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【EVENTS】：删除-删除表中一条记录。-->
        <SQL id="DATA.EVENTS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Events WHERE EVENT_CATALOG = @EVENT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@EVENT_CATALOG" value="EVENT_CATALOG" script="EVENT_CATALOG"/>
                <paramer name="@EVENT_SCHEMA" value="EVENT_SCHEMA" script="EVENT_SCHEMA"/>
                <paramer name="@EVENT_NAME" value="EVENT_NAME" script="EVENT_NAME"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@TIME_ZONE" value="TIME_ZONE" script="TIME_ZONE"/>
                <paramer name="@EVENT_BODY" value="EVENT_BODY" script="EVENT_BODY"/>
                <paramer name="@EVENT_DEFINITION" value="EVENT_DEFINITION" script="EVENT_DEFINITION"/>
                <paramer name="@EVENT_TYPE" value="EVENT_TYPE" script="EVENT_TYPE"/>
                <paramer name="@EXECUTE_AT" value="EXECUTE_AT" script="EXECUTE_AT"/>
                <paramer name="@INTERVAL_VALUE" value="INTERVAL_VALUE" script="INTERVAL_VALUE"/>
                <paramer name="@INTERVAL_FIELD" value="INTERVAL_FIELD" script="INTERVAL_FIELD"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@STARTS" value="STARTS" script="STARTS"/>
                <paramer name="@ENDS" value="ENDS" script="ENDS"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@ON_COMPLETION" value="ON_COMPLETION" script="ON_COMPLETION"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@LAST_EXECUTED" value="LAST_EXECUTED" script="LAST_EXECUTED"/>
                <paramer name="@EVENT_COMMENT" value="EVENT_COMMENT" script="EVENT_COMMENT"/>
                <paramer name="@ORIGINATOR" value="ORIGINATOR" script="ORIGINATOR"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【EVENTS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.EVENTS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT EVENT_CATALOG AS KeyValue,EVENT_CATALOG AS KeyText FROM [Events];            
            </TEXT>
        </SQL>

        <!--【EVENTS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.EVENTS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【EVENTS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.EVENTS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【EVENTS】：查询表中记录的列。-->
        <SQL id="DATA.EVENTS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 EVENTS.EVENT_CATALOG,  EVENTS.EVENT_SCHEMA,  EVENTS.EVENT_NAME,  EVENTS.DEFINER,  EVENTS.TIME_ZONE,  EVENTS.EVENT_BODY,  EVENTS.EVENT_DEFINITION,  EVENTS.EVENT_TYPE,  EVENTS.EXECUTE_AT,  EVENTS.INTERVAL_VALUE,  EVENTS.INTERVAL_FIELD,  EVENTS.SQL_MODE,  EVENTS.STARTS,  EVENTS.ENDS,  EVENTS.STATUS,  EVENTS.ON_COMPLETION,  EVENTS.CREATED,  EVENTS.LAST_ALTERED,  EVENTS.LAST_EXECUTED,  EVENTS.EVENT_COMMENT,  EVENTS.ORIGINATOR,  EVENTS.CHARACTER_SET_CLIENT,  EVENTS.COLLATION_CONNECTION,  EVENTS.DATABASE_COLLATION                
            </TEXT>
        </SQL>

        <!--【EVENTS】：表名。-->
        <SQL id="DATA.EVENTS.DBTABLE" type="sqlserver">
            <TEXT>
            Events 
            
            </TEXT>
        </SQL>

        <!--【EVENTS】：联合查询表中记录的列。-->
        <SQL id="DATA.EVENTS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             EVENTS.EVENT_CATALOG,  EVENTS.EVENT_SCHEMA,  EVENTS.EVENT_NAME,  EVENTS.DEFINER,  EVENTS.TIME_ZONE,  EVENTS.EVENT_BODY,  EVENTS.EVENT_DEFINITION,  EVENTS.EVENT_TYPE,  EVENTS.EXECUTE_AT,  EVENTS.INTERVAL_VALUE,  EVENTS.INTERVAL_FIELD,  EVENTS.SQL_MODE,  EVENTS.STARTS,  EVENTS.ENDS,  EVENTS.STATUS,  EVENTS.ON_COMPLETION,  EVENTS.CREATED,  EVENTS.LAST_ALTERED,  EVENTS.LAST_EXECUTED,  EVENTS.EVENT_COMMENT,  EVENTS.ORIGINATOR,  EVENTS.CHARACTER_SET_CLIENT,  EVENTS.COLLATION_CONNECTION,  EVENTS.DATABASE_COLLATION                       
            </TEXT>
        </SQL>

        <!--【EVENTS】：联合查询表中记录的表名。-->
        <SQL id="DATA.EVENTS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Events 
            
            </TEXT>
        </SQL>

        <!--【EVENTS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.EVENTS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            EVENTS.EVENT_CATALOG, ;EVENTS.EVENT_SCHEMA, ;EVENTS.EVENT_NAME, ;EVENTS.DEFINER, ;EVENTS.TIME_ZONE, ;EVENTS.EVENT_BODY, ;EVENTS.EVENT_DEFINITION, ;EVENTS.EVENT_TYPE, ;EVENTS.INTERVAL_VALUE, ;EVENTS.INTERVAL_FIELD, ;EVENTS.SQL_MODE, ;EVENTS.STATUS, ;EVENTS.ON_COMPLETION, ;EVENTS.EVENT_COMMENT, ;EVENTS.CHARACTER_SET_CLIENT, ;EVENTS.COLLATION_CONNECTION, ;EVENTS.DATABASE_COLLATION,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Files" script="数据库表【Files】的基本数据库操作">
        <!--【FILES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.FILES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Files(FILE_ID , FILE_NAME , FILE_TYPE , TABLESPACE_NAME , TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , LOGFILE_GROUP_NAME , LOGFILE_GROUP_NUMBER , ENGINE , FULLTEXT_KEYS , DELETED_ROWS , UPDATE_COUNT , FREE_EXTENTS , TOTAL_EXTENTS , EXTENT_SIZE , INITIAL_SIZE , MAXIMUM_SIZE , AUTOEXTEND_SIZE , CREATION_TIME , LAST_UPDATE_TIME , LAST_ACCESS_TIME , RECOVER_TIME , TRANSACTION_COUNTER , VERSION , ROW_FORMAT , TABLE_ROWS , AVG_ROW_LENGTH , DATA_LENGTH , MAX_DATA_LENGTH , INDEX_LENGTH , DATA_FREE , CREATE_TIME , UPDATE_TIME , CHECK_TIME , CHECKSUM , STATUS , EXTRA ) VALUES(@FILE_ID , @FILE_NAME , @FILE_TYPE , @TABLESPACE_NAME , @TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @LOGFILE_GROUP_NAME , @LOGFILE_GROUP_NUMBER , @ENGINE , @FULLTEXT_KEYS , @DELETED_ROWS , @UPDATE_COUNT , @FREE_EXTENTS , @TOTAL_EXTENTS , @EXTENT_SIZE , @INITIAL_SIZE , @MAXIMUM_SIZE , @AUTOEXTEND_SIZE , @CREATION_TIME , @LAST_UPDATE_TIME , @LAST_ACCESS_TIME , @RECOVER_TIME , @TRANSACTION_COUNTER , @VERSION , @ROW_FORMAT , @TABLE_ROWS , @AVG_ROW_LENGTH , @DATA_LENGTH , @MAX_DATA_LENGTH , @INDEX_LENGTH , @DATA_FREE , @CREATE_TIME , @UPDATE_TIME , @CHECK_TIME , @CHECKSUM , @STATUS , @EXTRA )
            
            </TEXT>

            <Paramers>
                <paramer name="@FILE_ID" value="FILE_ID" script="FILE_ID"/>
                <paramer name="@FILE_NAME" value="FILE_NAME" script="FILE_NAME"/>
                <paramer name="@FILE_TYPE" value="FILE_TYPE" script="FILE_TYPE"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@LOGFILE_GROUP_NUMBER" value="LOGFILE_GROUP_NUMBER" script="LOGFILE_GROUP_NUMBER"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@FULLTEXT_KEYS" value="FULLTEXT_KEYS" script="FULLTEXT_KEYS"/>
                <paramer name="@DELETED_ROWS" value="DELETED_ROWS" script="DELETED_ROWS"/>
                <paramer name="@UPDATE_COUNT" value="UPDATE_COUNT" script="UPDATE_COUNT"/>
                <paramer name="@FREE_EXTENTS" value="FREE_EXTENTS" script="FREE_EXTENTS"/>
                <paramer name="@TOTAL_EXTENTS" value="TOTAL_EXTENTS" script="TOTAL_EXTENTS"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@INITIAL_SIZE" value="INITIAL_SIZE" script="INITIAL_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@CREATION_TIME" value="CREATION_TIME" script="CREATION_TIME"/>
                <paramer name="@LAST_UPDATE_TIME" value="LAST_UPDATE_TIME" script="LAST_UPDATE_TIME"/>
                <paramer name="@LAST_ACCESS_TIME" value="LAST_ACCESS_TIME" script="LAST_ACCESS_TIME"/>
                <paramer name="@RECOVER_TIME" value="RECOVER_TIME" script="RECOVER_TIME"/>
                <paramer name="@TRANSACTION_COUNTER" value="TRANSACTION_COUNTER" script="TRANSACTION_COUNTER"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
            </Paramers>
        </SQL>

        <!--【FILES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.FILES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Files SET FILE_ID = @FILE_ID ,FILE_NAME = @FILE_NAME ,FILE_TYPE = @FILE_TYPE ,TABLESPACE_NAME = @TABLESPACE_NAME ,TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,LOGFILE_GROUP_NAME = @LOGFILE_GROUP_NAME ,LOGFILE_GROUP_NUMBER = @LOGFILE_GROUP_NUMBER ,ENGINE = @ENGINE ,FULLTEXT_KEYS = @FULLTEXT_KEYS ,DELETED_ROWS = @DELETED_ROWS ,UPDATE_COUNT = @UPDATE_COUNT ,FREE_EXTENTS = @FREE_EXTENTS ,TOTAL_EXTENTS = @TOTAL_EXTENTS ,EXTENT_SIZE = @EXTENT_SIZE ,INITIAL_SIZE = @INITIAL_SIZE ,MAXIMUM_SIZE = @MAXIMUM_SIZE ,AUTOEXTEND_SIZE = @AUTOEXTEND_SIZE ,CREATION_TIME = @CREATION_TIME ,LAST_UPDATE_TIME = @LAST_UPDATE_TIME ,LAST_ACCESS_TIME = @LAST_ACCESS_TIME ,RECOVER_TIME = @RECOVER_TIME ,TRANSACTION_COUNTER = @TRANSACTION_COUNTER ,VERSION = @VERSION ,ROW_FORMAT = @ROW_FORMAT ,TABLE_ROWS = @TABLE_ROWS ,AVG_ROW_LENGTH = @AVG_ROW_LENGTH ,DATA_LENGTH = @DATA_LENGTH ,MAX_DATA_LENGTH = @MAX_DATA_LENGTH ,INDEX_LENGTH = @INDEX_LENGTH ,DATA_FREE = @DATA_FREE ,CREATE_TIME = @CREATE_TIME ,UPDATE_TIME = @UPDATE_TIME ,CHECK_TIME = @CHECK_TIME ,CHECKSUM = @CHECKSUM ,STATUS = @STATUS ,EXTRA = @EXTRA  WHERE FILE_ID = @FILE_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@FILE_ID" value="FILE_ID" script="FILE_ID"/>
                <paramer name="@FILE_NAME" value="FILE_NAME" script="FILE_NAME"/>
                <paramer name="@FILE_TYPE" value="FILE_TYPE" script="FILE_TYPE"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@LOGFILE_GROUP_NUMBER" value="LOGFILE_GROUP_NUMBER" script="LOGFILE_GROUP_NUMBER"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@FULLTEXT_KEYS" value="FULLTEXT_KEYS" script="FULLTEXT_KEYS"/>
                <paramer name="@DELETED_ROWS" value="DELETED_ROWS" script="DELETED_ROWS"/>
                <paramer name="@UPDATE_COUNT" value="UPDATE_COUNT" script="UPDATE_COUNT"/>
                <paramer name="@FREE_EXTENTS" value="FREE_EXTENTS" script="FREE_EXTENTS"/>
                <paramer name="@TOTAL_EXTENTS" value="TOTAL_EXTENTS" script="TOTAL_EXTENTS"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@INITIAL_SIZE" value="INITIAL_SIZE" script="INITIAL_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@CREATION_TIME" value="CREATION_TIME" script="CREATION_TIME"/>
                <paramer name="@LAST_UPDATE_TIME" value="LAST_UPDATE_TIME" script="LAST_UPDATE_TIME"/>
                <paramer name="@LAST_ACCESS_TIME" value="LAST_ACCESS_TIME" script="LAST_ACCESS_TIME"/>
                <paramer name="@RECOVER_TIME" value="RECOVER_TIME" script="RECOVER_TIME"/>
                <paramer name="@TRANSACTION_COUNTER" value="TRANSACTION_COUNTER" script="TRANSACTION_COUNTER"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
            </Paramers>
        </SQL>

        <!--【FILES】：查询-取得表中一条记录。-->
        <SQL id="DATA.FILES.GET" type="sqlserver">
            <TEXT>
            SELECT  FILE_ID,  FILE_NAME,  FILE_TYPE,  TABLESPACE_NAME,  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  LOGFILE_GROUP_NAME,  LOGFILE_GROUP_NUMBER,  ENGINE,  FULLTEXT_KEYS,  DELETED_ROWS,  UPDATE_COUNT,  FREE_EXTENTS,  TOTAL_EXTENTS,  EXTENT_SIZE,  INITIAL_SIZE,  MAXIMUM_SIZE,  AUTOEXTEND_SIZE,  CREATION_TIME,  LAST_UPDATE_TIME,  LAST_ACCESS_TIME,  RECOVER_TIME,  TRANSACTION_COUNTER,  VERSION,  ROW_FORMAT,  TABLE_ROWS,  AVG_ROW_LENGTH,  DATA_LENGTH,  MAX_DATA_LENGTH,  INDEX_LENGTH,  DATA_FREE,  CREATE_TIME,  UPDATE_TIME,  CHECK_TIME,  CHECKSUM,  STATUS,  EXTRA FROM Files WHERE FILE_ID = @FILE_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@FILE_ID" value="FILE_ID" script="FILE_ID"/>
                <paramer name="@FILE_NAME" value="FILE_NAME" script="FILE_NAME"/>
                <paramer name="@FILE_TYPE" value="FILE_TYPE" script="FILE_TYPE"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@LOGFILE_GROUP_NUMBER" value="LOGFILE_GROUP_NUMBER" script="LOGFILE_GROUP_NUMBER"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@FULLTEXT_KEYS" value="FULLTEXT_KEYS" script="FULLTEXT_KEYS"/>
                <paramer name="@DELETED_ROWS" value="DELETED_ROWS" script="DELETED_ROWS"/>
                <paramer name="@UPDATE_COUNT" value="UPDATE_COUNT" script="UPDATE_COUNT"/>
                <paramer name="@FREE_EXTENTS" value="FREE_EXTENTS" script="FREE_EXTENTS"/>
                <paramer name="@TOTAL_EXTENTS" value="TOTAL_EXTENTS" script="TOTAL_EXTENTS"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@INITIAL_SIZE" value="INITIAL_SIZE" script="INITIAL_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@CREATION_TIME" value="CREATION_TIME" script="CREATION_TIME"/>
                <paramer name="@LAST_UPDATE_TIME" value="LAST_UPDATE_TIME" script="LAST_UPDATE_TIME"/>
                <paramer name="@LAST_ACCESS_TIME" value="LAST_ACCESS_TIME" script="LAST_ACCESS_TIME"/>
                <paramer name="@RECOVER_TIME" value="RECOVER_TIME" script="RECOVER_TIME"/>
                <paramer name="@TRANSACTION_COUNTER" value="TRANSACTION_COUNTER" script="TRANSACTION_COUNTER"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
            </Paramers>
        </SQL>

        <!--【FILES】：删除-删除表中一条记录。-->
        <SQL id="DATA.FILES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Files WHERE FILE_ID = @FILE_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@FILE_ID" value="FILE_ID" script="FILE_ID"/>
                <paramer name="@FILE_NAME" value="FILE_NAME" script="FILE_NAME"/>
                <paramer name="@FILE_TYPE" value="FILE_TYPE" script="FILE_TYPE"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@LOGFILE_GROUP_NUMBER" value="LOGFILE_GROUP_NUMBER" script="LOGFILE_GROUP_NUMBER"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@FULLTEXT_KEYS" value="FULLTEXT_KEYS" script="FULLTEXT_KEYS"/>
                <paramer name="@DELETED_ROWS" value="DELETED_ROWS" script="DELETED_ROWS"/>
                <paramer name="@UPDATE_COUNT" value="UPDATE_COUNT" script="UPDATE_COUNT"/>
                <paramer name="@FREE_EXTENTS" value="FREE_EXTENTS" script="FREE_EXTENTS"/>
                <paramer name="@TOTAL_EXTENTS" value="TOTAL_EXTENTS" script="TOTAL_EXTENTS"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@INITIAL_SIZE" value="INITIAL_SIZE" script="INITIAL_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@CREATION_TIME" value="CREATION_TIME" script="CREATION_TIME"/>
                <paramer name="@LAST_UPDATE_TIME" value="LAST_UPDATE_TIME" script="LAST_UPDATE_TIME"/>
                <paramer name="@LAST_ACCESS_TIME" value="LAST_ACCESS_TIME" script="LAST_ACCESS_TIME"/>
                <paramer name="@RECOVER_TIME" value="RECOVER_TIME" script="RECOVER_TIME"/>
                <paramer name="@TRANSACTION_COUNTER" value="TRANSACTION_COUNTER" script="TRANSACTION_COUNTER"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@STATUS" value="STATUS" script="STATUS"/>
                <paramer name="@EXTRA" value="EXTRA" script="EXTRA"/>
            </Paramers>
        </SQL>

        <!--【FILES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.FILES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT FILE_ID AS KeyValue,FILE_TYPE AS KeyText FROM [Files];            
            </TEXT>
        </SQL>

        <!--【FILES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.FILES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【FILES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.FILES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【FILES】：查询表中记录的列。-->
        <SQL id="DATA.FILES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 FILES.FILE_ID,  FILES.FILE_NAME,  FILES.FILE_TYPE,  FILES.TABLESPACE_NAME,  FILES.TABLE_CATALOG,  FILES.TABLE_SCHEMA,  FILES.TABLE_NAME,  FILES.LOGFILE_GROUP_NAME,  FILES.LOGFILE_GROUP_NUMBER,  FILES.ENGINE,  FILES.FULLTEXT_KEYS,  FILES.DELETED_ROWS,  FILES.UPDATE_COUNT,  FILES.FREE_EXTENTS,  FILES.TOTAL_EXTENTS,  FILES.EXTENT_SIZE,  FILES.INITIAL_SIZE,  FILES.MAXIMUM_SIZE,  FILES.AUTOEXTEND_SIZE,  FILES.CREATION_TIME,  FILES.LAST_UPDATE_TIME,  FILES.LAST_ACCESS_TIME,  FILES.RECOVER_TIME,  FILES.TRANSACTION_COUNTER,  FILES.VERSION,  FILES.ROW_FORMAT,  FILES.TABLE_ROWS,  FILES.AVG_ROW_LENGTH,  FILES.DATA_LENGTH,  FILES.MAX_DATA_LENGTH,  FILES.INDEX_LENGTH,  FILES.DATA_FREE,  FILES.CREATE_TIME,  FILES.UPDATE_TIME,  FILES.CHECK_TIME,  FILES.CHECKSUM,  FILES.STATUS,  FILES.EXTRA                
            </TEXT>
        </SQL>

        <!--【FILES】：表名。-->
        <SQL id="DATA.FILES.DBTABLE" type="sqlserver">
            <TEXT>
            Files 
            
            </TEXT>
        </SQL>

        <!--【FILES】：联合查询表中记录的列。-->
        <SQL id="DATA.FILES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             FILES.FILE_ID,  FILES.FILE_NAME,  FILES.FILE_TYPE,  FILES.TABLESPACE_NAME,  FILES.TABLE_CATALOG,  FILES.TABLE_SCHEMA,  FILES.TABLE_NAME,  FILES.LOGFILE_GROUP_NAME,  FILES.LOGFILE_GROUP_NUMBER,  FILES.ENGINE,  FILES.FULLTEXT_KEYS,  FILES.DELETED_ROWS,  FILES.UPDATE_COUNT,  FILES.FREE_EXTENTS,  FILES.TOTAL_EXTENTS,  FILES.EXTENT_SIZE,  FILES.INITIAL_SIZE,  FILES.MAXIMUM_SIZE,  FILES.AUTOEXTEND_SIZE,  FILES.CREATION_TIME,  FILES.LAST_UPDATE_TIME,  FILES.LAST_ACCESS_TIME,  FILES.RECOVER_TIME,  FILES.TRANSACTION_COUNTER,  FILES.VERSION,  FILES.ROW_FORMAT,  FILES.TABLE_ROWS,  FILES.AVG_ROW_LENGTH,  FILES.DATA_LENGTH,  FILES.MAX_DATA_LENGTH,  FILES.INDEX_LENGTH,  FILES.DATA_FREE,  FILES.CREATE_TIME,  FILES.UPDATE_TIME,  FILES.CHECK_TIME,  FILES.CHECKSUM,  FILES.STATUS,  FILES.EXTRA                       
            </TEXT>
        </SQL>

        <!--【FILES】：联合查询表中记录的表名。-->
        <SQL id="DATA.FILES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Files 
            
            </TEXT>
        </SQL>

        <!--【FILES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.FILES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            FILES.FILE_NAME, ;FILES.FILE_TYPE, ;FILES.TABLESPACE_NAME, ;FILES.TABLE_CATALOG, ;FILES.TABLE_SCHEMA, ;FILES.TABLE_NAME, ;FILES.LOGFILE_GROUP_NAME, ;FILES.ENGINE, ;FILES.FULLTEXT_KEYS, ;FILES.ROW_FORMAT, ;FILES.STATUS, ;FILES.EXTRA,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Globalstatus" script="数据库表【Globalstatus】的基本数据库操作">
        <!--【GLOBAL_STATUS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.GLOBALSTATUS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Globalstatus(VARIABLE_NAME , VARIABLE_VALUE ) VALUES(@VARIABLE_NAME , @VARIABLE_VALUE )
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_STATUS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.GLOBALSTATUS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Globalstatus SET VARIABLE_NAME = @VARIABLE_NAME ,VARIABLE_VALUE = @VARIABLE_VALUE  WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_STATUS】：查询-取得表中一条记录。-->
        <SQL id="DATA.GLOBALSTATUS.GET" type="sqlserver">
            <TEXT>
            SELECT  VARIABLE_NAME,  VARIABLE_VALUE FROM Globalstatus WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_STATUS】：删除-删除表中一条记录。-->
        <SQL id="DATA.GLOBALSTATUS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Globalstatus WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_STATUS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.GLOBALSTATUS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT VARIABLE_NAME AS KeyValue,VARIABLE_NAME AS KeyText FROM [Globalstatus];            
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.GLOBALSTATUS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.GLOBALSTATUS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：查询表中记录的列。-->
        <SQL id="DATA.GLOBALSTATUS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 GLOBAL_STATUS.VARIABLE_NAME,  GLOBAL_STATUS.VARIABLE_VALUE                
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：表名。-->
        <SQL id="DATA.GLOBALSTATUS.DBTABLE" type="sqlserver">
            <TEXT>
            Globalstatus 
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：联合查询表中记录的列。-->
        <SQL id="DATA.GLOBALSTATUS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             GLOBAL_STATUS.VARIABLE_NAME,  GLOBAL_STATUS.VARIABLE_VALUE                       
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：联合查询表中记录的表名。-->
        <SQL id="DATA.GLOBALSTATUS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Globalstatus 
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_STATUS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.GLOBALSTATUS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            GLOBAL_STATUS.VARIABLE_NAME, ;GLOBAL_STATUS.VARIABLE_VALUE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Globalvariables" script="数据库表【Globalvariables】的基本数据库操作">
        <!--【GLOBAL_VARIABLES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.GLOBALVARIABLES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Globalvariables(VARIABLE_NAME , VARIABLE_VALUE ) VALUES(@VARIABLE_NAME , @VARIABLE_VALUE )
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_VARIABLES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.GLOBALVARIABLES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Globalvariables SET VARIABLE_NAME = @VARIABLE_NAME ,VARIABLE_VALUE = @VARIABLE_VALUE  WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_VARIABLES】：查询-取得表中一条记录。-->
        <SQL id="DATA.GLOBALVARIABLES.GET" type="sqlserver">
            <TEXT>
            SELECT  VARIABLE_NAME,  VARIABLE_VALUE FROM Globalvariables WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_VARIABLES】：删除-删除表中一条记录。-->
        <SQL id="DATA.GLOBALVARIABLES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Globalvariables WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【GLOBAL_VARIABLES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.GLOBALVARIABLES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT VARIABLE_NAME AS KeyValue,VARIABLE_NAME AS KeyText FROM [Globalvariables];            
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.GLOBALVARIABLES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.GLOBALVARIABLES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：查询表中记录的列。-->
        <SQL id="DATA.GLOBALVARIABLES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 GLOBAL_VARIABLES.VARIABLE_NAME,  GLOBAL_VARIABLES.VARIABLE_VALUE                
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：表名。-->
        <SQL id="DATA.GLOBALVARIABLES.DBTABLE" type="sqlserver">
            <TEXT>
            Globalvariables 
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：联合查询表中记录的列。-->
        <SQL id="DATA.GLOBALVARIABLES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             GLOBAL_VARIABLES.VARIABLE_NAME,  GLOBAL_VARIABLES.VARIABLE_VALUE                       
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：联合查询表中记录的表名。-->
        <SQL id="DATA.GLOBALVARIABLES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Globalvariables 
            
            </TEXT>
        </SQL>

        <!--【GLOBAL_VARIABLES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.GLOBALVARIABLES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            GLOBAL_VARIABLES.VARIABLE_NAME, ;GLOBAL_VARIABLES.VARIABLE_VALUE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Keycolumnusage" script="数据库表【Keycolumnusage】的基本数据库操作">
        <!--【KEY_COLUMN_USAGE】：添加-向表中添加一条记录。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Keycolumnusage(CONSTRAINT_CATALOG , CONSTRAINT_SCHEMA , CONSTRAINT_NAME , TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , COLUMN_NAME , ORDINAL_POSITION , POSITION_IN_UNIQUE_CONSTRAINT , REFERENCED_TABLE_SCHEMA , REFERENCED_TABLE_NAME , REFERENCED_COLUMN_NAME ) VALUES(@CONSTRAINT_CATALOG , @CONSTRAINT_SCHEMA , @CONSTRAINT_NAME , @TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @COLUMN_NAME , @ORDINAL_POSITION , @POSITION_IN_UNIQUE_CONSTRAINT , @REFERENCED_TABLE_SCHEMA , @REFERENCED_TABLE_NAME , @REFERENCED_COLUMN_NAME )
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@POSITION_IN_UNIQUE_CONSTRAINT" value="POSITION_IN_UNIQUE_CONSTRAINT" script="POSITION_IN_UNIQUE_CONSTRAINT"/>
                <paramer name="@REFERENCED_TABLE_SCHEMA" value="REFERENCED_TABLE_SCHEMA" script="REFERENCED_TABLE_SCHEMA"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
                <paramer name="@REFERENCED_COLUMN_NAME" value="REFERENCED_COLUMN_NAME" script="REFERENCED_COLUMN_NAME"/>
            </Paramers>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Keycolumnusage SET CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG ,CONSTRAINT_SCHEMA = @CONSTRAINT_SCHEMA ,CONSTRAINT_NAME = @CONSTRAINT_NAME ,TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,COLUMN_NAME = @COLUMN_NAME ,ORDINAL_POSITION = @ORDINAL_POSITION ,POSITION_IN_UNIQUE_CONSTRAINT = @POSITION_IN_UNIQUE_CONSTRAINT ,REFERENCED_TABLE_SCHEMA = @REFERENCED_TABLE_SCHEMA ,REFERENCED_TABLE_NAME = @REFERENCED_TABLE_NAME ,REFERENCED_COLUMN_NAME = @REFERENCED_COLUMN_NAME  WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@POSITION_IN_UNIQUE_CONSTRAINT" value="POSITION_IN_UNIQUE_CONSTRAINT" script="POSITION_IN_UNIQUE_CONSTRAINT"/>
                <paramer name="@REFERENCED_TABLE_SCHEMA" value="REFERENCED_TABLE_SCHEMA" script="REFERENCED_TABLE_SCHEMA"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
                <paramer name="@REFERENCED_COLUMN_NAME" value="REFERENCED_COLUMN_NAME" script="REFERENCED_COLUMN_NAME"/>
            </Paramers>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：查询-取得表中一条记录。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.GET" type="sqlserver">
            <TEXT>
            SELECT  CONSTRAINT_CATALOG,  CONSTRAINT_SCHEMA,  CONSTRAINT_NAME,  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  COLUMN_NAME,  ORDINAL_POSITION,  POSITION_IN_UNIQUE_CONSTRAINT,  REFERENCED_TABLE_SCHEMA,  REFERENCED_TABLE_NAME,  REFERENCED_COLUMN_NAME FROM Keycolumnusage WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@POSITION_IN_UNIQUE_CONSTRAINT" value="POSITION_IN_UNIQUE_CONSTRAINT" script="POSITION_IN_UNIQUE_CONSTRAINT"/>
                <paramer name="@REFERENCED_TABLE_SCHEMA" value="REFERENCED_TABLE_SCHEMA" script="REFERENCED_TABLE_SCHEMA"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
                <paramer name="@REFERENCED_COLUMN_NAME" value="REFERENCED_COLUMN_NAME" script="REFERENCED_COLUMN_NAME"/>
            </Paramers>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：删除-删除表中一条记录。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.DELETE" type="sqlserver">
            <TEXT>
            DELETE Keycolumnusage WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@POSITION_IN_UNIQUE_CONSTRAINT" value="POSITION_IN_UNIQUE_CONSTRAINT" script="POSITION_IN_UNIQUE_CONSTRAINT"/>
                <paramer name="@REFERENCED_TABLE_SCHEMA" value="REFERENCED_TABLE_SCHEMA" script="REFERENCED_TABLE_SCHEMA"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
                <paramer name="@REFERENCED_COLUMN_NAME" value="REFERENCED_COLUMN_NAME" script="REFERENCED_COLUMN_NAME"/>
            </Paramers>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT CONSTRAINT_CATALOG AS KeyValue,CONSTRAINT_CATALOG AS KeyText FROM [Keycolumnusage];            
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：查询表中记录的列。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 KEY_COLUMN_USAGE.CONSTRAINT_CATALOG,  KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA,  KEY_COLUMN_USAGE.CONSTRAINT_NAME,  KEY_COLUMN_USAGE.TABLE_CATALOG,  KEY_COLUMN_USAGE.TABLE_SCHEMA,  KEY_COLUMN_USAGE.TABLE_NAME,  KEY_COLUMN_USAGE.COLUMN_NAME,  KEY_COLUMN_USAGE.ORDINAL_POSITION,  KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT,  KEY_COLUMN_USAGE.REFERENCED_TABLE_SCHEMA,  KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME,  KEY_COLUMN_USAGE.REFERENCED_COLUMN_NAME                
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：表名。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.DBTABLE" type="sqlserver">
            <TEXT>
            Keycolumnusage 
            
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：联合查询表中记录的列。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             KEY_COLUMN_USAGE.CONSTRAINT_CATALOG,  KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA,  KEY_COLUMN_USAGE.CONSTRAINT_NAME,  KEY_COLUMN_USAGE.TABLE_CATALOG,  KEY_COLUMN_USAGE.TABLE_SCHEMA,  KEY_COLUMN_USAGE.TABLE_NAME,  KEY_COLUMN_USAGE.COLUMN_NAME,  KEY_COLUMN_USAGE.ORDINAL_POSITION,  KEY_COLUMN_USAGE.POSITION_IN_UNIQUE_CONSTRAINT,  KEY_COLUMN_USAGE.REFERENCED_TABLE_SCHEMA,  KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME,  KEY_COLUMN_USAGE.REFERENCED_COLUMN_NAME                       
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：联合查询表中记录的表名。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.DBTABLEEX" type="sqlserver">
            <TEXT>
            Keycolumnusage 
            
            </TEXT>
        </SQL>

        <!--【KEY_COLUMN_USAGE】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.KEYCOLUMNUSAGE.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            KEY_COLUMN_USAGE.CONSTRAINT_CATALOG, ;KEY_COLUMN_USAGE.CONSTRAINT_SCHEMA, ;KEY_COLUMN_USAGE.CONSTRAINT_NAME, ;KEY_COLUMN_USAGE.TABLE_CATALOG, ;KEY_COLUMN_USAGE.TABLE_SCHEMA, ;KEY_COLUMN_USAGE.TABLE_NAME, ;KEY_COLUMN_USAGE.COLUMN_NAME, ;KEY_COLUMN_USAGE.REFERENCED_TABLE_SCHEMA, ;KEY_COLUMN_USAGE.REFERENCED_TABLE_NAME, ;KEY_COLUMN_USAGE.REFERENCED_COLUMN_NAME,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Parameters" script="数据库表【Parameters】的基本数据库操作">
        <!--【PARAMETERS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.PARAMETERS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Parameters(SPECIFIC_CATALOG , SPECIFIC_SCHEMA , SPECIFIC_NAME , ORDINAL_POSITION , PARAMETER_MODE , PARAMETER_NAME , DATA_TYPE , CHARACTER_MAXIMUM_LENGTH , CHARACTER_OCTET_LENGTH , NUMERIC_PRECISION , NUMERIC_SCALE , CHARACTER_SET_NAME , COLLATION_NAME , DTD_IDENTIFIER , ROUTINE_TYPE ) VALUES(@SPECIFIC_CATALOG , @SPECIFIC_SCHEMA , @SPECIFIC_NAME , @ORDINAL_POSITION , @PARAMETER_MODE , @PARAMETER_NAME , @DATA_TYPE , @CHARACTER_MAXIMUM_LENGTH , @CHARACTER_OCTET_LENGTH , @NUMERIC_PRECISION , @NUMERIC_SCALE , @CHARACTER_SET_NAME , @COLLATION_NAME , @DTD_IDENTIFIER , @ROUTINE_TYPE )
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_CATALOG" value="SPECIFIC_CATALOG" script="SPECIFIC_CATALOG"/>
                <paramer name="@SPECIFIC_SCHEMA" value="SPECIFIC_SCHEMA" script="SPECIFIC_SCHEMA"/>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@PARAMETER_MODE" value="PARAMETER_MODE" script="PARAMETER_MODE"/>
                <paramer name="@PARAMETER_NAME" value="PARAMETER_NAME" script="PARAMETER_NAME"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
            </Paramers>
        </SQL>

        <!--【PARAMETERS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.PARAMETERS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Parameters SET SPECIFIC_CATALOG = @SPECIFIC_CATALOG ,SPECIFIC_SCHEMA = @SPECIFIC_SCHEMA ,SPECIFIC_NAME = @SPECIFIC_NAME ,ORDINAL_POSITION = @ORDINAL_POSITION ,PARAMETER_MODE = @PARAMETER_MODE ,PARAMETER_NAME = @PARAMETER_NAME ,DATA_TYPE = @DATA_TYPE ,CHARACTER_MAXIMUM_LENGTH = @CHARACTER_MAXIMUM_LENGTH ,CHARACTER_OCTET_LENGTH = @CHARACTER_OCTET_LENGTH ,NUMERIC_PRECISION = @NUMERIC_PRECISION ,NUMERIC_SCALE = @NUMERIC_SCALE ,CHARACTER_SET_NAME = @CHARACTER_SET_NAME ,COLLATION_NAME = @COLLATION_NAME ,DTD_IDENTIFIER = @DTD_IDENTIFIER ,ROUTINE_TYPE = @ROUTINE_TYPE  WHERE SPECIFIC_CATALOG = @SPECIFIC_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_CATALOG" value="SPECIFIC_CATALOG" script="SPECIFIC_CATALOG"/>
                <paramer name="@SPECIFIC_SCHEMA" value="SPECIFIC_SCHEMA" script="SPECIFIC_SCHEMA"/>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@PARAMETER_MODE" value="PARAMETER_MODE" script="PARAMETER_MODE"/>
                <paramer name="@PARAMETER_NAME" value="PARAMETER_NAME" script="PARAMETER_NAME"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
            </Paramers>
        </SQL>

        <!--【PARAMETERS】：查询-取得表中一条记录。-->
        <SQL id="DATA.PARAMETERS.GET" type="sqlserver">
            <TEXT>
            SELECT  SPECIFIC_CATALOG,  SPECIFIC_SCHEMA,  SPECIFIC_NAME,  ORDINAL_POSITION,  PARAMETER_MODE,  PARAMETER_NAME,  DATA_TYPE,  CHARACTER_MAXIMUM_LENGTH,  CHARACTER_OCTET_LENGTH,  NUMERIC_PRECISION,  NUMERIC_SCALE,  CHARACTER_SET_NAME,  COLLATION_NAME,  DTD_IDENTIFIER,  ROUTINE_TYPE FROM Parameters WHERE SPECIFIC_CATALOG = @SPECIFIC_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_CATALOG" value="SPECIFIC_CATALOG" script="SPECIFIC_CATALOG"/>
                <paramer name="@SPECIFIC_SCHEMA" value="SPECIFIC_SCHEMA" script="SPECIFIC_SCHEMA"/>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@PARAMETER_MODE" value="PARAMETER_MODE" script="PARAMETER_MODE"/>
                <paramer name="@PARAMETER_NAME" value="PARAMETER_NAME" script="PARAMETER_NAME"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
            </Paramers>
        </SQL>

        <!--【PARAMETERS】：删除-删除表中一条记录。-->
        <SQL id="DATA.PARAMETERS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Parameters WHERE SPECIFIC_CATALOG = @SPECIFIC_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_CATALOG" value="SPECIFIC_CATALOG" script="SPECIFIC_CATALOG"/>
                <paramer name="@SPECIFIC_SCHEMA" value="SPECIFIC_SCHEMA" script="SPECIFIC_SCHEMA"/>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ORDINAL_POSITION" value="ORDINAL_POSITION" script="ORDINAL_POSITION"/>
                <paramer name="@PARAMETER_MODE" value="PARAMETER_MODE" script="PARAMETER_MODE"/>
                <paramer name="@PARAMETER_NAME" value="PARAMETER_NAME" script="PARAMETER_NAME"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
            </Paramers>
        </SQL>

        <!--【PARAMETERS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.PARAMETERS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT SPECIFIC_CATALOG AS KeyValue,SPECIFIC_CATALOG AS KeyText FROM [Parameters];            
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.PARAMETERS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.PARAMETERS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：查询表中记录的列。-->
        <SQL id="DATA.PARAMETERS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 PARAMETERS.SPECIFIC_CATALOG,  PARAMETERS.SPECIFIC_SCHEMA,  PARAMETERS.SPECIFIC_NAME,  PARAMETERS.ORDINAL_POSITION,  PARAMETERS.PARAMETER_MODE,  PARAMETERS.PARAMETER_NAME,  PARAMETERS.DATA_TYPE,  PARAMETERS.CHARACTER_MAXIMUM_LENGTH,  PARAMETERS.CHARACTER_OCTET_LENGTH,  PARAMETERS.NUMERIC_PRECISION,  PARAMETERS.NUMERIC_SCALE,  PARAMETERS.CHARACTER_SET_NAME,  PARAMETERS.COLLATION_NAME,  PARAMETERS.DTD_IDENTIFIER,  PARAMETERS.ROUTINE_TYPE                
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：表名。-->
        <SQL id="DATA.PARAMETERS.DBTABLE" type="sqlserver">
            <TEXT>
            Parameters 
            
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：联合查询表中记录的列。-->
        <SQL id="DATA.PARAMETERS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             PARAMETERS.SPECIFIC_CATALOG,  PARAMETERS.SPECIFIC_SCHEMA,  PARAMETERS.SPECIFIC_NAME,  PARAMETERS.ORDINAL_POSITION,  PARAMETERS.PARAMETER_MODE,  PARAMETERS.PARAMETER_NAME,  PARAMETERS.DATA_TYPE,  PARAMETERS.CHARACTER_MAXIMUM_LENGTH,  PARAMETERS.CHARACTER_OCTET_LENGTH,  PARAMETERS.NUMERIC_PRECISION,  PARAMETERS.NUMERIC_SCALE,  PARAMETERS.CHARACTER_SET_NAME,  PARAMETERS.COLLATION_NAME,  PARAMETERS.DTD_IDENTIFIER,  PARAMETERS.ROUTINE_TYPE                       
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：联合查询表中记录的表名。-->
        <SQL id="DATA.PARAMETERS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Parameters 
            
            </TEXT>
        </SQL>

        <!--【PARAMETERS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.PARAMETERS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            PARAMETERS.SPECIFIC_CATALOG, ;PARAMETERS.SPECIFIC_SCHEMA, ;PARAMETERS.SPECIFIC_NAME, ;PARAMETERS.PARAMETER_MODE, ;PARAMETERS.PARAMETER_NAME, ;PARAMETERS.DATA_TYPE, ;PARAMETERS.CHARACTER_SET_NAME, ;PARAMETERS.COLLATION_NAME, ;PARAMETERS.DTD_IDENTIFIER, ;PARAMETERS.ROUTINE_TYPE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Partitions" script="数据库表【Partitions】的基本数据库操作">
        <!--【PARTITIONS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.PARTITIONS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Partitions(TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , PARTITION_NAME , SUBPARTITION_NAME , PARTITION_ORDINAL_POSITION , SUBPARTITION_ORDINAL_POSITION , PARTITION_METHOD , SUBPARTITION_METHOD , PARTITION_EXPRESSION , SUBPARTITION_EXPRESSION , PARTITION_DESCRIPTION , TABLE_ROWS , AVG_ROW_LENGTH , DATA_LENGTH , MAX_DATA_LENGTH , INDEX_LENGTH , DATA_FREE , CREATE_TIME , UPDATE_TIME , CHECK_TIME , CHECKSUM , PARTITION_COMMENT , NODEGROUP , TABLESPACE_NAME ) VALUES(@TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @PARTITION_NAME , @SUBPARTITION_NAME , @PARTITION_ORDINAL_POSITION , @SUBPARTITION_ORDINAL_POSITION , @PARTITION_METHOD , @SUBPARTITION_METHOD , @PARTITION_EXPRESSION , @SUBPARTITION_EXPRESSION , @PARTITION_DESCRIPTION , @TABLE_ROWS , @AVG_ROW_LENGTH , @DATA_LENGTH , @MAX_DATA_LENGTH , @INDEX_LENGTH , @DATA_FREE , @CREATE_TIME , @UPDATE_TIME , @CHECK_TIME , @CHECKSUM , @PARTITION_COMMENT , @NODEGROUP , @TABLESPACE_NAME )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PARTITION_NAME" value="PARTITION_NAME" script="PARTITION_NAME"/>
                <paramer name="@SUBPARTITION_NAME" value="SUBPARTITION_NAME" script="SUBPARTITION_NAME"/>
                <paramer name="@PARTITION_ORDINAL_POSITION" value="PARTITION_ORDINAL_POSITION" script="PARTITION_ORDINAL_POSITION"/>
                <paramer name="@SUBPARTITION_ORDINAL_POSITION" value="SUBPARTITION_ORDINAL_POSITION" script="SUBPARTITION_ORDINAL_POSITION"/>
                <paramer name="@PARTITION_METHOD" value="PARTITION_METHOD" script="PARTITION_METHOD"/>
                <paramer name="@SUBPARTITION_METHOD" value="SUBPARTITION_METHOD" script="SUBPARTITION_METHOD"/>
                <paramer name="@PARTITION_EXPRESSION" value="PARTITION_EXPRESSION" script="PARTITION_EXPRESSION"/>
                <paramer name="@SUBPARTITION_EXPRESSION" value="SUBPARTITION_EXPRESSION" script="SUBPARTITION_EXPRESSION"/>
                <paramer name="@PARTITION_DESCRIPTION" value="PARTITION_DESCRIPTION" script="PARTITION_DESCRIPTION"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@PARTITION_COMMENT" value="PARTITION_COMMENT" script="PARTITION_COMMENT"/>
                <paramer name="@NODEGROUP" value="NODEGROUP" script="NODEGROUP"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
            </Paramers>
        </SQL>

        <!--【PARTITIONS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.PARTITIONS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Partitions SET TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,PARTITION_NAME = @PARTITION_NAME ,SUBPARTITION_NAME = @SUBPARTITION_NAME ,PARTITION_ORDINAL_POSITION = @PARTITION_ORDINAL_POSITION ,SUBPARTITION_ORDINAL_POSITION = @SUBPARTITION_ORDINAL_POSITION ,PARTITION_METHOD = @PARTITION_METHOD ,SUBPARTITION_METHOD = @SUBPARTITION_METHOD ,PARTITION_EXPRESSION = @PARTITION_EXPRESSION ,SUBPARTITION_EXPRESSION = @SUBPARTITION_EXPRESSION ,PARTITION_DESCRIPTION = @PARTITION_DESCRIPTION ,TABLE_ROWS = @TABLE_ROWS ,AVG_ROW_LENGTH = @AVG_ROW_LENGTH ,DATA_LENGTH = @DATA_LENGTH ,MAX_DATA_LENGTH = @MAX_DATA_LENGTH ,INDEX_LENGTH = @INDEX_LENGTH ,DATA_FREE = @DATA_FREE ,CREATE_TIME = @CREATE_TIME ,UPDATE_TIME = @UPDATE_TIME ,CHECK_TIME = @CHECK_TIME ,CHECKSUM = @CHECKSUM ,PARTITION_COMMENT = @PARTITION_COMMENT ,NODEGROUP = @NODEGROUP ,TABLESPACE_NAME = @TABLESPACE_NAME  WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PARTITION_NAME" value="PARTITION_NAME" script="PARTITION_NAME"/>
                <paramer name="@SUBPARTITION_NAME" value="SUBPARTITION_NAME" script="SUBPARTITION_NAME"/>
                <paramer name="@PARTITION_ORDINAL_POSITION" value="PARTITION_ORDINAL_POSITION" script="PARTITION_ORDINAL_POSITION"/>
                <paramer name="@SUBPARTITION_ORDINAL_POSITION" value="SUBPARTITION_ORDINAL_POSITION" script="SUBPARTITION_ORDINAL_POSITION"/>
                <paramer name="@PARTITION_METHOD" value="PARTITION_METHOD" script="PARTITION_METHOD"/>
                <paramer name="@SUBPARTITION_METHOD" value="SUBPARTITION_METHOD" script="SUBPARTITION_METHOD"/>
                <paramer name="@PARTITION_EXPRESSION" value="PARTITION_EXPRESSION" script="PARTITION_EXPRESSION"/>
                <paramer name="@SUBPARTITION_EXPRESSION" value="SUBPARTITION_EXPRESSION" script="SUBPARTITION_EXPRESSION"/>
                <paramer name="@PARTITION_DESCRIPTION" value="PARTITION_DESCRIPTION" script="PARTITION_DESCRIPTION"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@PARTITION_COMMENT" value="PARTITION_COMMENT" script="PARTITION_COMMENT"/>
                <paramer name="@NODEGROUP" value="NODEGROUP" script="NODEGROUP"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
            </Paramers>
        </SQL>

        <!--【PARTITIONS】：查询-取得表中一条记录。-->
        <SQL id="DATA.PARTITIONS.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  PARTITION_NAME,  SUBPARTITION_NAME,  PARTITION_ORDINAL_POSITION,  SUBPARTITION_ORDINAL_POSITION,  PARTITION_METHOD,  SUBPARTITION_METHOD,  PARTITION_EXPRESSION,  SUBPARTITION_EXPRESSION,  PARTITION_DESCRIPTION,  TABLE_ROWS,  AVG_ROW_LENGTH,  DATA_LENGTH,  MAX_DATA_LENGTH,  INDEX_LENGTH,  DATA_FREE,  CREATE_TIME,  UPDATE_TIME,  CHECK_TIME,  CHECKSUM,  PARTITION_COMMENT,  NODEGROUP,  TABLESPACE_NAME FROM Partitions WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PARTITION_NAME" value="PARTITION_NAME" script="PARTITION_NAME"/>
                <paramer name="@SUBPARTITION_NAME" value="SUBPARTITION_NAME" script="SUBPARTITION_NAME"/>
                <paramer name="@PARTITION_ORDINAL_POSITION" value="PARTITION_ORDINAL_POSITION" script="PARTITION_ORDINAL_POSITION"/>
                <paramer name="@SUBPARTITION_ORDINAL_POSITION" value="SUBPARTITION_ORDINAL_POSITION" script="SUBPARTITION_ORDINAL_POSITION"/>
                <paramer name="@PARTITION_METHOD" value="PARTITION_METHOD" script="PARTITION_METHOD"/>
                <paramer name="@SUBPARTITION_METHOD" value="SUBPARTITION_METHOD" script="SUBPARTITION_METHOD"/>
                <paramer name="@PARTITION_EXPRESSION" value="PARTITION_EXPRESSION" script="PARTITION_EXPRESSION"/>
                <paramer name="@SUBPARTITION_EXPRESSION" value="SUBPARTITION_EXPRESSION" script="SUBPARTITION_EXPRESSION"/>
                <paramer name="@PARTITION_DESCRIPTION" value="PARTITION_DESCRIPTION" script="PARTITION_DESCRIPTION"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@PARTITION_COMMENT" value="PARTITION_COMMENT" script="PARTITION_COMMENT"/>
                <paramer name="@NODEGROUP" value="NODEGROUP" script="NODEGROUP"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
            </Paramers>
        </SQL>

        <!--【PARTITIONS】：删除-删除表中一条记录。-->
        <SQL id="DATA.PARTITIONS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Partitions WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PARTITION_NAME" value="PARTITION_NAME" script="PARTITION_NAME"/>
                <paramer name="@SUBPARTITION_NAME" value="SUBPARTITION_NAME" script="SUBPARTITION_NAME"/>
                <paramer name="@PARTITION_ORDINAL_POSITION" value="PARTITION_ORDINAL_POSITION" script="PARTITION_ORDINAL_POSITION"/>
                <paramer name="@SUBPARTITION_ORDINAL_POSITION" value="SUBPARTITION_ORDINAL_POSITION" script="SUBPARTITION_ORDINAL_POSITION"/>
                <paramer name="@PARTITION_METHOD" value="PARTITION_METHOD" script="PARTITION_METHOD"/>
                <paramer name="@SUBPARTITION_METHOD" value="SUBPARTITION_METHOD" script="SUBPARTITION_METHOD"/>
                <paramer name="@PARTITION_EXPRESSION" value="PARTITION_EXPRESSION" script="PARTITION_EXPRESSION"/>
                <paramer name="@SUBPARTITION_EXPRESSION" value="SUBPARTITION_EXPRESSION" script="SUBPARTITION_EXPRESSION"/>
                <paramer name="@PARTITION_DESCRIPTION" value="PARTITION_DESCRIPTION" script="PARTITION_DESCRIPTION"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@PARTITION_COMMENT" value="PARTITION_COMMENT" script="PARTITION_COMMENT"/>
                <paramer name="@NODEGROUP" value="NODEGROUP" script="NODEGROUP"/>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
            </Paramers>
        </SQL>

        <!--【PARTITIONS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.PARTITIONS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLE_CATALOG AS KeyValue,TABLE_CATALOG AS KeyText FROM [Partitions];            
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.PARTITIONS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.PARTITIONS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：查询表中记录的列。-->
        <SQL id="DATA.PARTITIONS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 PARTITIONS.TABLE_CATALOG,  PARTITIONS.TABLE_SCHEMA,  PARTITIONS.TABLE_NAME,  PARTITIONS.PARTITION_NAME,  PARTITIONS.SUBPARTITION_NAME,  PARTITIONS.PARTITION_ORDINAL_POSITION,  PARTITIONS.SUBPARTITION_ORDINAL_POSITION,  PARTITIONS.PARTITION_METHOD,  PARTITIONS.SUBPARTITION_METHOD,  PARTITIONS.PARTITION_EXPRESSION,  PARTITIONS.SUBPARTITION_EXPRESSION,  PARTITIONS.PARTITION_DESCRIPTION,  PARTITIONS.TABLE_ROWS,  PARTITIONS.AVG_ROW_LENGTH,  PARTITIONS.DATA_LENGTH,  PARTITIONS.MAX_DATA_LENGTH,  PARTITIONS.INDEX_LENGTH,  PARTITIONS.DATA_FREE,  PARTITIONS.CREATE_TIME,  PARTITIONS.UPDATE_TIME,  PARTITIONS.CHECK_TIME,  PARTITIONS.CHECKSUM,  PARTITIONS.PARTITION_COMMENT,  PARTITIONS.NODEGROUP,  PARTITIONS.TABLESPACE_NAME                
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：表名。-->
        <SQL id="DATA.PARTITIONS.DBTABLE" type="sqlserver">
            <TEXT>
            Partitions 
            
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：联合查询表中记录的列。-->
        <SQL id="DATA.PARTITIONS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             PARTITIONS.TABLE_CATALOG,  PARTITIONS.TABLE_SCHEMA,  PARTITIONS.TABLE_NAME,  PARTITIONS.PARTITION_NAME,  PARTITIONS.SUBPARTITION_NAME,  PARTITIONS.PARTITION_ORDINAL_POSITION,  PARTITIONS.SUBPARTITION_ORDINAL_POSITION,  PARTITIONS.PARTITION_METHOD,  PARTITIONS.SUBPARTITION_METHOD,  PARTITIONS.PARTITION_EXPRESSION,  PARTITIONS.SUBPARTITION_EXPRESSION,  PARTITIONS.PARTITION_DESCRIPTION,  PARTITIONS.TABLE_ROWS,  PARTITIONS.AVG_ROW_LENGTH,  PARTITIONS.DATA_LENGTH,  PARTITIONS.MAX_DATA_LENGTH,  PARTITIONS.INDEX_LENGTH,  PARTITIONS.DATA_FREE,  PARTITIONS.CREATE_TIME,  PARTITIONS.UPDATE_TIME,  PARTITIONS.CHECK_TIME,  PARTITIONS.CHECKSUM,  PARTITIONS.PARTITION_COMMENT,  PARTITIONS.NODEGROUP,  PARTITIONS.TABLESPACE_NAME                       
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：联合查询表中记录的表名。-->
        <SQL id="DATA.PARTITIONS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Partitions 
            
            </TEXT>
        </SQL>

        <!--【PARTITIONS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.PARTITIONS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            PARTITIONS.TABLE_CATALOG, ;PARTITIONS.TABLE_SCHEMA, ;PARTITIONS.TABLE_NAME, ;PARTITIONS.PARTITION_NAME, ;PARTITIONS.SUBPARTITION_NAME, ;PARTITIONS.PARTITION_METHOD, ;PARTITIONS.SUBPARTITION_METHOD, ;PARTITIONS.PARTITION_EXPRESSION, ;PARTITIONS.SUBPARTITION_EXPRESSION, ;PARTITIONS.PARTITION_DESCRIPTION, ;PARTITIONS.PARTITION_COMMENT, ;PARTITIONS.NODEGROUP, ;PARTITIONS.TABLESPACE_NAME,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Plugins" script="数据库表【Plugins】的基本数据库操作">
        <!--【PLUGINS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.PLUGINS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Plugins(PLUGIN_NAME , PLUGIN_VERSION , PLUGIN_STATUS , PLUGIN_TYPE , PLUGIN_TYPE_VERSION , PLUGIN_LIBRARY , PLUGIN_LIBRARY_VERSION , PLUGIN_AUTHOR , PLUGIN_DESCRIPTION , PLUGIN_LICENSE , LOAD_OPTION ) VALUES(@PLUGIN_NAME , @PLUGIN_VERSION , @PLUGIN_STATUS , @PLUGIN_TYPE , @PLUGIN_TYPE_VERSION , @PLUGIN_LIBRARY , @PLUGIN_LIBRARY_VERSION , @PLUGIN_AUTHOR , @PLUGIN_DESCRIPTION , @PLUGIN_LICENSE , @LOAD_OPTION )
            
            </TEXT>

            <Paramers>
                <paramer name="@PLUGIN_NAME" value="PLUGIN_NAME" script="PLUGIN_NAME"/>
                <paramer name="@PLUGIN_VERSION" value="PLUGIN_VERSION" script="PLUGIN_VERSION"/>
                <paramer name="@PLUGIN_STATUS" value="PLUGIN_STATUS" script="PLUGIN_STATUS"/>
                <paramer name="@PLUGIN_TYPE" value="PLUGIN_TYPE" script="PLUGIN_TYPE"/>
                <paramer name="@PLUGIN_TYPE_VERSION" value="PLUGIN_TYPE_VERSION" script="PLUGIN_TYPE_VERSION"/>
                <paramer name="@PLUGIN_LIBRARY" value="PLUGIN_LIBRARY" script="PLUGIN_LIBRARY"/>
                <paramer name="@PLUGIN_LIBRARY_VERSION" value="PLUGIN_LIBRARY_VERSION" script="PLUGIN_LIBRARY_VERSION"/>
                <paramer name="@PLUGIN_AUTHOR" value="PLUGIN_AUTHOR" script="PLUGIN_AUTHOR"/>
                <paramer name="@PLUGIN_DESCRIPTION" value="PLUGIN_DESCRIPTION" script="PLUGIN_DESCRIPTION"/>
                <paramer name="@PLUGIN_LICENSE" value="PLUGIN_LICENSE" script="PLUGIN_LICENSE"/>
                <paramer name="@LOAD_OPTION" value="LOAD_OPTION" script="LOAD_OPTION"/>
            </Paramers>
        </SQL>

        <!--【PLUGINS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.PLUGINS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Plugins SET PLUGIN_NAME = @PLUGIN_NAME ,PLUGIN_VERSION = @PLUGIN_VERSION ,PLUGIN_STATUS = @PLUGIN_STATUS ,PLUGIN_TYPE = @PLUGIN_TYPE ,PLUGIN_TYPE_VERSION = @PLUGIN_TYPE_VERSION ,PLUGIN_LIBRARY = @PLUGIN_LIBRARY ,PLUGIN_LIBRARY_VERSION = @PLUGIN_LIBRARY_VERSION ,PLUGIN_AUTHOR = @PLUGIN_AUTHOR ,PLUGIN_DESCRIPTION = @PLUGIN_DESCRIPTION ,PLUGIN_LICENSE = @PLUGIN_LICENSE ,LOAD_OPTION = @LOAD_OPTION  WHERE PLUGIN_NAME = @PLUGIN_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@PLUGIN_NAME" value="PLUGIN_NAME" script="PLUGIN_NAME"/>
                <paramer name="@PLUGIN_VERSION" value="PLUGIN_VERSION" script="PLUGIN_VERSION"/>
                <paramer name="@PLUGIN_STATUS" value="PLUGIN_STATUS" script="PLUGIN_STATUS"/>
                <paramer name="@PLUGIN_TYPE" value="PLUGIN_TYPE" script="PLUGIN_TYPE"/>
                <paramer name="@PLUGIN_TYPE_VERSION" value="PLUGIN_TYPE_VERSION" script="PLUGIN_TYPE_VERSION"/>
                <paramer name="@PLUGIN_LIBRARY" value="PLUGIN_LIBRARY" script="PLUGIN_LIBRARY"/>
                <paramer name="@PLUGIN_LIBRARY_VERSION" value="PLUGIN_LIBRARY_VERSION" script="PLUGIN_LIBRARY_VERSION"/>
                <paramer name="@PLUGIN_AUTHOR" value="PLUGIN_AUTHOR" script="PLUGIN_AUTHOR"/>
                <paramer name="@PLUGIN_DESCRIPTION" value="PLUGIN_DESCRIPTION" script="PLUGIN_DESCRIPTION"/>
                <paramer name="@PLUGIN_LICENSE" value="PLUGIN_LICENSE" script="PLUGIN_LICENSE"/>
                <paramer name="@LOAD_OPTION" value="LOAD_OPTION" script="LOAD_OPTION"/>
            </Paramers>
        </SQL>

        <!--【PLUGINS】：查询-取得表中一条记录。-->
        <SQL id="DATA.PLUGINS.GET" type="sqlserver">
            <TEXT>
            SELECT  PLUGIN_NAME,  PLUGIN_VERSION,  PLUGIN_STATUS,  PLUGIN_TYPE,  PLUGIN_TYPE_VERSION,  PLUGIN_LIBRARY,  PLUGIN_LIBRARY_VERSION,  PLUGIN_AUTHOR,  PLUGIN_DESCRIPTION,  PLUGIN_LICENSE,  LOAD_OPTION FROM Plugins WHERE PLUGIN_NAME = @PLUGIN_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@PLUGIN_NAME" value="PLUGIN_NAME" script="PLUGIN_NAME"/>
                <paramer name="@PLUGIN_VERSION" value="PLUGIN_VERSION" script="PLUGIN_VERSION"/>
                <paramer name="@PLUGIN_STATUS" value="PLUGIN_STATUS" script="PLUGIN_STATUS"/>
                <paramer name="@PLUGIN_TYPE" value="PLUGIN_TYPE" script="PLUGIN_TYPE"/>
                <paramer name="@PLUGIN_TYPE_VERSION" value="PLUGIN_TYPE_VERSION" script="PLUGIN_TYPE_VERSION"/>
                <paramer name="@PLUGIN_LIBRARY" value="PLUGIN_LIBRARY" script="PLUGIN_LIBRARY"/>
                <paramer name="@PLUGIN_LIBRARY_VERSION" value="PLUGIN_LIBRARY_VERSION" script="PLUGIN_LIBRARY_VERSION"/>
                <paramer name="@PLUGIN_AUTHOR" value="PLUGIN_AUTHOR" script="PLUGIN_AUTHOR"/>
                <paramer name="@PLUGIN_DESCRIPTION" value="PLUGIN_DESCRIPTION" script="PLUGIN_DESCRIPTION"/>
                <paramer name="@PLUGIN_LICENSE" value="PLUGIN_LICENSE" script="PLUGIN_LICENSE"/>
                <paramer name="@LOAD_OPTION" value="LOAD_OPTION" script="LOAD_OPTION"/>
            </Paramers>
        </SQL>

        <!--【PLUGINS】：删除-删除表中一条记录。-->
        <SQL id="DATA.PLUGINS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Plugins WHERE PLUGIN_NAME = @PLUGIN_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@PLUGIN_NAME" value="PLUGIN_NAME" script="PLUGIN_NAME"/>
                <paramer name="@PLUGIN_VERSION" value="PLUGIN_VERSION" script="PLUGIN_VERSION"/>
                <paramer name="@PLUGIN_STATUS" value="PLUGIN_STATUS" script="PLUGIN_STATUS"/>
                <paramer name="@PLUGIN_TYPE" value="PLUGIN_TYPE" script="PLUGIN_TYPE"/>
                <paramer name="@PLUGIN_TYPE_VERSION" value="PLUGIN_TYPE_VERSION" script="PLUGIN_TYPE_VERSION"/>
                <paramer name="@PLUGIN_LIBRARY" value="PLUGIN_LIBRARY" script="PLUGIN_LIBRARY"/>
                <paramer name="@PLUGIN_LIBRARY_VERSION" value="PLUGIN_LIBRARY_VERSION" script="PLUGIN_LIBRARY_VERSION"/>
                <paramer name="@PLUGIN_AUTHOR" value="PLUGIN_AUTHOR" script="PLUGIN_AUTHOR"/>
                <paramer name="@PLUGIN_DESCRIPTION" value="PLUGIN_DESCRIPTION" script="PLUGIN_DESCRIPTION"/>
                <paramer name="@PLUGIN_LICENSE" value="PLUGIN_LICENSE" script="PLUGIN_LICENSE"/>
                <paramer name="@LOAD_OPTION" value="LOAD_OPTION" script="LOAD_OPTION"/>
            </Paramers>
        </SQL>

        <!--【PLUGINS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.PLUGINS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT PLUGIN_NAME AS KeyValue,PLUGIN_NAME AS KeyText FROM [Plugins];            
            </TEXT>
        </SQL>

        <!--【PLUGINS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.PLUGINS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PLUGINS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.PLUGINS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PLUGINS】：查询表中记录的列。-->
        <SQL id="DATA.PLUGINS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 PLUGINS.PLUGIN_NAME,  PLUGINS.PLUGIN_VERSION,  PLUGINS.PLUGIN_STATUS,  PLUGINS.PLUGIN_TYPE,  PLUGINS.PLUGIN_TYPE_VERSION,  PLUGINS.PLUGIN_LIBRARY,  PLUGINS.PLUGIN_LIBRARY_VERSION,  PLUGINS.PLUGIN_AUTHOR,  PLUGINS.PLUGIN_DESCRIPTION,  PLUGINS.PLUGIN_LICENSE,  PLUGINS.LOAD_OPTION                
            </TEXT>
        </SQL>

        <!--【PLUGINS】：表名。-->
        <SQL id="DATA.PLUGINS.DBTABLE" type="sqlserver">
            <TEXT>
            Plugins 
            
            </TEXT>
        </SQL>

        <!--【PLUGINS】：联合查询表中记录的列。-->
        <SQL id="DATA.PLUGINS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             PLUGINS.PLUGIN_NAME,  PLUGINS.PLUGIN_VERSION,  PLUGINS.PLUGIN_STATUS,  PLUGINS.PLUGIN_TYPE,  PLUGINS.PLUGIN_TYPE_VERSION,  PLUGINS.PLUGIN_LIBRARY,  PLUGINS.PLUGIN_LIBRARY_VERSION,  PLUGINS.PLUGIN_AUTHOR,  PLUGINS.PLUGIN_DESCRIPTION,  PLUGINS.PLUGIN_LICENSE,  PLUGINS.LOAD_OPTION                       
            </TEXT>
        </SQL>

        <!--【PLUGINS】：联合查询表中记录的表名。-->
        <SQL id="DATA.PLUGINS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Plugins 
            
            </TEXT>
        </SQL>

        <!--【PLUGINS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.PLUGINS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            PLUGINS.PLUGIN_NAME, ;PLUGINS.PLUGIN_VERSION, ;PLUGINS.PLUGIN_STATUS, ;PLUGINS.PLUGIN_TYPE, ;PLUGINS.PLUGIN_TYPE_VERSION, ;PLUGINS.PLUGIN_LIBRARY, ;PLUGINS.PLUGIN_LIBRARY_VERSION, ;PLUGINS.PLUGIN_AUTHOR, ;PLUGINS.PLUGIN_DESCRIPTION, ;PLUGINS.PLUGIN_LICENSE, ;PLUGINS.LOAD_OPTION,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Processlist" script="数据库表【Processlist】的基本数据库操作">
        <!--【PROCESSLIST】：添加-向表中添加一条记录。-->
        <SQL id="DATA.PROCESSLIST.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Processlist(ID , USER , HOST , DB , COMMAND , TIME , STATE , INFO ) VALUES(@ID , @USER , @HOST , @DB , @COMMAND , @TIME , @STATE , @INFO )
            
            </TEXT>

            <Paramers>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@USER" value="USER" script="USER"/>
                <paramer name="@HOST" value="HOST" script="HOST"/>
                <paramer name="@DB" value="DB" script="DB"/>
                <paramer name="@COMMAND" value="COMMAND" script="COMMAND"/>
                <paramer name="@TIME" value="TIME" script="TIME"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@INFO" value="INFO" script="INFO"/>
            </Paramers>
        </SQL>

        <!--【PROCESSLIST】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.PROCESSLIST.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Processlist SET ID = @ID ,USER = @USER ,HOST = @HOST ,DB = @DB ,COMMAND = @COMMAND ,TIME = @TIME ,STATE = @STATE ,INFO = @INFO  WHERE ID = @ID
            
            </TEXT>

            <Paramers>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@USER" value="USER" script="USER"/>
                <paramer name="@HOST" value="HOST" script="HOST"/>
                <paramer name="@DB" value="DB" script="DB"/>
                <paramer name="@COMMAND" value="COMMAND" script="COMMAND"/>
                <paramer name="@TIME" value="TIME" script="TIME"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@INFO" value="INFO" script="INFO"/>
            </Paramers>
        </SQL>

        <!--【PROCESSLIST】：查询-取得表中一条记录。-->
        <SQL id="DATA.PROCESSLIST.GET" type="sqlserver">
            <TEXT>
            SELECT  ID,  USER,  HOST,  DB,  COMMAND,  TIME,  STATE,  INFO FROM Processlist WHERE ID = @ID
            
            </TEXT>

            <Paramers>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@USER" value="USER" script="USER"/>
                <paramer name="@HOST" value="HOST" script="HOST"/>
                <paramer name="@DB" value="DB" script="DB"/>
                <paramer name="@COMMAND" value="COMMAND" script="COMMAND"/>
                <paramer name="@TIME" value="TIME" script="TIME"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@INFO" value="INFO" script="INFO"/>
            </Paramers>
        </SQL>

        <!--【PROCESSLIST】：删除-删除表中一条记录。-->
        <SQL id="DATA.PROCESSLIST.DELETE" type="sqlserver">
            <TEXT>
            DELETE Processlist WHERE ID = @ID
            
            </TEXT>

            <Paramers>
                <paramer name="@ID" value="ID" script="ID"/>
                <paramer name="@USER" value="USER" script="USER"/>
                <paramer name="@HOST" value="HOST" script="HOST"/>
                <paramer name="@DB" value="DB" script="DB"/>
                <paramer name="@COMMAND" value="COMMAND" script="COMMAND"/>
                <paramer name="@TIME" value="TIME" script="TIME"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@INFO" value="INFO" script="INFO"/>
            </Paramers>
        </SQL>

        <!--【PROCESSLIST】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.PROCESSLIST.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT ID AS KeyValue,USER AS KeyText FROM [Processlist];            
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.PROCESSLIST.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.PROCESSLIST.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：查询表中记录的列。-->
        <SQL id="DATA.PROCESSLIST.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 PROCESSLIST.ID,  PROCESSLIST.USER,  PROCESSLIST.HOST,  PROCESSLIST.DB,  PROCESSLIST.COMMAND,  PROCESSLIST.TIME,  PROCESSLIST.STATE,  PROCESSLIST.INFO                
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：表名。-->
        <SQL id="DATA.PROCESSLIST.DBTABLE" type="sqlserver">
            <TEXT>
            Processlist 
            
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：联合查询表中记录的列。-->
        <SQL id="DATA.PROCESSLIST.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             PROCESSLIST.ID,  PROCESSLIST.USER,  PROCESSLIST.HOST,  PROCESSLIST.DB,  PROCESSLIST.COMMAND,  PROCESSLIST.TIME,  PROCESSLIST.STATE,  PROCESSLIST.INFO                       
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：联合查询表中记录的表名。-->
        <SQL id="DATA.PROCESSLIST.DBTABLEEX" type="sqlserver">
            <TEXT>
            Processlist 
            
            </TEXT>
        </SQL>

        <!--【PROCESSLIST】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.PROCESSLIST.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            PROCESSLIST.USER, ;PROCESSLIST.HOST, ;PROCESSLIST.DB, ;PROCESSLIST.COMMAND, ;PROCESSLIST.STATE, ;PROCESSLIST.INFO,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Profiling" script="数据库表【Profiling】的基本数据库操作">
        <!--【PROFILING】：添加-向表中添加一条记录。-->
        <SQL id="DATA.PROFILING.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Profiling(QUERY_ID , SEQ , STATE , DURATION , CPU_USER , CPU_SYSTEM , CONTEXT_VOLUNTARY , CONTEXT_INVOLUNTARY , BLOCK_OPS_IN , BLOCK_OPS_OUT , MESSAGES_SENT , MESSAGES_RECEIVED , PAGE_FAULTS_MAJOR , PAGE_FAULTS_MINOR , SWAPS , SOURCE_FUNCTION , SOURCE_FILE , SOURCE_LINE ) VALUES(@QUERY_ID , @SEQ , @STATE , @DURATION , @CPU_USER , @CPU_SYSTEM , @CONTEXT_VOLUNTARY , @CONTEXT_INVOLUNTARY , @BLOCK_OPS_IN , @BLOCK_OPS_OUT , @MESSAGES_SENT , @MESSAGES_RECEIVED , @PAGE_FAULTS_MAJOR , @PAGE_FAULTS_MINOR , @SWAPS , @SOURCE_FUNCTION , @SOURCE_FILE , @SOURCE_LINE )
            
            </TEXT>

            <Paramers>
                <paramer name="@QUERY_ID" value="QUERY_ID" script="QUERY_ID"/>
                <paramer name="@SEQ" value="SEQ" script="SEQ"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@DURATION" value="DURATION" script="DURATION"/>
                <paramer name="@CPU_USER" value="CPU_USER" script="CPU_USER"/>
                <paramer name="@CPU_SYSTEM" value="CPU_SYSTEM" script="CPU_SYSTEM"/>
                <paramer name="@CONTEXT_VOLUNTARY" value="CONTEXT_VOLUNTARY" script="CONTEXT_VOLUNTARY"/>
                <paramer name="@CONTEXT_INVOLUNTARY" value="CONTEXT_INVOLUNTARY" script="CONTEXT_INVOLUNTARY"/>
                <paramer name="@BLOCK_OPS_IN" value="BLOCK_OPS_IN" script="BLOCK_OPS_IN"/>
                <paramer name="@BLOCK_OPS_OUT" value="BLOCK_OPS_OUT" script="BLOCK_OPS_OUT"/>
                <paramer name="@MESSAGES_SENT" value="MESSAGES_SENT" script="MESSAGES_SENT"/>
                <paramer name="@MESSAGES_RECEIVED" value="MESSAGES_RECEIVED" script="MESSAGES_RECEIVED"/>
                <paramer name="@PAGE_FAULTS_MAJOR" value="PAGE_FAULTS_MAJOR" script="PAGE_FAULTS_MAJOR"/>
                <paramer name="@PAGE_FAULTS_MINOR" value="PAGE_FAULTS_MINOR" script="PAGE_FAULTS_MINOR"/>
                <paramer name="@SWAPS" value="SWAPS" script="SWAPS"/>
                <paramer name="@SOURCE_FUNCTION" value="SOURCE_FUNCTION" script="SOURCE_FUNCTION"/>
                <paramer name="@SOURCE_FILE" value="SOURCE_FILE" script="SOURCE_FILE"/>
                <paramer name="@SOURCE_LINE" value="SOURCE_LINE" script="SOURCE_LINE"/>
            </Paramers>
        </SQL>

        <!--【PROFILING】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.PROFILING.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Profiling SET QUERY_ID = @QUERY_ID ,SEQ = @SEQ ,STATE = @STATE ,DURATION = @DURATION ,CPU_USER = @CPU_USER ,CPU_SYSTEM = @CPU_SYSTEM ,CONTEXT_VOLUNTARY = @CONTEXT_VOLUNTARY ,CONTEXT_INVOLUNTARY = @CONTEXT_INVOLUNTARY ,BLOCK_OPS_IN = @BLOCK_OPS_IN ,BLOCK_OPS_OUT = @BLOCK_OPS_OUT ,MESSAGES_SENT = @MESSAGES_SENT ,MESSAGES_RECEIVED = @MESSAGES_RECEIVED ,PAGE_FAULTS_MAJOR = @PAGE_FAULTS_MAJOR ,PAGE_FAULTS_MINOR = @PAGE_FAULTS_MINOR ,SWAPS = @SWAPS ,SOURCE_FUNCTION = @SOURCE_FUNCTION ,SOURCE_FILE = @SOURCE_FILE ,SOURCE_LINE = @SOURCE_LINE  WHERE QUERY_ID = @QUERY_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@QUERY_ID" value="QUERY_ID" script="QUERY_ID"/>
                <paramer name="@SEQ" value="SEQ" script="SEQ"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@DURATION" value="DURATION" script="DURATION"/>
                <paramer name="@CPU_USER" value="CPU_USER" script="CPU_USER"/>
                <paramer name="@CPU_SYSTEM" value="CPU_SYSTEM" script="CPU_SYSTEM"/>
                <paramer name="@CONTEXT_VOLUNTARY" value="CONTEXT_VOLUNTARY" script="CONTEXT_VOLUNTARY"/>
                <paramer name="@CONTEXT_INVOLUNTARY" value="CONTEXT_INVOLUNTARY" script="CONTEXT_INVOLUNTARY"/>
                <paramer name="@BLOCK_OPS_IN" value="BLOCK_OPS_IN" script="BLOCK_OPS_IN"/>
                <paramer name="@BLOCK_OPS_OUT" value="BLOCK_OPS_OUT" script="BLOCK_OPS_OUT"/>
                <paramer name="@MESSAGES_SENT" value="MESSAGES_SENT" script="MESSAGES_SENT"/>
                <paramer name="@MESSAGES_RECEIVED" value="MESSAGES_RECEIVED" script="MESSAGES_RECEIVED"/>
                <paramer name="@PAGE_FAULTS_MAJOR" value="PAGE_FAULTS_MAJOR" script="PAGE_FAULTS_MAJOR"/>
                <paramer name="@PAGE_FAULTS_MINOR" value="PAGE_FAULTS_MINOR" script="PAGE_FAULTS_MINOR"/>
                <paramer name="@SWAPS" value="SWAPS" script="SWAPS"/>
                <paramer name="@SOURCE_FUNCTION" value="SOURCE_FUNCTION" script="SOURCE_FUNCTION"/>
                <paramer name="@SOURCE_FILE" value="SOURCE_FILE" script="SOURCE_FILE"/>
                <paramer name="@SOURCE_LINE" value="SOURCE_LINE" script="SOURCE_LINE"/>
            </Paramers>
        </SQL>

        <!--【PROFILING】：查询-取得表中一条记录。-->
        <SQL id="DATA.PROFILING.GET" type="sqlserver">
            <TEXT>
            SELECT  QUERY_ID,  SEQ,  STATE,  DURATION,  CPU_USER,  CPU_SYSTEM,  CONTEXT_VOLUNTARY,  CONTEXT_INVOLUNTARY,  BLOCK_OPS_IN,  BLOCK_OPS_OUT,  MESSAGES_SENT,  MESSAGES_RECEIVED,  PAGE_FAULTS_MAJOR,  PAGE_FAULTS_MINOR,  SWAPS,  SOURCE_FUNCTION,  SOURCE_FILE,  SOURCE_LINE FROM Profiling WHERE QUERY_ID = @QUERY_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@QUERY_ID" value="QUERY_ID" script="QUERY_ID"/>
                <paramer name="@SEQ" value="SEQ" script="SEQ"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@DURATION" value="DURATION" script="DURATION"/>
                <paramer name="@CPU_USER" value="CPU_USER" script="CPU_USER"/>
                <paramer name="@CPU_SYSTEM" value="CPU_SYSTEM" script="CPU_SYSTEM"/>
                <paramer name="@CONTEXT_VOLUNTARY" value="CONTEXT_VOLUNTARY" script="CONTEXT_VOLUNTARY"/>
                <paramer name="@CONTEXT_INVOLUNTARY" value="CONTEXT_INVOLUNTARY" script="CONTEXT_INVOLUNTARY"/>
                <paramer name="@BLOCK_OPS_IN" value="BLOCK_OPS_IN" script="BLOCK_OPS_IN"/>
                <paramer name="@BLOCK_OPS_OUT" value="BLOCK_OPS_OUT" script="BLOCK_OPS_OUT"/>
                <paramer name="@MESSAGES_SENT" value="MESSAGES_SENT" script="MESSAGES_SENT"/>
                <paramer name="@MESSAGES_RECEIVED" value="MESSAGES_RECEIVED" script="MESSAGES_RECEIVED"/>
                <paramer name="@PAGE_FAULTS_MAJOR" value="PAGE_FAULTS_MAJOR" script="PAGE_FAULTS_MAJOR"/>
                <paramer name="@PAGE_FAULTS_MINOR" value="PAGE_FAULTS_MINOR" script="PAGE_FAULTS_MINOR"/>
                <paramer name="@SWAPS" value="SWAPS" script="SWAPS"/>
                <paramer name="@SOURCE_FUNCTION" value="SOURCE_FUNCTION" script="SOURCE_FUNCTION"/>
                <paramer name="@SOURCE_FILE" value="SOURCE_FILE" script="SOURCE_FILE"/>
                <paramer name="@SOURCE_LINE" value="SOURCE_LINE" script="SOURCE_LINE"/>
            </Paramers>
        </SQL>

        <!--【PROFILING】：删除-删除表中一条记录。-->
        <SQL id="DATA.PROFILING.DELETE" type="sqlserver">
            <TEXT>
            DELETE Profiling WHERE QUERY_ID = @QUERY_ID
            
            </TEXT>

            <Paramers>
                <paramer name="@QUERY_ID" value="QUERY_ID" script="QUERY_ID"/>
                <paramer name="@SEQ" value="SEQ" script="SEQ"/>
                <paramer name="@STATE" value="STATE" script="STATE"/>
                <paramer name="@DURATION" value="DURATION" script="DURATION"/>
                <paramer name="@CPU_USER" value="CPU_USER" script="CPU_USER"/>
                <paramer name="@CPU_SYSTEM" value="CPU_SYSTEM" script="CPU_SYSTEM"/>
                <paramer name="@CONTEXT_VOLUNTARY" value="CONTEXT_VOLUNTARY" script="CONTEXT_VOLUNTARY"/>
                <paramer name="@CONTEXT_INVOLUNTARY" value="CONTEXT_INVOLUNTARY" script="CONTEXT_INVOLUNTARY"/>
                <paramer name="@BLOCK_OPS_IN" value="BLOCK_OPS_IN" script="BLOCK_OPS_IN"/>
                <paramer name="@BLOCK_OPS_OUT" value="BLOCK_OPS_OUT" script="BLOCK_OPS_OUT"/>
                <paramer name="@MESSAGES_SENT" value="MESSAGES_SENT" script="MESSAGES_SENT"/>
                <paramer name="@MESSAGES_RECEIVED" value="MESSAGES_RECEIVED" script="MESSAGES_RECEIVED"/>
                <paramer name="@PAGE_FAULTS_MAJOR" value="PAGE_FAULTS_MAJOR" script="PAGE_FAULTS_MAJOR"/>
                <paramer name="@PAGE_FAULTS_MINOR" value="PAGE_FAULTS_MINOR" script="PAGE_FAULTS_MINOR"/>
                <paramer name="@SWAPS" value="SWAPS" script="SWAPS"/>
                <paramer name="@SOURCE_FUNCTION" value="SOURCE_FUNCTION" script="SOURCE_FUNCTION"/>
                <paramer name="@SOURCE_FILE" value="SOURCE_FILE" script="SOURCE_FILE"/>
                <paramer name="@SOURCE_LINE" value="SOURCE_LINE" script="SOURCE_LINE"/>
            </Paramers>
        </SQL>

        <!--【PROFILING】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.PROFILING.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT QUERY_ID AS KeyValue,STATE AS KeyText FROM [Profiling];            
            </TEXT>
        </SQL>

        <!--【PROFILING】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.PROFILING.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PROFILING】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.PROFILING.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【PROFILING】：查询表中记录的列。-->
        <SQL id="DATA.PROFILING.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 PROFILING.QUERY_ID,  PROFILING.SEQ,  PROFILING.STATE,  PROFILING.DURATION,  PROFILING.CPU_USER,  PROFILING.CPU_SYSTEM,  PROFILING.CONTEXT_VOLUNTARY,  PROFILING.CONTEXT_INVOLUNTARY,  PROFILING.BLOCK_OPS_IN,  PROFILING.BLOCK_OPS_OUT,  PROFILING.MESSAGES_SENT,  PROFILING.MESSAGES_RECEIVED,  PROFILING.PAGE_FAULTS_MAJOR,  PROFILING.PAGE_FAULTS_MINOR,  PROFILING.SWAPS,  PROFILING.SOURCE_FUNCTION,  PROFILING.SOURCE_FILE,  PROFILING.SOURCE_LINE                
            </TEXT>
        </SQL>

        <!--【PROFILING】：表名。-->
        <SQL id="DATA.PROFILING.DBTABLE" type="sqlserver">
            <TEXT>
            Profiling 
            
            </TEXT>
        </SQL>

        <!--【PROFILING】：联合查询表中记录的列。-->
        <SQL id="DATA.PROFILING.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             PROFILING.QUERY_ID,  PROFILING.SEQ,  PROFILING.STATE,  PROFILING.DURATION,  PROFILING.CPU_USER,  PROFILING.CPU_SYSTEM,  PROFILING.CONTEXT_VOLUNTARY,  PROFILING.CONTEXT_INVOLUNTARY,  PROFILING.BLOCK_OPS_IN,  PROFILING.BLOCK_OPS_OUT,  PROFILING.MESSAGES_SENT,  PROFILING.MESSAGES_RECEIVED,  PROFILING.PAGE_FAULTS_MAJOR,  PROFILING.PAGE_FAULTS_MINOR,  PROFILING.SWAPS,  PROFILING.SOURCE_FUNCTION,  PROFILING.SOURCE_FILE,  PROFILING.SOURCE_LINE                       
            </TEXT>
        </SQL>

        <!--【PROFILING】：联合查询表中记录的表名。-->
        <SQL id="DATA.PROFILING.DBTABLEEX" type="sqlserver">
            <TEXT>
            Profiling 
            
            </TEXT>
        </SQL>

        <!--【PROFILING】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.PROFILING.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            PROFILING.STATE, ;PROFILING.SOURCE_FUNCTION, ;PROFILING.SOURCE_FILE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Referentialconstraints" script="数据库表【Referentialconstraints】的基本数据库操作">
        <!--【REFERENTIAL_CONSTRAINTS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Referentialconstraints(CONSTRAINT_CATALOG , CONSTRAINT_SCHEMA , CONSTRAINT_NAME , UNIQUE_CONSTRAINT_CATALOG , UNIQUE_CONSTRAINT_SCHEMA , UNIQUE_CONSTRAINT_NAME , MATCH_OPTION , UPDATE_RULE , DELETE_RULE , TABLE_NAME , REFERENCED_TABLE_NAME ) VALUES(@CONSTRAINT_CATALOG , @CONSTRAINT_SCHEMA , @CONSTRAINT_NAME , @UNIQUE_CONSTRAINT_CATALOG , @UNIQUE_CONSTRAINT_SCHEMA , @UNIQUE_CONSTRAINT_NAME , @MATCH_OPTION , @UPDATE_RULE , @DELETE_RULE , @TABLE_NAME , @REFERENCED_TABLE_NAME )
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@UNIQUE_CONSTRAINT_CATALOG" value="UNIQUE_CONSTRAINT_CATALOG" script="UNIQUE_CONSTRAINT_CATALOG"/>
                <paramer name="@UNIQUE_CONSTRAINT_SCHEMA" value="UNIQUE_CONSTRAINT_SCHEMA" script="UNIQUE_CONSTRAINT_SCHEMA"/>
                <paramer name="@UNIQUE_CONSTRAINT_NAME" value="UNIQUE_CONSTRAINT_NAME" script="UNIQUE_CONSTRAINT_NAME"/>
                <paramer name="@MATCH_OPTION" value="MATCH_OPTION" script="MATCH_OPTION"/>
                <paramer name="@UPDATE_RULE" value="UPDATE_RULE" script="UPDATE_RULE"/>
                <paramer name="@DELETE_RULE" value="DELETE_RULE" script="DELETE_RULE"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
            </Paramers>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Referentialconstraints SET CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG ,CONSTRAINT_SCHEMA = @CONSTRAINT_SCHEMA ,CONSTRAINT_NAME = @CONSTRAINT_NAME ,UNIQUE_CONSTRAINT_CATALOG = @UNIQUE_CONSTRAINT_CATALOG ,UNIQUE_CONSTRAINT_SCHEMA = @UNIQUE_CONSTRAINT_SCHEMA ,UNIQUE_CONSTRAINT_NAME = @UNIQUE_CONSTRAINT_NAME ,MATCH_OPTION = @MATCH_OPTION ,UPDATE_RULE = @UPDATE_RULE ,DELETE_RULE = @DELETE_RULE ,TABLE_NAME = @TABLE_NAME ,REFERENCED_TABLE_NAME = @REFERENCED_TABLE_NAME  WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@UNIQUE_CONSTRAINT_CATALOG" value="UNIQUE_CONSTRAINT_CATALOG" script="UNIQUE_CONSTRAINT_CATALOG"/>
                <paramer name="@UNIQUE_CONSTRAINT_SCHEMA" value="UNIQUE_CONSTRAINT_SCHEMA" script="UNIQUE_CONSTRAINT_SCHEMA"/>
                <paramer name="@UNIQUE_CONSTRAINT_NAME" value="UNIQUE_CONSTRAINT_NAME" script="UNIQUE_CONSTRAINT_NAME"/>
                <paramer name="@MATCH_OPTION" value="MATCH_OPTION" script="MATCH_OPTION"/>
                <paramer name="@UPDATE_RULE" value="UPDATE_RULE" script="UPDATE_RULE"/>
                <paramer name="@DELETE_RULE" value="DELETE_RULE" script="DELETE_RULE"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
            </Paramers>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：查询-取得表中一条记录。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.GET" type="sqlserver">
            <TEXT>
            SELECT  CONSTRAINT_CATALOG,  CONSTRAINT_SCHEMA,  CONSTRAINT_NAME,  UNIQUE_CONSTRAINT_CATALOG,  UNIQUE_CONSTRAINT_SCHEMA,  UNIQUE_CONSTRAINT_NAME,  MATCH_OPTION,  UPDATE_RULE,  DELETE_RULE,  TABLE_NAME,  REFERENCED_TABLE_NAME FROM Referentialconstraints WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@UNIQUE_CONSTRAINT_CATALOG" value="UNIQUE_CONSTRAINT_CATALOG" script="UNIQUE_CONSTRAINT_CATALOG"/>
                <paramer name="@UNIQUE_CONSTRAINT_SCHEMA" value="UNIQUE_CONSTRAINT_SCHEMA" script="UNIQUE_CONSTRAINT_SCHEMA"/>
                <paramer name="@UNIQUE_CONSTRAINT_NAME" value="UNIQUE_CONSTRAINT_NAME" script="UNIQUE_CONSTRAINT_NAME"/>
                <paramer name="@MATCH_OPTION" value="MATCH_OPTION" script="MATCH_OPTION"/>
                <paramer name="@UPDATE_RULE" value="UPDATE_RULE" script="UPDATE_RULE"/>
                <paramer name="@DELETE_RULE" value="DELETE_RULE" script="DELETE_RULE"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
            </Paramers>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：删除-删除表中一条记录。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Referentialconstraints WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@UNIQUE_CONSTRAINT_CATALOG" value="UNIQUE_CONSTRAINT_CATALOG" script="UNIQUE_CONSTRAINT_CATALOG"/>
                <paramer name="@UNIQUE_CONSTRAINT_SCHEMA" value="UNIQUE_CONSTRAINT_SCHEMA" script="UNIQUE_CONSTRAINT_SCHEMA"/>
                <paramer name="@UNIQUE_CONSTRAINT_NAME" value="UNIQUE_CONSTRAINT_NAME" script="UNIQUE_CONSTRAINT_NAME"/>
                <paramer name="@MATCH_OPTION" value="MATCH_OPTION" script="MATCH_OPTION"/>
                <paramer name="@UPDATE_RULE" value="UPDATE_RULE" script="UPDATE_RULE"/>
                <paramer name="@DELETE_RULE" value="DELETE_RULE" script="DELETE_RULE"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@REFERENCED_TABLE_NAME" value="REFERENCED_TABLE_NAME" script="REFERENCED_TABLE_NAME"/>
            </Paramers>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT CONSTRAINT_CATALOG AS KeyValue,CONSTRAINT_CATALOG AS KeyText FROM [Referentialconstraints];            
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：查询表中记录的列。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG,  REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA,  REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME,  REFERENTIAL_CONSTRAINTS.MATCH_OPTION,  REFERENTIAL_CONSTRAINTS.UPDATE_RULE,  REFERENTIAL_CONSTRAINTS.DELETE_RULE,  REFERENTIAL_CONSTRAINTS.TABLE_NAME,  REFERENTIAL_CONSTRAINTS.REFERENCED_TABLE_NAME                
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：表名。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.DBTABLE" type="sqlserver">
            <TEXT>
            Referentialconstraints 
            
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：联合查询表中记录的列。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG,  REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA,  REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA,  REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME,  REFERENTIAL_CONSTRAINTS.MATCH_OPTION,  REFERENTIAL_CONSTRAINTS.UPDATE_RULE,  REFERENTIAL_CONSTRAINTS.DELETE_RULE,  REFERENTIAL_CONSTRAINTS.TABLE_NAME,  REFERENTIAL_CONSTRAINTS.REFERENCED_TABLE_NAME                       
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：联合查询表中记录的表名。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Referentialconstraints 
            
            </TEXT>
        </SQL>

        <!--【REFERENTIAL_CONSTRAINTS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.REFERENTIALCONSTRAINTS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            REFERENTIAL_CONSTRAINTS.CONSTRAINT_CATALOG, ;REFERENTIAL_CONSTRAINTS.CONSTRAINT_SCHEMA, ;REFERENTIAL_CONSTRAINTS.CONSTRAINT_NAME, ;REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_CATALOG, ;REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_SCHEMA, ;REFERENTIAL_CONSTRAINTS.UNIQUE_CONSTRAINT_NAME, ;REFERENTIAL_CONSTRAINTS.MATCH_OPTION, ;REFERENTIAL_CONSTRAINTS.UPDATE_RULE, ;REFERENTIAL_CONSTRAINTS.DELETE_RULE, ;REFERENTIAL_CONSTRAINTS.TABLE_NAME, ;REFERENTIAL_CONSTRAINTS.REFERENCED_TABLE_NAME,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Routines" script="数据库表【Routines】的基本数据库操作">
        <!--【ROUTINES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.ROUTINES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Routines(SPECIFIC_NAME , ROUTINE_CATALOG , ROUTINE_SCHEMA , ROUTINE_NAME , ROUTINE_TYPE , DATA_TYPE , CHARACTER_MAXIMUM_LENGTH , CHARACTER_OCTET_LENGTH , NUMERIC_PRECISION , NUMERIC_SCALE , CHARACTER_SET_NAME , COLLATION_NAME , DTD_IDENTIFIER , ROUTINE_BODY , ROUTINE_DEFINITION , EXTERNAL_NAME , EXTERNAL_LANGUAGE , PARAMETER_STYLE , IS_DETERMINISTIC , SQL_DATA_ACCESS , SQL_PATH , SECURITY_TYPE , CREATED , LAST_ALTERED , SQL_MODE , ROUTINE_COMMENT , DEFINER , CHARACTER_SET_CLIENT , COLLATION_CONNECTION , DATABASE_COLLATION ) VALUES(@SPECIFIC_NAME , @ROUTINE_CATALOG , @ROUTINE_SCHEMA , @ROUTINE_NAME , @ROUTINE_TYPE , @DATA_TYPE , @CHARACTER_MAXIMUM_LENGTH , @CHARACTER_OCTET_LENGTH , @NUMERIC_PRECISION , @NUMERIC_SCALE , @CHARACTER_SET_NAME , @COLLATION_NAME , @DTD_IDENTIFIER , @ROUTINE_BODY , @ROUTINE_DEFINITION , @EXTERNAL_NAME , @EXTERNAL_LANGUAGE , @PARAMETER_STYLE , @IS_DETERMINISTIC , @SQL_DATA_ACCESS , @SQL_PATH , @SECURITY_TYPE , @CREATED , @LAST_ALTERED , @SQL_MODE , @ROUTINE_COMMENT , @DEFINER , @CHARACTER_SET_CLIENT , @COLLATION_CONNECTION , @DATABASE_COLLATION )
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ROUTINE_CATALOG" value="ROUTINE_CATALOG" script="ROUTINE_CATALOG"/>
                <paramer name="@ROUTINE_SCHEMA" value="ROUTINE_SCHEMA" script="ROUTINE_SCHEMA"/>
                <paramer name="@ROUTINE_NAME" value="ROUTINE_NAME" script="ROUTINE_NAME"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_BODY" value="ROUTINE_BODY" script="ROUTINE_BODY"/>
                <paramer name="@ROUTINE_DEFINITION" value="ROUTINE_DEFINITION" script="ROUTINE_DEFINITION"/>
                <paramer name="@EXTERNAL_NAME" value="EXTERNAL_NAME" script="EXTERNAL_NAME"/>
                <paramer name="@EXTERNAL_LANGUAGE" value="EXTERNAL_LANGUAGE" script="EXTERNAL_LANGUAGE"/>
                <paramer name="@PARAMETER_STYLE" value="PARAMETER_STYLE" script="PARAMETER_STYLE"/>
                <paramer name="@IS_DETERMINISTIC" value="IS_DETERMINISTIC" script="IS_DETERMINISTIC"/>
                <paramer name="@SQL_DATA_ACCESS" value="SQL_DATA_ACCESS" script="SQL_DATA_ACCESS"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@ROUTINE_COMMENT" value="ROUTINE_COMMENT" script="ROUTINE_COMMENT"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【ROUTINES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.ROUTINES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Routines SET SPECIFIC_NAME = @SPECIFIC_NAME ,ROUTINE_CATALOG = @ROUTINE_CATALOG ,ROUTINE_SCHEMA = @ROUTINE_SCHEMA ,ROUTINE_NAME = @ROUTINE_NAME ,ROUTINE_TYPE = @ROUTINE_TYPE ,DATA_TYPE = @DATA_TYPE ,CHARACTER_MAXIMUM_LENGTH = @CHARACTER_MAXIMUM_LENGTH ,CHARACTER_OCTET_LENGTH = @CHARACTER_OCTET_LENGTH ,NUMERIC_PRECISION = @NUMERIC_PRECISION ,NUMERIC_SCALE = @NUMERIC_SCALE ,CHARACTER_SET_NAME = @CHARACTER_SET_NAME ,COLLATION_NAME = @COLLATION_NAME ,DTD_IDENTIFIER = @DTD_IDENTIFIER ,ROUTINE_BODY = @ROUTINE_BODY ,ROUTINE_DEFINITION = @ROUTINE_DEFINITION ,EXTERNAL_NAME = @EXTERNAL_NAME ,EXTERNAL_LANGUAGE = @EXTERNAL_LANGUAGE ,PARAMETER_STYLE = @PARAMETER_STYLE ,IS_DETERMINISTIC = @IS_DETERMINISTIC ,SQL_DATA_ACCESS = @SQL_DATA_ACCESS ,SQL_PATH = @SQL_PATH ,SECURITY_TYPE = @SECURITY_TYPE ,CREATED = @CREATED ,LAST_ALTERED = @LAST_ALTERED ,SQL_MODE = @SQL_MODE ,ROUTINE_COMMENT = @ROUTINE_COMMENT ,DEFINER = @DEFINER ,CHARACTER_SET_CLIENT = @CHARACTER_SET_CLIENT ,COLLATION_CONNECTION = @COLLATION_CONNECTION ,DATABASE_COLLATION = @DATABASE_COLLATION  WHERE SPECIFIC_NAME = @SPECIFIC_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ROUTINE_CATALOG" value="ROUTINE_CATALOG" script="ROUTINE_CATALOG"/>
                <paramer name="@ROUTINE_SCHEMA" value="ROUTINE_SCHEMA" script="ROUTINE_SCHEMA"/>
                <paramer name="@ROUTINE_NAME" value="ROUTINE_NAME" script="ROUTINE_NAME"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_BODY" value="ROUTINE_BODY" script="ROUTINE_BODY"/>
                <paramer name="@ROUTINE_DEFINITION" value="ROUTINE_DEFINITION" script="ROUTINE_DEFINITION"/>
                <paramer name="@EXTERNAL_NAME" value="EXTERNAL_NAME" script="EXTERNAL_NAME"/>
                <paramer name="@EXTERNAL_LANGUAGE" value="EXTERNAL_LANGUAGE" script="EXTERNAL_LANGUAGE"/>
                <paramer name="@PARAMETER_STYLE" value="PARAMETER_STYLE" script="PARAMETER_STYLE"/>
                <paramer name="@IS_DETERMINISTIC" value="IS_DETERMINISTIC" script="IS_DETERMINISTIC"/>
                <paramer name="@SQL_DATA_ACCESS" value="SQL_DATA_ACCESS" script="SQL_DATA_ACCESS"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@ROUTINE_COMMENT" value="ROUTINE_COMMENT" script="ROUTINE_COMMENT"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【ROUTINES】：查询-取得表中一条记录。-->
        <SQL id="DATA.ROUTINES.GET" type="sqlserver">
            <TEXT>
            SELECT  SPECIFIC_NAME,  ROUTINE_CATALOG,  ROUTINE_SCHEMA,  ROUTINE_NAME,  ROUTINE_TYPE,  DATA_TYPE,  CHARACTER_MAXIMUM_LENGTH,  CHARACTER_OCTET_LENGTH,  NUMERIC_PRECISION,  NUMERIC_SCALE,  CHARACTER_SET_NAME,  COLLATION_NAME,  DTD_IDENTIFIER,  ROUTINE_BODY,  ROUTINE_DEFINITION,  EXTERNAL_NAME,  EXTERNAL_LANGUAGE,  PARAMETER_STYLE,  IS_DETERMINISTIC,  SQL_DATA_ACCESS,  SQL_PATH,  SECURITY_TYPE,  CREATED,  LAST_ALTERED,  SQL_MODE,  ROUTINE_COMMENT,  DEFINER,  CHARACTER_SET_CLIENT,  COLLATION_CONNECTION,  DATABASE_COLLATION FROM Routines WHERE SPECIFIC_NAME = @SPECIFIC_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ROUTINE_CATALOG" value="ROUTINE_CATALOG" script="ROUTINE_CATALOG"/>
                <paramer name="@ROUTINE_SCHEMA" value="ROUTINE_SCHEMA" script="ROUTINE_SCHEMA"/>
                <paramer name="@ROUTINE_NAME" value="ROUTINE_NAME" script="ROUTINE_NAME"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_BODY" value="ROUTINE_BODY" script="ROUTINE_BODY"/>
                <paramer name="@ROUTINE_DEFINITION" value="ROUTINE_DEFINITION" script="ROUTINE_DEFINITION"/>
                <paramer name="@EXTERNAL_NAME" value="EXTERNAL_NAME" script="EXTERNAL_NAME"/>
                <paramer name="@EXTERNAL_LANGUAGE" value="EXTERNAL_LANGUAGE" script="EXTERNAL_LANGUAGE"/>
                <paramer name="@PARAMETER_STYLE" value="PARAMETER_STYLE" script="PARAMETER_STYLE"/>
                <paramer name="@IS_DETERMINISTIC" value="IS_DETERMINISTIC" script="IS_DETERMINISTIC"/>
                <paramer name="@SQL_DATA_ACCESS" value="SQL_DATA_ACCESS" script="SQL_DATA_ACCESS"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@ROUTINE_COMMENT" value="ROUTINE_COMMENT" script="ROUTINE_COMMENT"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【ROUTINES】：删除-删除表中一条记录。-->
        <SQL id="DATA.ROUTINES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Routines WHERE SPECIFIC_NAME = @SPECIFIC_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@SPECIFIC_NAME" value="SPECIFIC_NAME" script="SPECIFIC_NAME"/>
                <paramer name="@ROUTINE_CATALOG" value="ROUTINE_CATALOG" script="ROUTINE_CATALOG"/>
                <paramer name="@ROUTINE_SCHEMA" value="ROUTINE_SCHEMA" script="ROUTINE_SCHEMA"/>
                <paramer name="@ROUTINE_NAME" value="ROUTINE_NAME" script="ROUTINE_NAME"/>
                <paramer name="@ROUTINE_TYPE" value="ROUTINE_TYPE" script="ROUTINE_TYPE"/>
                <paramer name="@DATA_TYPE" value="DATA_TYPE" script="DATA_TYPE"/>
                <paramer name="@CHARACTER_MAXIMUM_LENGTH" value="CHARACTER_MAXIMUM_LENGTH" script="CHARACTER_MAXIMUM_LENGTH"/>
                <paramer name="@CHARACTER_OCTET_LENGTH" value="CHARACTER_OCTET_LENGTH" script="CHARACTER_OCTET_LENGTH"/>
                <paramer name="@NUMERIC_PRECISION" value="NUMERIC_PRECISION" script="NUMERIC_PRECISION"/>
                <paramer name="@NUMERIC_SCALE" value="NUMERIC_SCALE" script="NUMERIC_SCALE"/>
                <paramer name="@CHARACTER_SET_NAME" value="CHARACTER_SET_NAME" script="CHARACTER_SET_NAME"/>
                <paramer name="@COLLATION_NAME" value="COLLATION_NAME" script="COLLATION_NAME"/>
                <paramer name="@DTD_IDENTIFIER" value="DTD_IDENTIFIER" script="DTD_IDENTIFIER"/>
                <paramer name="@ROUTINE_BODY" value="ROUTINE_BODY" script="ROUTINE_BODY"/>
                <paramer name="@ROUTINE_DEFINITION" value="ROUTINE_DEFINITION" script="ROUTINE_DEFINITION"/>
                <paramer name="@EXTERNAL_NAME" value="EXTERNAL_NAME" script="EXTERNAL_NAME"/>
                <paramer name="@EXTERNAL_LANGUAGE" value="EXTERNAL_LANGUAGE" script="EXTERNAL_LANGUAGE"/>
                <paramer name="@PARAMETER_STYLE" value="PARAMETER_STYLE" script="PARAMETER_STYLE"/>
                <paramer name="@IS_DETERMINISTIC" value="IS_DETERMINISTIC" script="IS_DETERMINISTIC"/>
                <paramer name="@SQL_DATA_ACCESS" value="SQL_DATA_ACCESS" script="SQL_DATA_ACCESS"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@LAST_ALTERED" value="LAST_ALTERED" script="LAST_ALTERED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@ROUTINE_COMMENT" value="ROUTINE_COMMENT" script="ROUTINE_COMMENT"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【ROUTINES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.ROUTINES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT SPECIFIC_NAME AS KeyValue,SPECIFIC_NAME AS KeyText FROM [Routines];            
            </TEXT>
        </SQL>

        <!--【ROUTINES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.ROUTINES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【ROUTINES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.ROUTINES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【ROUTINES】：查询表中记录的列。-->
        <SQL id="DATA.ROUTINES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 ROUTINES.SPECIFIC_NAME,  ROUTINES.ROUTINE_CATALOG,  ROUTINES.ROUTINE_SCHEMA,  ROUTINES.ROUTINE_NAME,  ROUTINES.ROUTINE_TYPE,  ROUTINES.DATA_TYPE,  ROUTINES.CHARACTER_MAXIMUM_LENGTH,  ROUTINES.CHARACTER_OCTET_LENGTH,  ROUTINES.NUMERIC_PRECISION,  ROUTINES.NUMERIC_SCALE,  ROUTINES.CHARACTER_SET_NAME,  ROUTINES.COLLATION_NAME,  ROUTINES.DTD_IDENTIFIER,  ROUTINES.ROUTINE_BODY,  ROUTINES.ROUTINE_DEFINITION,  ROUTINES.EXTERNAL_NAME,  ROUTINES.EXTERNAL_LANGUAGE,  ROUTINES.PARAMETER_STYLE,  ROUTINES.IS_DETERMINISTIC,  ROUTINES.SQL_DATA_ACCESS,  ROUTINES.SQL_PATH,  ROUTINES.SECURITY_TYPE,  ROUTINES.CREATED,  ROUTINES.LAST_ALTERED,  ROUTINES.SQL_MODE,  ROUTINES.ROUTINE_COMMENT,  ROUTINES.DEFINER,  ROUTINES.CHARACTER_SET_CLIENT,  ROUTINES.COLLATION_CONNECTION,  ROUTINES.DATABASE_COLLATION                
            </TEXT>
        </SQL>

        <!--【ROUTINES】：表名。-->
        <SQL id="DATA.ROUTINES.DBTABLE" type="sqlserver">
            <TEXT>
            Routines 
            
            </TEXT>
        </SQL>

        <!--【ROUTINES】：联合查询表中记录的列。-->
        <SQL id="DATA.ROUTINES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             ROUTINES.SPECIFIC_NAME,  ROUTINES.ROUTINE_CATALOG,  ROUTINES.ROUTINE_SCHEMA,  ROUTINES.ROUTINE_NAME,  ROUTINES.ROUTINE_TYPE,  ROUTINES.DATA_TYPE,  ROUTINES.CHARACTER_MAXIMUM_LENGTH,  ROUTINES.CHARACTER_OCTET_LENGTH,  ROUTINES.NUMERIC_PRECISION,  ROUTINES.NUMERIC_SCALE,  ROUTINES.CHARACTER_SET_NAME,  ROUTINES.COLLATION_NAME,  ROUTINES.DTD_IDENTIFIER,  ROUTINES.ROUTINE_BODY,  ROUTINES.ROUTINE_DEFINITION,  ROUTINES.EXTERNAL_NAME,  ROUTINES.EXTERNAL_LANGUAGE,  ROUTINES.PARAMETER_STYLE,  ROUTINES.IS_DETERMINISTIC,  ROUTINES.SQL_DATA_ACCESS,  ROUTINES.SQL_PATH,  ROUTINES.SECURITY_TYPE,  ROUTINES.CREATED,  ROUTINES.LAST_ALTERED,  ROUTINES.SQL_MODE,  ROUTINES.ROUTINE_COMMENT,  ROUTINES.DEFINER,  ROUTINES.CHARACTER_SET_CLIENT,  ROUTINES.COLLATION_CONNECTION,  ROUTINES.DATABASE_COLLATION                       
            </TEXT>
        </SQL>

        <!--【ROUTINES】：联合查询表中记录的表名。-->
        <SQL id="DATA.ROUTINES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Routines 
            
            </TEXT>
        </SQL>

        <!--【ROUTINES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.ROUTINES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            ROUTINES.SPECIFIC_NAME, ;ROUTINES.ROUTINE_CATALOG, ;ROUTINES.ROUTINE_SCHEMA, ;ROUTINES.ROUTINE_NAME, ;ROUTINES.ROUTINE_TYPE, ;ROUTINES.DATA_TYPE, ;ROUTINES.CHARACTER_SET_NAME, ;ROUTINES.COLLATION_NAME, ;ROUTINES.DTD_IDENTIFIER, ;ROUTINES.ROUTINE_BODY, ;ROUTINES.ROUTINE_DEFINITION, ;ROUTINES.EXTERNAL_NAME, ;ROUTINES.EXTERNAL_LANGUAGE, ;ROUTINES.PARAMETER_STYLE, ;ROUTINES.IS_DETERMINISTIC, ;ROUTINES.SQL_DATA_ACCESS, ;ROUTINES.SQL_PATH, ;ROUTINES.SECURITY_TYPE, ;ROUTINES.SQL_MODE, ;ROUTINES.ROUTINE_COMMENT, ;ROUTINES.DEFINER, ;ROUTINES.CHARACTER_SET_CLIENT, ;ROUTINES.COLLATION_CONNECTION, ;ROUTINES.DATABASE_COLLATION,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Schemata" script="数据库表【Schemata】的基本数据库操作">
        <!--【SCHEMATA】：添加-向表中添加一条记录。-->
        <SQL id="DATA.SCHEMATA.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Schemata(CATALOG_NAME , SCHEMA_NAME , DEFAULT_CHARACTER_SET_NAME , DEFAULT_COLLATION_NAME , SQL_PATH ) VALUES(@CATALOG_NAME , @SCHEMA_NAME , @DEFAULT_CHARACTER_SET_NAME , @DEFAULT_COLLATION_NAME , @SQL_PATH )
            
            </TEXT>

            <Paramers>
                <paramer name="@CATALOG_NAME" value="CATALOG_NAME" script="CATALOG_NAME"/>
                <paramer name="@SCHEMA_NAME" value="SCHEMA_NAME" script="SCHEMA_NAME"/>
                <paramer name="@DEFAULT_CHARACTER_SET_NAME" value="DEFAULT_CHARACTER_SET_NAME" script="DEFAULT_CHARACTER_SET_NAME"/>
                <paramer name="@DEFAULT_COLLATION_NAME" value="DEFAULT_COLLATION_NAME" script="DEFAULT_COLLATION_NAME"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
            </Paramers>
        </SQL>

        <!--【SCHEMATA】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.SCHEMATA.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Schemata SET CATALOG_NAME = @CATALOG_NAME ,SCHEMA_NAME = @SCHEMA_NAME ,DEFAULT_CHARACTER_SET_NAME = @DEFAULT_CHARACTER_SET_NAME ,DEFAULT_COLLATION_NAME = @DEFAULT_COLLATION_NAME ,SQL_PATH = @SQL_PATH  WHERE CATALOG_NAME = @CATALOG_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@CATALOG_NAME" value="CATALOG_NAME" script="CATALOG_NAME"/>
                <paramer name="@SCHEMA_NAME" value="SCHEMA_NAME" script="SCHEMA_NAME"/>
                <paramer name="@DEFAULT_CHARACTER_SET_NAME" value="DEFAULT_CHARACTER_SET_NAME" script="DEFAULT_CHARACTER_SET_NAME"/>
                <paramer name="@DEFAULT_COLLATION_NAME" value="DEFAULT_COLLATION_NAME" script="DEFAULT_COLLATION_NAME"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
            </Paramers>
        </SQL>

        <!--【SCHEMATA】：查询-取得表中一条记录。-->
        <SQL id="DATA.SCHEMATA.GET" type="sqlserver">
            <TEXT>
            SELECT  CATALOG_NAME,  SCHEMA_NAME,  DEFAULT_CHARACTER_SET_NAME,  DEFAULT_COLLATION_NAME,  SQL_PATH FROM Schemata WHERE CATALOG_NAME = @CATALOG_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@CATALOG_NAME" value="CATALOG_NAME" script="CATALOG_NAME"/>
                <paramer name="@SCHEMA_NAME" value="SCHEMA_NAME" script="SCHEMA_NAME"/>
                <paramer name="@DEFAULT_CHARACTER_SET_NAME" value="DEFAULT_CHARACTER_SET_NAME" script="DEFAULT_CHARACTER_SET_NAME"/>
                <paramer name="@DEFAULT_COLLATION_NAME" value="DEFAULT_COLLATION_NAME" script="DEFAULT_COLLATION_NAME"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
            </Paramers>
        </SQL>

        <!--【SCHEMATA】：删除-删除表中一条记录。-->
        <SQL id="DATA.SCHEMATA.DELETE" type="sqlserver">
            <TEXT>
            DELETE Schemata WHERE CATALOG_NAME = @CATALOG_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@CATALOG_NAME" value="CATALOG_NAME" script="CATALOG_NAME"/>
                <paramer name="@SCHEMA_NAME" value="SCHEMA_NAME" script="SCHEMA_NAME"/>
                <paramer name="@DEFAULT_CHARACTER_SET_NAME" value="DEFAULT_CHARACTER_SET_NAME" script="DEFAULT_CHARACTER_SET_NAME"/>
                <paramer name="@DEFAULT_COLLATION_NAME" value="DEFAULT_COLLATION_NAME" script="DEFAULT_COLLATION_NAME"/>
                <paramer name="@SQL_PATH" value="SQL_PATH" script="SQL_PATH"/>
            </Paramers>
        </SQL>

        <!--【SCHEMATA】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.SCHEMATA.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT CATALOG_NAME AS KeyValue,CATALOG_NAME AS KeyText FROM [Schemata];            
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.SCHEMATA.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.SCHEMATA.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：查询表中记录的列。-->
        <SQL id="DATA.SCHEMATA.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 SCHEMATA.CATALOG_NAME,  SCHEMATA.SCHEMA_NAME,  SCHEMATA.DEFAULT_CHARACTER_SET_NAME,  SCHEMATA.DEFAULT_COLLATION_NAME,  SCHEMATA.SQL_PATH                
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：表名。-->
        <SQL id="DATA.SCHEMATA.DBTABLE" type="sqlserver">
            <TEXT>
            Schemata 
            
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：联合查询表中记录的列。-->
        <SQL id="DATA.SCHEMATA.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             SCHEMATA.CATALOG_NAME,  SCHEMATA.SCHEMA_NAME,  SCHEMATA.DEFAULT_CHARACTER_SET_NAME,  SCHEMATA.DEFAULT_COLLATION_NAME,  SCHEMATA.SQL_PATH                       
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：联合查询表中记录的表名。-->
        <SQL id="DATA.SCHEMATA.DBTABLEEX" type="sqlserver">
            <TEXT>
            Schemata 
            
            </TEXT>
        </SQL>

        <!--【SCHEMATA】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.SCHEMATA.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            SCHEMATA.CATALOG_NAME, ;SCHEMATA.SCHEMA_NAME, ;SCHEMATA.DEFAULT_CHARACTER_SET_NAME, ;SCHEMATA.DEFAULT_COLLATION_NAME, ;SCHEMATA.SQL_PATH,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Schemaprivileges" script="数据库表【Schemaprivileges】的基本数据库操作">
        <!--【SCHEMA_PRIVILEGES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Schemaprivileges(GRANTEE , TABLE_CATALOG , TABLE_SCHEMA , PRIVILEGE_TYPE , IS_GRANTABLE ) VALUES(@GRANTEE , @TABLE_CATALOG , @TABLE_SCHEMA , @PRIVILEGE_TYPE , @IS_GRANTABLE )
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Schemaprivileges SET GRANTEE = @GRANTEE ,TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,PRIVILEGE_TYPE = @PRIVILEGE_TYPE ,IS_GRANTABLE = @IS_GRANTABLE  WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：查询-取得表中一条记录。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.GET" type="sqlserver">
            <TEXT>
            SELECT  GRANTEE,  TABLE_CATALOG,  TABLE_SCHEMA,  PRIVILEGE_TYPE,  IS_GRANTABLE FROM Schemaprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：删除-删除表中一条记录。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Schemaprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT GRANTEE AS KeyValue,GRANTEE AS KeyText FROM [Schemaprivileges];            
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：查询表中记录的列。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 SCHEMA_PRIVILEGES.GRANTEE,  SCHEMA_PRIVILEGES.TABLE_CATALOG,  SCHEMA_PRIVILEGES.TABLE_SCHEMA,  SCHEMA_PRIVILEGES.PRIVILEGE_TYPE,  SCHEMA_PRIVILEGES.IS_GRANTABLE                
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：表名。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.DBTABLE" type="sqlserver">
            <TEXT>
            Schemaprivileges 
            
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：联合查询表中记录的列。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             SCHEMA_PRIVILEGES.GRANTEE,  SCHEMA_PRIVILEGES.TABLE_CATALOG,  SCHEMA_PRIVILEGES.TABLE_SCHEMA,  SCHEMA_PRIVILEGES.PRIVILEGE_TYPE,  SCHEMA_PRIVILEGES.IS_GRANTABLE                       
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：联合查询表中记录的表名。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Schemaprivileges 
            
            </TEXT>
        </SQL>

        <!--【SCHEMA_PRIVILEGES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.SCHEMAPRIVILEGES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            SCHEMA_PRIVILEGES.GRANTEE, ;SCHEMA_PRIVILEGES.TABLE_CATALOG, ;SCHEMA_PRIVILEGES.TABLE_SCHEMA, ;SCHEMA_PRIVILEGES.PRIVILEGE_TYPE, ;SCHEMA_PRIVILEGES.IS_GRANTABLE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Sessionstatus" script="数据库表【Sessionstatus】的基本数据库操作">
        <!--【SESSION_STATUS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.SESSIONSTATUS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Sessionstatus(VARIABLE_NAME , VARIABLE_VALUE ) VALUES(@VARIABLE_NAME , @VARIABLE_VALUE )
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_STATUS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.SESSIONSTATUS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Sessionstatus SET VARIABLE_NAME = @VARIABLE_NAME ,VARIABLE_VALUE = @VARIABLE_VALUE  WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_STATUS】：查询-取得表中一条记录。-->
        <SQL id="DATA.SESSIONSTATUS.GET" type="sqlserver">
            <TEXT>
            SELECT  VARIABLE_NAME,  VARIABLE_VALUE FROM Sessionstatus WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_STATUS】：删除-删除表中一条记录。-->
        <SQL id="DATA.SESSIONSTATUS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Sessionstatus WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_STATUS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.SESSIONSTATUS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT VARIABLE_NAME AS KeyValue,VARIABLE_NAME AS KeyText FROM [Sessionstatus];            
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.SESSIONSTATUS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.SESSIONSTATUS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：查询表中记录的列。-->
        <SQL id="DATA.SESSIONSTATUS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 SESSION_STATUS.VARIABLE_NAME,  SESSION_STATUS.VARIABLE_VALUE                
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：表名。-->
        <SQL id="DATA.SESSIONSTATUS.DBTABLE" type="sqlserver">
            <TEXT>
            Sessionstatus 
            
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：联合查询表中记录的列。-->
        <SQL id="DATA.SESSIONSTATUS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             SESSION_STATUS.VARIABLE_NAME,  SESSION_STATUS.VARIABLE_VALUE                       
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：联合查询表中记录的表名。-->
        <SQL id="DATA.SESSIONSTATUS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Sessionstatus 
            
            </TEXT>
        </SQL>

        <!--【SESSION_STATUS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.SESSIONSTATUS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            SESSION_STATUS.VARIABLE_NAME, ;SESSION_STATUS.VARIABLE_VALUE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Sessionvariables" script="数据库表【Sessionvariables】的基本数据库操作">
        <!--【SESSION_VARIABLES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.SESSIONVARIABLES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Sessionvariables(VARIABLE_NAME , VARIABLE_VALUE ) VALUES(@VARIABLE_NAME , @VARIABLE_VALUE )
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_VARIABLES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.SESSIONVARIABLES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Sessionvariables SET VARIABLE_NAME = @VARIABLE_NAME ,VARIABLE_VALUE = @VARIABLE_VALUE  WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_VARIABLES】：查询-取得表中一条记录。-->
        <SQL id="DATA.SESSIONVARIABLES.GET" type="sqlserver">
            <TEXT>
            SELECT  VARIABLE_NAME,  VARIABLE_VALUE FROM Sessionvariables WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_VARIABLES】：删除-删除表中一条记录。-->
        <SQL id="DATA.SESSIONVARIABLES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Sessionvariables WHERE VARIABLE_NAME = @VARIABLE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@VARIABLE_NAME" value="VARIABLE_NAME" script="VARIABLE_NAME"/>
                <paramer name="@VARIABLE_VALUE" value="VARIABLE_VALUE" script="VARIABLE_VALUE"/>
            </Paramers>
        </SQL>

        <!--【SESSION_VARIABLES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.SESSIONVARIABLES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT VARIABLE_NAME AS KeyValue,VARIABLE_NAME AS KeyText FROM [Sessionvariables];            
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.SESSIONVARIABLES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.SESSIONVARIABLES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：查询表中记录的列。-->
        <SQL id="DATA.SESSIONVARIABLES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 SESSION_VARIABLES.VARIABLE_NAME,  SESSION_VARIABLES.VARIABLE_VALUE                
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：表名。-->
        <SQL id="DATA.SESSIONVARIABLES.DBTABLE" type="sqlserver">
            <TEXT>
            Sessionvariables 
            
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：联合查询表中记录的列。-->
        <SQL id="DATA.SESSIONVARIABLES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             SESSION_VARIABLES.VARIABLE_NAME,  SESSION_VARIABLES.VARIABLE_VALUE                       
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：联合查询表中记录的表名。-->
        <SQL id="DATA.SESSIONVARIABLES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Sessionvariables 
            
            </TEXT>
        </SQL>

        <!--【SESSION_VARIABLES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.SESSIONVARIABLES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            SESSION_VARIABLES.VARIABLE_NAME, ;SESSION_VARIABLES.VARIABLE_VALUE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Statistics" script="数据库表【Statistics】的基本数据库操作">
        <!--【STATISTICS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.STATISTICS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Statistics(TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , NON_UNIQUE , INDEX_SCHEMA , INDEX_NAME , SEQ_IN_INDEX , COLUMN_NAME , COLLATION , CARDINALITY , SUB_PART , PACKED , NULLABLE , INDEX_TYPE , COMMENT , INDEX_COMMENT ) VALUES(@TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @NON_UNIQUE , @INDEX_SCHEMA , @INDEX_NAME , @SEQ_IN_INDEX , @COLUMN_NAME , @COLLATION , @CARDINALITY , @SUB_PART , @PACKED , @NULLABLE , @INDEX_TYPE , @COMMENT , @INDEX_COMMENT )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@NON_UNIQUE" value="NON_UNIQUE" script="NON_UNIQUE"/>
                <paramer name="@INDEX_SCHEMA" value="INDEX_SCHEMA" script="INDEX_SCHEMA"/>
                <paramer name="@INDEX_NAME" value="INDEX_NAME" script="INDEX_NAME"/>
                <paramer name="@SEQ_IN_INDEX" value="SEQ_IN_INDEX" script="SEQ_IN_INDEX"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@COLLATION" value="COLLATION" script="COLLATION"/>
                <paramer name="@CARDINALITY" value="CARDINALITY" script="CARDINALITY"/>
                <paramer name="@SUB_PART" value="SUB_PART" script="SUB_PART"/>
                <paramer name="@PACKED" value="PACKED" script="PACKED"/>
                <paramer name="@NULLABLE" value="NULLABLE" script="NULLABLE"/>
                <paramer name="@INDEX_TYPE" value="INDEX_TYPE" script="INDEX_TYPE"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@INDEX_COMMENT" value="INDEX_COMMENT" script="INDEX_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【STATISTICS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.STATISTICS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Statistics SET TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,NON_UNIQUE = @NON_UNIQUE ,INDEX_SCHEMA = @INDEX_SCHEMA ,INDEX_NAME = @INDEX_NAME ,SEQ_IN_INDEX = @SEQ_IN_INDEX ,COLUMN_NAME = @COLUMN_NAME ,COLLATION = @COLLATION ,CARDINALITY = @CARDINALITY ,SUB_PART = @SUB_PART ,PACKED = @PACKED ,NULLABLE = @NULLABLE ,INDEX_TYPE = @INDEX_TYPE ,COMMENT = @COMMENT ,INDEX_COMMENT = @INDEX_COMMENT  WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@NON_UNIQUE" value="NON_UNIQUE" script="NON_UNIQUE"/>
                <paramer name="@INDEX_SCHEMA" value="INDEX_SCHEMA" script="INDEX_SCHEMA"/>
                <paramer name="@INDEX_NAME" value="INDEX_NAME" script="INDEX_NAME"/>
                <paramer name="@SEQ_IN_INDEX" value="SEQ_IN_INDEX" script="SEQ_IN_INDEX"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@COLLATION" value="COLLATION" script="COLLATION"/>
                <paramer name="@CARDINALITY" value="CARDINALITY" script="CARDINALITY"/>
                <paramer name="@SUB_PART" value="SUB_PART" script="SUB_PART"/>
                <paramer name="@PACKED" value="PACKED" script="PACKED"/>
                <paramer name="@NULLABLE" value="NULLABLE" script="NULLABLE"/>
                <paramer name="@INDEX_TYPE" value="INDEX_TYPE" script="INDEX_TYPE"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@INDEX_COMMENT" value="INDEX_COMMENT" script="INDEX_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【STATISTICS】：查询-取得表中一条记录。-->
        <SQL id="DATA.STATISTICS.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  NON_UNIQUE,  INDEX_SCHEMA,  INDEX_NAME,  SEQ_IN_INDEX,  COLUMN_NAME,  COLLATION,  CARDINALITY,  SUB_PART,  PACKED,  NULLABLE,  INDEX_TYPE,  COMMENT,  INDEX_COMMENT FROM Statistics WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@NON_UNIQUE" value="NON_UNIQUE" script="NON_UNIQUE"/>
                <paramer name="@INDEX_SCHEMA" value="INDEX_SCHEMA" script="INDEX_SCHEMA"/>
                <paramer name="@INDEX_NAME" value="INDEX_NAME" script="INDEX_NAME"/>
                <paramer name="@SEQ_IN_INDEX" value="SEQ_IN_INDEX" script="SEQ_IN_INDEX"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@COLLATION" value="COLLATION" script="COLLATION"/>
                <paramer name="@CARDINALITY" value="CARDINALITY" script="CARDINALITY"/>
                <paramer name="@SUB_PART" value="SUB_PART" script="SUB_PART"/>
                <paramer name="@PACKED" value="PACKED" script="PACKED"/>
                <paramer name="@NULLABLE" value="NULLABLE" script="NULLABLE"/>
                <paramer name="@INDEX_TYPE" value="INDEX_TYPE" script="INDEX_TYPE"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@INDEX_COMMENT" value="INDEX_COMMENT" script="INDEX_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【STATISTICS】：删除-删除表中一条记录。-->
        <SQL id="DATA.STATISTICS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Statistics WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@NON_UNIQUE" value="NON_UNIQUE" script="NON_UNIQUE"/>
                <paramer name="@INDEX_SCHEMA" value="INDEX_SCHEMA" script="INDEX_SCHEMA"/>
                <paramer name="@INDEX_NAME" value="INDEX_NAME" script="INDEX_NAME"/>
                <paramer name="@SEQ_IN_INDEX" value="SEQ_IN_INDEX" script="SEQ_IN_INDEX"/>
                <paramer name="@COLUMN_NAME" value="COLUMN_NAME" script="COLUMN_NAME"/>
                <paramer name="@COLLATION" value="COLLATION" script="COLLATION"/>
                <paramer name="@CARDINALITY" value="CARDINALITY" script="CARDINALITY"/>
                <paramer name="@SUB_PART" value="SUB_PART" script="SUB_PART"/>
                <paramer name="@PACKED" value="PACKED" script="PACKED"/>
                <paramer name="@NULLABLE" value="NULLABLE" script="NULLABLE"/>
                <paramer name="@INDEX_TYPE" value="INDEX_TYPE" script="INDEX_TYPE"/>
                <paramer name="@COMMENT" value="COMMENT" script="COMMENT"/>
                <paramer name="@INDEX_COMMENT" value="INDEX_COMMENT" script="INDEX_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【STATISTICS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.STATISTICS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLE_CATALOG AS KeyValue,TABLE_CATALOG AS KeyText FROM [Statistics];            
            </TEXT>
        </SQL>

        <!--【STATISTICS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.STATISTICS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【STATISTICS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.STATISTICS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【STATISTICS】：查询表中记录的列。-->
        <SQL id="DATA.STATISTICS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 STATISTICS.TABLE_CATALOG,  STATISTICS.TABLE_SCHEMA,  STATISTICS.TABLE_NAME,  STATISTICS.NON_UNIQUE,  STATISTICS.INDEX_SCHEMA,  STATISTICS.INDEX_NAME,  STATISTICS.SEQ_IN_INDEX,  STATISTICS.COLUMN_NAME,  STATISTICS.COLLATION,  STATISTICS.CARDINALITY,  STATISTICS.SUB_PART,  STATISTICS.PACKED,  STATISTICS.NULLABLE,  STATISTICS.INDEX_TYPE,  STATISTICS.COMMENT,  STATISTICS.INDEX_COMMENT                
            </TEXT>
        </SQL>

        <!--【STATISTICS】：表名。-->
        <SQL id="DATA.STATISTICS.DBTABLE" type="sqlserver">
            <TEXT>
            Statistics 
            
            </TEXT>
        </SQL>

        <!--【STATISTICS】：联合查询表中记录的列。-->
        <SQL id="DATA.STATISTICS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             STATISTICS.TABLE_CATALOG,  STATISTICS.TABLE_SCHEMA,  STATISTICS.TABLE_NAME,  STATISTICS.NON_UNIQUE,  STATISTICS.INDEX_SCHEMA,  STATISTICS.INDEX_NAME,  STATISTICS.SEQ_IN_INDEX,  STATISTICS.COLUMN_NAME,  STATISTICS.COLLATION,  STATISTICS.CARDINALITY,  STATISTICS.SUB_PART,  STATISTICS.PACKED,  STATISTICS.NULLABLE,  STATISTICS.INDEX_TYPE,  STATISTICS.COMMENT,  STATISTICS.INDEX_COMMENT                       
            </TEXT>
        </SQL>

        <!--【STATISTICS】：联合查询表中记录的表名。-->
        <SQL id="DATA.STATISTICS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Statistics 
            
            </TEXT>
        </SQL>

        <!--【STATISTICS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.STATISTICS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            STATISTICS.TABLE_CATALOG, ;STATISTICS.TABLE_SCHEMA, ;STATISTICS.TABLE_NAME, ;STATISTICS.INDEX_SCHEMA, ;STATISTICS.INDEX_NAME, ;STATISTICS.COLUMN_NAME, ;STATISTICS.COLLATION, ;STATISTICS.PACKED, ;STATISTICS.NULLABLE, ;STATISTICS.INDEX_TYPE, ;STATISTICS.COMMENT, ;STATISTICS.INDEX_COMMENT,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Tables" script="数据库表【Tables】的基本数据库操作">
        <!--【TABLES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.TABLES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Tables(TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , TABLE_TYPE , ENGINE , VERSION , ROW_FORMAT , TABLE_ROWS , AVG_ROW_LENGTH , DATA_LENGTH , MAX_DATA_LENGTH , INDEX_LENGTH , DATA_FREE , AUTO_INCREMENT , CREATE_TIME , UPDATE_TIME , CHECK_TIME , TABLE_COLLATION , CHECKSUM , CREATE_OPTIONS , TABLE_COMMENT ) VALUES(@TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @TABLE_TYPE , @ENGINE , @VERSION , @ROW_FORMAT , @TABLE_ROWS , @AVG_ROW_LENGTH , @DATA_LENGTH , @MAX_DATA_LENGTH , @INDEX_LENGTH , @DATA_FREE , @AUTO_INCREMENT , @CREATE_TIME , @UPDATE_TIME , @CHECK_TIME , @TABLE_COLLATION , @CHECKSUM , @CREATE_OPTIONS , @TABLE_COMMENT )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@TABLE_TYPE" value="TABLE_TYPE" script="TABLE_TYPE"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@AUTO_INCREMENT" value="AUTO_INCREMENT" script="AUTO_INCREMENT"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@TABLE_COLLATION" value="TABLE_COLLATION" script="TABLE_COLLATION"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@CREATE_OPTIONS" value="CREATE_OPTIONS" script="CREATE_OPTIONS"/>
                <paramer name="@TABLE_COMMENT" value="TABLE_COMMENT" script="TABLE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.TABLES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Tables SET TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,TABLE_TYPE = @TABLE_TYPE ,ENGINE = @ENGINE ,VERSION = @VERSION ,ROW_FORMAT = @ROW_FORMAT ,TABLE_ROWS = @TABLE_ROWS ,AVG_ROW_LENGTH = @AVG_ROW_LENGTH ,DATA_LENGTH = @DATA_LENGTH ,MAX_DATA_LENGTH = @MAX_DATA_LENGTH ,INDEX_LENGTH = @INDEX_LENGTH ,DATA_FREE = @DATA_FREE ,AUTO_INCREMENT = @AUTO_INCREMENT ,CREATE_TIME = @CREATE_TIME ,UPDATE_TIME = @UPDATE_TIME ,CHECK_TIME = @CHECK_TIME ,TABLE_COLLATION = @TABLE_COLLATION ,CHECKSUM = @CHECKSUM ,CREATE_OPTIONS = @CREATE_OPTIONS ,TABLE_COMMENT = @TABLE_COMMENT  WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@TABLE_TYPE" value="TABLE_TYPE" script="TABLE_TYPE"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@AUTO_INCREMENT" value="AUTO_INCREMENT" script="AUTO_INCREMENT"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@TABLE_COLLATION" value="TABLE_COLLATION" script="TABLE_COLLATION"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@CREATE_OPTIONS" value="CREATE_OPTIONS" script="CREATE_OPTIONS"/>
                <paramer name="@TABLE_COMMENT" value="TABLE_COMMENT" script="TABLE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLES】：查询-取得表中一条记录。-->
        <SQL id="DATA.TABLES.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  TABLE_TYPE,  ENGINE,  VERSION,  ROW_FORMAT,  TABLE_ROWS,  AVG_ROW_LENGTH,  DATA_LENGTH,  MAX_DATA_LENGTH,  INDEX_LENGTH,  DATA_FREE,  AUTO_INCREMENT,  CREATE_TIME,  UPDATE_TIME,  CHECK_TIME,  TABLE_COLLATION,  CHECKSUM,  CREATE_OPTIONS,  TABLE_COMMENT FROM Tables WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@TABLE_TYPE" value="TABLE_TYPE" script="TABLE_TYPE"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@AUTO_INCREMENT" value="AUTO_INCREMENT" script="AUTO_INCREMENT"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@TABLE_COLLATION" value="TABLE_COLLATION" script="TABLE_COLLATION"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@CREATE_OPTIONS" value="CREATE_OPTIONS" script="CREATE_OPTIONS"/>
                <paramer name="@TABLE_COMMENT" value="TABLE_COMMENT" script="TABLE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLES】：删除-删除表中一条记录。-->
        <SQL id="DATA.TABLES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Tables WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@TABLE_TYPE" value="TABLE_TYPE" script="TABLE_TYPE"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@VERSION" value="VERSION" script="VERSION"/>
                <paramer name="@ROW_FORMAT" value="ROW_FORMAT" script="ROW_FORMAT"/>
                <paramer name="@TABLE_ROWS" value="TABLE_ROWS" script="TABLE_ROWS"/>
                <paramer name="@AVG_ROW_LENGTH" value="AVG_ROW_LENGTH" script="AVG_ROW_LENGTH"/>
                <paramer name="@DATA_LENGTH" value="DATA_LENGTH" script="DATA_LENGTH"/>
                <paramer name="@MAX_DATA_LENGTH" value="MAX_DATA_LENGTH" script="MAX_DATA_LENGTH"/>
                <paramer name="@INDEX_LENGTH" value="INDEX_LENGTH" script="INDEX_LENGTH"/>
                <paramer name="@DATA_FREE" value="DATA_FREE" script="DATA_FREE"/>
                <paramer name="@AUTO_INCREMENT" value="AUTO_INCREMENT" script="AUTO_INCREMENT"/>
                <paramer name="@CREATE_TIME" value="CREATE_TIME" script="CREATE_TIME"/>
                <paramer name="@UPDATE_TIME" value="UPDATE_TIME" script="UPDATE_TIME"/>
                <paramer name="@CHECK_TIME" value="CHECK_TIME" script="CHECK_TIME"/>
                <paramer name="@TABLE_COLLATION" value="TABLE_COLLATION" script="TABLE_COLLATION"/>
                <paramer name="@CHECKSUM" value="CHECKSUM" script="CHECKSUM"/>
                <paramer name="@CREATE_OPTIONS" value="CREATE_OPTIONS" script="CREATE_OPTIONS"/>
                <paramer name="@TABLE_COMMENT" value="TABLE_COMMENT" script="TABLE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.TABLES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLE_CATALOG AS KeyValue,TABLE_CATALOG AS KeyText FROM [Tables];            
            </TEXT>
        </SQL>

        <!--【TABLES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.TABLES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.TABLES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLES】：查询表中记录的列。-->
        <SQL id="DATA.TABLES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 TABLES.TABLE_CATALOG,  TABLES.TABLE_SCHEMA,  TABLES.TABLE_NAME,  TABLES.TABLE_TYPE,  TABLES.ENGINE,  TABLES.VERSION,  TABLES.ROW_FORMAT,  TABLES.TABLE_ROWS,  TABLES.AVG_ROW_LENGTH,  TABLES.DATA_LENGTH,  TABLES.MAX_DATA_LENGTH,  TABLES.INDEX_LENGTH,  TABLES.DATA_FREE,  TABLES.AUTO_INCREMENT,  TABLES.CREATE_TIME,  TABLES.UPDATE_TIME,  TABLES.CHECK_TIME,  TABLES.TABLE_COLLATION,  TABLES.CHECKSUM,  TABLES.CREATE_OPTIONS,  TABLES.TABLE_COMMENT                
            </TEXT>
        </SQL>

        <!--【TABLES】：表名。-->
        <SQL id="DATA.TABLES.DBTABLE" type="sqlserver">
            <TEXT>
            Tables 
            
            </TEXT>
        </SQL>

        <!--【TABLES】：联合查询表中记录的列。-->
        <SQL id="DATA.TABLES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             TABLES.TABLE_CATALOG,  TABLES.TABLE_SCHEMA,  TABLES.TABLE_NAME,  TABLES.TABLE_TYPE,  TABLES.ENGINE,  TABLES.VERSION,  TABLES.ROW_FORMAT,  TABLES.TABLE_ROWS,  TABLES.AVG_ROW_LENGTH,  TABLES.DATA_LENGTH,  TABLES.MAX_DATA_LENGTH,  TABLES.INDEX_LENGTH,  TABLES.DATA_FREE,  TABLES.AUTO_INCREMENT,  TABLES.CREATE_TIME,  TABLES.UPDATE_TIME,  TABLES.CHECK_TIME,  TABLES.TABLE_COLLATION,  TABLES.CHECKSUM,  TABLES.CREATE_OPTIONS,  TABLES.TABLE_COMMENT                       
            </TEXT>
        </SQL>

        <!--【TABLES】：联合查询表中记录的表名。-->
        <SQL id="DATA.TABLES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Tables 
            
            </TEXT>
        </SQL>

        <!--【TABLES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.TABLES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            TABLES.TABLE_CATALOG, ;TABLES.TABLE_SCHEMA, ;TABLES.TABLE_NAME, ;TABLES.TABLE_TYPE, ;TABLES.ENGINE, ;TABLES.ROW_FORMAT, ;TABLES.TABLE_COLLATION, ;TABLES.CREATE_OPTIONS, ;TABLES.TABLE_COMMENT,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Tablespaces" script="数据库表【Tablespaces】的基本数据库操作">
        <!--【TABLESPACES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.TABLESPACES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Tablespaces(TABLESPACE_NAME , ENGINE , TABLESPACE_TYPE , LOGFILE_GROUP_NAME , EXTENT_SIZE , AUTOEXTEND_SIZE , MAXIMUM_SIZE , NODEGROUP_ID , TABLESPACE_COMMENT ) VALUES(@TABLESPACE_NAME , @ENGINE , @TABLESPACE_TYPE , @LOGFILE_GROUP_NAME , @EXTENT_SIZE , @AUTOEXTEND_SIZE , @MAXIMUM_SIZE , @NODEGROUP_ID , @TABLESPACE_COMMENT )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@TABLESPACE_TYPE" value="TABLESPACE_TYPE" script="TABLESPACE_TYPE"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@NODEGROUP_ID" value="NODEGROUP_ID" script="NODEGROUP_ID"/>
                <paramer name="@TABLESPACE_COMMENT" value="TABLESPACE_COMMENT" script="TABLESPACE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLESPACES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.TABLESPACES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Tablespaces SET TABLESPACE_NAME = @TABLESPACE_NAME ,ENGINE = @ENGINE ,TABLESPACE_TYPE = @TABLESPACE_TYPE ,LOGFILE_GROUP_NAME = @LOGFILE_GROUP_NAME ,EXTENT_SIZE = @EXTENT_SIZE ,AUTOEXTEND_SIZE = @AUTOEXTEND_SIZE ,MAXIMUM_SIZE = @MAXIMUM_SIZE ,NODEGROUP_ID = @NODEGROUP_ID ,TABLESPACE_COMMENT = @TABLESPACE_COMMENT  WHERE TABLESPACE_NAME = @TABLESPACE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@TABLESPACE_TYPE" value="TABLESPACE_TYPE" script="TABLESPACE_TYPE"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@NODEGROUP_ID" value="NODEGROUP_ID" script="NODEGROUP_ID"/>
                <paramer name="@TABLESPACE_COMMENT" value="TABLESPACE_COMMENT" script="TABLESPACE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLESPACES】：查询-取得表中一条记录。-->
        <SQL id="DATA.TABLESPACES.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLESPACE_NAME,  ENGINE,  TABLESPACE_TYPE,  LOGFILE_GROUP_NAME,  EXTENT_SIZE,  AUTOEXTEND_SIZE,  MAXIMUM_SIZE,  NODEGROUP_ID,  TABLESPACE_COMMENT FROM Tablespaces WHERE TABLESPACE_NAME = @TABLESPACE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@TABLESPACE_TYPE" value="TABLESPACE_TYPE" script="TABLESPACE_TYPE"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@NODEGROUP_ID" value="NODEGROUP_ID" script="NODEGROUP_ID"/>
                <paramer name="@TABLESPACE_COMMENT" value="TABLESPACE_COMMENT" script="TABLESPACE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLESPACES】：删除-删除表中一条记录。-->
        <SQL id="DATA.TABLESPACES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Tablespaces WHERE TABLESPACE_NAME = @TABLESPACE_NAME
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLESPACE_NAME" value="TABLESPACE_NAME" script="TABLESPACE_NAME"/>
                <paramer name="@ENGINE" value="ENGINE" script="ENGINE"/>
                <paramer name="@TABLESPACE_TYPE" value="TABLESPACE_TYPE" script="TABLESPACE_TYPE"/>
                <paramer name="@LOGFILE_GROUP_NAME" value="LOGFILE_GROUP_NAME" script="LOGFILE_GROUP_NAME"/>
                <paramer name="@EXTENT_SIZE" value="EXTENT_SIZE" script="EXTENT_SIZE"/>
                <paramer name="@AUTOEXTEND_SIZE" value="AUTOEXTEND_SIZE" script="AUTOEXTEND_SIZE"/>
                <paramer name="@MAXIMUM_SIZE" value="MAXIMUM_SIZE" script="MAXIMUM_SIZE"/>
                <paramer name="@NODEGROUP_ID" value="NODEGROUP_ID" script="NODEGROUP_ID"/>
                <paramer name="@TABLESPACE_COMMENT" value="TABLESPACE_COMMENT" script="TABLESPACE_COMMENT"/>
            </Paramers>
        </SQL>

        <!--【TABLESPACES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.TABLESPACES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLESPACE_NAME AS KeyValue,TABLESPACE_NAME AS KeyText FROM [Tablespaces];            
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.TABLESPACES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.TABLESPACES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：查询表中记录的列。-->
        <SQL id="DATA.TABLESPACES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 TABLESPACES.TABLESPACE_NAME,  TABLESPACES.ENGINE,  TABLESPACES.TABLESPACE_TYPE,  TABLESPACES.LOGFILE_GROUP_NAME,  TABLESPACES.EXTENT_SIZE,  TABLESPACES.AUTOEXTEND_SIZE,  TABLESPACES.MAXIMUM_SIZE,  TABLESPACES.NODEGROUP_ID,  TABLESPACES.TABLESPACE_COMMENT                
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：表名。-->
        <SQL id="DATA.TABLESPACES.DBTABLE" type="sqlserver">
            <TEXT>
            Tablespaces 
            
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：联合查询表中记录的列。-->
        <SQL id="DATA.TABLESPACES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             TABLESPACES.TABLESPACE_NAME,  TABLESPACES.ENGINE,  TABLESPACES.TABLESPACE_TYPE,  TABLESPACES.LOGFILE_GROUP_NAME,  TABLESPACES.EXTENT_SIZE,  TABLESPACES.AUTOEXTEND_SIZE,  TABLESPACES.MAXIMUM_SIZE,  TABLESPACES.NODEGROUP_ID,  TABLESPACES.TABLESPACE_COMMENT                       
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：联合查询表中记录的表名。-->
        <SQL id="DATA.TABLESPACES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Tablespaces 
            
            </TEXT>
        </SQL>

        <!--【TABLESPACES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.TABLESPACES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            TABLESPACES.TABLESPACE_NAME, ;TABLESPACES.ENGINE, ;TABLESPACES.TABLESPACE_TYPE, ;TABLESPACES.LOGFILE_GROUP_NAME, ;TABLESPACES.TABLESPACE_COMMENT,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Tableconstraints" script="数据库表【Tableconstraints】的基本数据库操作">
        <!--【TABLE_CONSTRAINTS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.TABLECONSTRAINTS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Tableconstraints(CONSTRAINT_CATALOG , CONSTRAINT_SCHEMA , CONSTRAINT_NAME , TABLE_SCHEMA , TABLE_NAME , CONSTRAINT_TYPE ) VALUES(@CONSTRAINT_CATALOG , @CONSTRAINT_SCHEMA , @CONSTRAINT_NAME , @TABLE_SCHEMA , @TABLE_NAME , @CONSTRAINT_TYPE )
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@CONSTRAINT_TYPE" value="CONSTRAINT_TYPE" script="CONSTRAINT_TYPE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.TABLECONSTRAINTS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Tableconstraints SET CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG ,CONSTRAINT_SCHEMA = @CONSTRAINT_SCHEMA ,CONSTRAINT_NAME = @CONSTRAINT_NAME ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,CONSTRAINT_TYPE = @CONSTRAINT_TYPE  WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@CONSTRAINT_TYPE" value="CONSTRAINT_TYPE" script="CONSTRAINT_TYPE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：查询-取得表中一条记录。-->
        <SQL id="DATA.TABLECONSTRAINTS.GET" type="sqlserver">
            <TEXT>
            SELECT  CONSTRAINT_CATALOG,  CONSTRAINT_SCHEMA,  CONSTRAINT_NAME,  TABLE_SCHEMA,  TABLE_NAME,  CONSTRAINT_TYPE FROM Tableconstraints WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@CONSTRAINT_TYPE" value="CONSTRAINT_TYPE" script="CONSTRAINT_TYPE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：删除-删除表中一条记录。-->
        <SQL id="DATA.TABLECONSTRAINTS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Tableconstraints WHERE CONSTRAINT_CATALOG = @CONSTRAINT_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@CONSTRAINT_CATALOG" value="CONSTRAINT_CATALOG" script="CONSTRAINT_CATALOG"/>
                <paramer name="@CONSTRAINT_SCHEMA" value="CONSTRAINT_SCHEMA" script="CONSTRAINT_SCHEMA"/>
                <paramer name="@CONSTRAINT_NAME" value="CONSTRAINT_NAME" script="CONSTRAINT_NAME"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@CONSTRAINT_TYPE" value="CONSTRAINT_TYPE" script="CONSTRAINT_TYPE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.TABLECONSTRAINTS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT CONSTRAINT_CATALOG AS KeyValue,CONSTRAINT_CATALOG AS KeyText FROM [Tableconstraints];            
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.TABLECONSTRAINTS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.TABLECONSTRAINTS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：查询表中记录的列。-->
        <SQL id="DATA.TABLECONSTRAINTS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 TABLE_CONSTRAINTS.CONSTRAINT_CATALOG,  TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA,  TABLE_CONSTRAINTS.CONSTRAINT_NAME,  TABLE_CONSTRAINTS.TABLE_SCHEMA,  TABLE_CONSTRAINTS.TABLE_NAME,  TABLE_CONSTRAINTS.CONSTRAINT_TYPE                
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：表名。-->
        <SQL id="DATA.TABLECONSTRAINTS.DBTABLE" type="sqlserver">
            <TEXT>
            Tableconstraints 
            
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：联合查询表中记录的列。-->
        <SQL id="DATA.TABLECONSTRAINTS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             TABLE_CONSTRAINTS.CONSTRAINT_CATALOG,  TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA,  TABLE_CONSTRAINTS.CONSTRAINT_NAME,  TABLE_CONSTRAINTS.TABLE_SCHEMA,  TABLE_CONSTRAINTS.TABLE_NAME,  TABLE_CONSTRAINTS.CONSTRAINT_TYPE                       
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：联合查询表中记录的表名。-->
        <SQL id="DATA.TABLECONSTRAINTS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Tableconstraints 
            
            </TEXT>
        </SQL>

        <!--【TABLE_CONSTRAINTS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.TABLECONSTRAINTS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            TABLE_CONSTRAINTS.CONSTRAINT_CATALOG, ;TABLE_CONSTRAINTS.CONSTRAINT_SCHEMA, ;TABLE_CONSTRAINTS.CONSTRAINT_NAME, ;TABLE_CONSTRAINTS.TABLE_SCHEMA, ;TABLE_CONSTRAINTS.TABLE_NAME, ;TABLE_CONSTRAINTS.CONSTRAINT_TYPE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Tableprivileges" script="数据库表【Tableprivileges】的基本数据库操作">
        <!--【TABLE_PRIVILEGES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.TABLEPRIVILEGES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Tableprivileges(GRANTEE , TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , PRIVILEGE_TYPE , IS_GRANTABLE ) VALUES(@GRANTEE , @TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @PRIVILEGE_TYPE , @IS_GRANTABLE )
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_PRIVILEGES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.TABLEPRIVILEGES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Tableprivileges SET GRANTEE = @GRANTEE ,TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,PRIVILEGE_TYPE = @PRIVILEGE_TYPE ,IS_GRANTABLE = @IS_GRANTABLE  WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_PRIVILEGES】：查询-取得表中一条记录。-->
        <SQL id="DATA.TABLEPRIVILEGES.GET" type="sqlserver">
            <TEXT>
            SELECT  GRANTEE,  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  PRIVILEGE_TYPE,  IS_GRANTABLE FROM Tableprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_PRIVILEGES】：删除-删除表中一条记录。-->
        <SQL id="DATA.TABLEPRIVILEGES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Tableprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【TABLE_PRIVILEGES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.TABLEPRIVILEGES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT GRANTEE AS KeyValue,GRANTEE AS KeyText FROM [Tableprivileges];            
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.TABLEPRIVILEGES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.TABLEPRIVILEGES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：查询表中记录的列。-->
        <SQL id="DATA.TABLEPRIVILEGES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 TABLE_PRIVILEGES.GRANTEE,  TABLE_PRIVILEGES.TABLE_CATALOG,  TABLE_PRIVILEGES.TABLE_SCHEMA,  TABLE_PRIVILEGES.TABLE_NAME,  TABLE_PRIVILEGES.PRIVILEGE_TYPE,  TABLE_PRIVILEGES.IS_GRANTABLE                
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：表名。-->
        <SQL id="DATA.TABLEPRIVILEGES.DBTABLE" type="sqlserver">
            <TEXT>
            Tableprivileges 
            
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：联合查询表中记录的列。-->
        <SQL id="DATA.TABLEPRIVILEGES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             TABLE_PRIVILEGES.GRANTEE,  TABLE_PRIVILEGES.TABLE_CATALOG,  TABLE_PRIVILEGES.TABLE_SCHEMA,  TABLE_PRIVILEGES.TABLE_NAME,  TABLE_PRIVILEGES.PRIVILEGE_TYPE,  TABLE_PRIVILEGES.IS_GRANTABLE                       
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：联合查询表中记录的表名。-->
        <SQL id="DATA.TABLEPRIVILEGES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Tableprivileges 
            
            </TEXT>
        </SQL>

        <!--【TABLE_PRIVILEGES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.TABLEPRIVILEGES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            TABLE_PRIVILEGES.GRANTEE, ;TABLE_PRIVILEGES.TABLE_CATALOG, ;TABLE_PRIVILEGES.TABLE_SCHEMA, ;TABLE_PRIVILEGES.TABLE_NAME, ;TABLE_PRIVILEGES.PRIVILEGE_TYPE, ;TABLE_PRIVILEGES.IS_GRANTABLE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Triggers" script="数据库表【Triggers】的基本数据库操作">
        <!--【TRIGGERS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.TRIGGERS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Triggers(TRIGGER_CATALOG , TRIGGER_SCHEMA , TRIGGER_NAME , EVENT_MANIPULATION , EVENT_OBJECT_CATALOG , EVENT_OBJECT_SCHEMA , EVENT_OBJECT_TABLE , ACTION_ORDER , ACTION_CONDITION , ACTION_STATEMENT , ACTION_ORIENTATION , ACTION_TIMING , ACTION_REFERENCE_OLD_TABLE , ACTION_REFERENCE_NEW_TABLE , ACTION_REFERENCE_OLD_ROW , ACTION_REFERENCE_NEW_ROW , CREATED , SQL_MODE , DEFINER , CHARACTER_SET_CLIENT , COLLATION_CONNECTION , DATABASE_COLLATION ) VALUES(@TRIGGER_CATALOG , @TRIGGER_SCHEMA , @TRIGGER_NAME , @EVENT_MANIPULATION , @EVENT_OBJECT_CATALOG , @EVENT_OBJECT_SCHEMA , @EVENT_OBJECT_TABLE , @ACTION_ORDER , @ACTION_CONDITION , @ACTION_STATEMENT , @ACTION_ORIENTATION , @ACTION_TIMING , @ACTION_REFERENCE_OLD_TABLE , @ACTION_REFERENCE_NEW_TABLE , @ACTION_REFERENCE_OLD_ROW , @ACTION_REFERENCE_NEW_ROW , @CREATED , @SQL_MODE , @DEFINER , @CHARACTER_SET_CLIENT , @COLLATION_CONNECTION , @DATABASE_COLLATION )
            
            </TEXT>

            <Paramers>
                <paramer name="@TRIGGER_CATALOG" value="TRIGGER_CATALOG" script="TRIGGER_CATALOG"/>
                <paramer name="@TRIGGER_SCHEMA" value="TRIGGER_SCHEMA" script="TRIGGER_SCHEMA"/>
                <paramer name="@TRIGGER_NAME" value="TRIGGER_NAME" script="TRIGGER_NAME"/>
                <paramer name="@EVENT_MANIPULATION" value="EVENT_MANIPULATION" script="EVENT_MANIPULATION"/>
                <paramer name="@EVENT_OBJECT_CATALOG" value="EVENT_OBJECT_CATALOG" script="EVENT_OBJECT_CATALOG"/>
                <paramer name="@EVENT_OBJECT_SCHEMA" value="EVENT_OBJECT_SCHEMA" script="EVENT_OBJECT_SCHEMA"/>
                <paramer name="@EVENT_OBJECT_TABLE" value="EVENT_OBJECT_TABLE" script="EVENT_OBJECT_TABLE"/>
                <paramer name="@ACTION_ORDER" value="ACTION_ORDER" script="ACTION_ORDER"/>
                <paramer name="@ACTION_CONDITION" value="ACTION_CONDITION" script="ACTION_CONDITION"/>
                <paramer name="@ACTION_STATEMENT" value="ACTION_STATEMENT" script="ACTION_STATEMENT"/>
                <paramer name="@ACTION_ORIENTATION" value="ACTION_ORIENTATION" script="ACTION_ORIENTATION"/>
                <paramer name="@ACTION_TIMING" value="ACTION_TIMING" script="ACTION_TIMING"/>
                <paramer name="@ACTION_REFERENCE_OLD_TABLE" value="ACTION_REFERENCE_OLD_TABLE" script="ACTION_REFERENCE_OLD_TABLE"/>
                <paramer name="@ACTION_REFERENCE_NEW_TABLE" value="ACTION_REFERENCE_NEW_TABLE" script="ACTION_REFERENCE_NEW_TABLE"/>
                <paramer name="@ACTION_REFERENCE_OLD_ROW" value="ACTION_REFERENCE_OLD_ROW" script="ACTION_REFERENCE_OLD_ROW"/>
                <paramer name="@ACTION_REFERENCE_NEW_ROW" value="ACTION_REFERENCE_NEW_ROW" script="ACTION_REFERENCE_NEW_ROW"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【TRIGGERS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.TRIGGERS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Triggers SET TRIGGER_CATALOG = @TRIGGER_CATALOG ,TRIGGER_SCHEMA = @TRIGGER_SCHEMA ,TRIGGER_NAME = @TRIGGER_NAME ,EVENT_MANIPULATION = @EVENT_MANIPULATION ,EVENT_OBJECT_CATALOG = @EVENT_OBJECT_CATALOG ,EVENT_OBJECT_SCHEMA = @EVENT_OBJECT_SCHEMA ,EVENT_OBJECT_TABLE = @EVENT_OBJECT_TABLE ,ACTION_ORDER = @ACTION_ORDER ,ACTION_CONDITION = @ACTION_CONDITION ,ACTION_STATEMENT = @ACTION_STATEMENT ,ACTION_ORIENTATION = @ACTION_ORIENTATION ,ACTION_TIMING = @ACTION_TIMING ,ACTION_REFERENCE_OLD_TABLE = @ACTION_REFERENCE_OLD_TABLE ,ACTION_REFERENCE_NEW_TABLE = @ACTION_REFERENCE_NEW_TABLE ,ACTION_REFERENCE_OLD_ROW = @ACTION_REFERENCE_OLD_ROW ,ACTION_REFERENCE_NEW_ROW = @ACTION_REFERENCE_NEW_ROW ,CREATED = @CREATED ,SQL_MODE = @SQL_MODE ,DEFINER = @DEFINER ,CHARACTER_SET_CLIENT = @CHARACTER_SET_CLIENT ,COLLATION_CONNECTION = @COLLATION_CONNECTION ,DATABASE_COLLATION = @DATABASE_COLLATION  WHERE TRIGGER_CATALOG = @TRIGGER_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TRIGGER_CATALOG" value="TRIGGER_CATALOG" script="TRIGGER_CATALOG"/>
                <paramer name="@TRIGGER_SCHEMA" value="TRIGGER_SCHEMA" script="TRIGGER_SCHEMA"/>
                <paramer name="@TRIGGER_NAME" value="TRIGGER_NAME" script="TRIGGER_NAME"/>
                <paramer name="@EVENT_MANIPULATION" value="EVENT_MANIPULATION" script="EVENT_MANIPULATION"/>
                <paramer name="@EVENT_OBJECT_CATALOG" value="EVENT_OBJECT_CATALOG" script="EVENT_OBJECT_CATALOG"/>
                <paramer name="@EVENT_OBJECT_SCHEMA" value="EVENT_OBJECT_SCHEMA" script="EVENT_OBJECT_SCHEMA"/>
                <paramer name="@EVENT_OBJECT_TABLE" value="EVENT_OBJECT_TABLE" script="EVENT_OBJECT_TABLE"/>
                <paramer name="@ACTION_ORDER" value="ACTION_ORDER" script="ACTION_ORDER"/>
                <paramer name="@ACTION_CONDITION" value="ACTION_CONDITION" script="ACTION_CONDITION"/>
                <paramer name="@ACTION_STATEMENT" value="ACTION_STATEMENT" script="ACTION_STATEMENT"/>
                <paramer name="@ACTION_ORIENTATION" value="ACTION_ORIENTATION" script="ACTION_ORIENTATION"/>
                <paramer name="@ACTION_TIMING" value="ACTION_TIMING" script="ACTION_TIMING"/>
                <paramer name="@ACTION_REFERENCE_OLD_TABLE" value="ACTION_REFERENCE_OLD_TABLE" script="ACTION_REFERENCE_OLD_TABLE"/>
                <paramer name="@ACTION_REFERENCE_NEW_TABLE" value="ACTION_REFERENCE_NEW_TABLE" script="ACTION_REFERENCE_NEW_TABLE"/>
                <paramer name="@ACTION_REFERENCE_OLD_ROW" value="ACTION_REFERENCE_OLD_ROW" script="ACTION_REFERENCE_OLD_ROW"/>
                <paramer name="@ACTION_REFERENCE_NEW_ROW" value="ACTION_REFERENCE_NEW_ROW" script="ACTION_REFERENCE_NEW_ROW"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【TRIGGERS】：查询-取得表中一条记录。-->
        <SQL id="DATA.TRIGGERS.GET" type="sqlserver">
            <TEXT>
            SELECT  TRIGGER_CATALOG,  TRIGGER_SCHEMA,  TRIGGER_NAME,  EVENT_MANIPULATION,  EVENT_OBJECT_CATALOG,  EVENT_OBJECT_SCHEMA,  EVENT_OBJECT_TABLE,  ACTION_ORDER,  ACTION_CONDITION,  ACTION_STATEMENT,  ACTION_ORIENTATION,  ACTION_TIMING,  ACTION_REFERENCE_OLD_TABLE,  ACTION_REFERENCE_NEW_TABLE,  ACTION_REFERENCE_OLD_ROW,  ACTION_REFERENCE_NEW_ROW,  CREATED,  SQL_MODE,  DEFINER,  CHARACTER_SET_CLIENT,  COLLATION_CONNECTION,  DATABASE_COLLATION FROM Triggers WHERE TRIGGER_CATALOG = @TRIGGER_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TRIGGER_CATALOG" value="TRIGGER_CATALOG" script="TRIGGER_CATALOG"/>
                <paramer name="@TRIGGER_SCHEMA" value="TRIGGER_SCHEMA" script="TRIGGER_SCHEMA"/>
                <paramer name="@TRIGGER_NAME" value="TRIGGER_NAME" script="TRIGGER_NAME"/>
                <paramer name="@EVENT_MANIPULATION" value="EVENT_MANIPULATION" script="EVENT_MANIPULATION"/>
                <paramer name="@EVENT_OBJECT_CATALOG" value="EVENT_OBJECT_CATALOG" script="EVENT_OBJECT_CATALOG"/>
                <paramer name="@EVENT_OBJECT_SCHEMA" value="EVENT_OBJECT_SCHEMA" script="EVENT_OBJECT_SCHEMA"/>
                <paramer name="@EVENT_OBJECT_TABLE" value="EVENT_OBJECT_TABLE" script="EVENT_OBJECT_TABLE"/>
                <paramer name="@ACTION_ORDER" value="ACTION_ORDER" script="ACTION_ORDER"/>
                <paramer name="@ACTION_CONDITION" value="ACTION_CONDITION" script="ACTION_CONDITION"/>
                <paramer name="@ACTION_STATEMENT" value="ACTION_STATEMENT" script="ACTION_STATEMENT"/>
                <paramer name="@ACTION_ORIENTATION" value="ACTION_ORIENTATION" script="ACTION_ORIENTATION"/>
                <paramer name="@ACTION_TIMING" value="ACTION_TIMING" script="ACTION_TIMING"/>
                <paramer name="@ACTION_REFERENCE_OLD_TABLE" value="ACTION_REFERENCE_OLD_TABLE" script="ACTION_REFERENCE_OLD_TABLE"/>
                <paramer name="@ACTION_REFERENCE_NEW_TABLE" value="ACTION_REFERENCE_NEW_TABLE" script="ACTION_REFERENCE_NEW_TABLE"/>
                <paramer name="@ACTION_REFERENCE_OLD_ROW" value="ACTION_REFERENCE_OLD_ROW" script="ACTION_REFERENCE_OLD_ROW"/>
                <paramer name="@ACTION_REFERENCE_NEW_ROW" value="ACTION_REFERENCE_NEW_ROW" script="ACTION_REFERENCE_NEW_ROW"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【TRIGGERS】：删除-删除表中一条记录。-->
        <SQL id="DATA.TRIGGERS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Triggers WHERE TRIGGER_CATALOG = @TRIGGER_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TRIGGER_CATALOG" value="TRIGGER_CATALOG" script="TRIGGER_CATALOG"/>
                <paramer name="@TRIGGER_SCHEMA" value="TRIGGER_SCHEMA" script="TRIGGER_SCHEMA"/>
                <paramer name="@TRIGGER_NAME" value="TRIGGER_NAME" script="TRIGGER_NAME"/>
                <paramer name="@EVENT_MANIPULATION" value="EVENT_MANIPULATION" script="EVENT_MANIPULATION"/>
                <paramer name="@EVENT_OBJECT_CATALOG" value="EVENT_OBJECT_CATALOG" script="EVENT_OBJECT_CATALOG"/>
                <paramer name="@EVENT_OBJECT_SCHEMA" value="EVENT_OBJECT_SCHEMA" script="EVENT_OBJECT_SCHEMA"/>
                <paramer name="@EVENT_OBJECT_TABLE" value="EVENT_OBJECT_TABLE" script="EVENT_OBJECT_TABLE"/>
                <paramer name="@ACTION_ORDER" value="ACTION_ORDER" script="ACTION_ORDER"/>
                <paramer name="@ACTION_CONDITION" value="ACTION_CONDITION" script="ACTION_CONDITION"/>
                <paramer name="@ACTION_STATEMENT" value="ACTION_STATEMENT" script="ACTION_STATEMENT"/>
                <paramer name="@ACTION_ORIENTATION" value="ACTION_ORIENTATION" script="ACTION_ORIENTATION"/>
                <paramer name="@ACTION_TIMING" value="ACTION_TIMING" script="ACTION_TIMING"/>
                <paramer name="@ACTION_REFERENCE_OLD_TABLE" value="ACTION_REFERENCE_OLD_TABLE" script="ACTION_REFERENCE_OLD_TABLE"/>
                <paramer name="@ACTION_REFERENCE_NEW_TABLE" value="ACTION_REFERENCE_NEW_TABLE" script="ACTION_REFERENCE_NEW_TABLE"/>
                <paramer name="@ACTION_REFERENCE_OLD_ROW" value="ACTION_REFERENCE_OLD_ROW" script="ACTION_REFERENCE_OLD_ROW"/>
                <paramer name="@ACTION_REFERENCE_NEW_ROW" value="ACTION_REFERENCE_NEW_ROW" script="ACTION_REFERENCE_NEW_ROW"/>
                <paramer name="@CREATED" value="CREATED" script="CREATED"/>
                <paramer name="@SQL_MODE" value="SQL_MODE" script="SQL_MODE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
                <paramer name="@DATABASE_COLLATION" value="DATABASE_COLLATION" script="DATABASE_COLLATION"/>
            </Paramers>
        </SQL>

        <!--【TRIGGERS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.TRIGGERS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TRIGGER_CATALOG AS KeyValue,TRIGGER_CATALOG AS KeyText FROM [Triggers];            
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.TRIGGERS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.TRIGGERS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：查询表中记录的列。-->
        <SQL id="DATA.TRIGGERS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 TRIGGERS.TRIGGER_CATALOG,  TRIGGERS.TRIGGER_SCHEMA,  TRIGGERS.TRIGGER_NAME,  TRIGGERS.EVENT_MANIPULATION,  TRIGGERS.EVENT_OBJECT_CATALOG,  TRIGGERS.EVENT_OBJECT_SCHEMA,  TRIGGERS.EVENT_OBJECT_TABLE,  TRIGGERS.ACTION_ORDER,  TRIGGERS.ACTION_CONDITION,  TRIGGERS.ACTION_STATEMENT,  TRIGGERS.ACTION_ORIENTATION,  TRIGGERS.ACTION_TIMING,  TRIGGERS.ACTION_REFERENCE_OLD_TABLE,  TRIGGERS.ACTION_REFERENCE_NEW_TABLE,  TRIGGERS.ACTION_REFERENCE_OLD_ROW,  TRIGGERS.ACTION_REFERENCE_NEW_ROW,  TRIGGERS.CREATED,  TRIGGERS.SQL_MODE,  TRIGGERS.DEFINER,  TRIGGERS.CHARACTER_SET_CLIENT,  TRIGGERS.COLLATION_CONNECTION,  TRIGGERS.DATABASE_COLLATION                
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：表名。-->
        <SQL id="DATA.TRIGGERS.DBTABLE" type="sqlserver">
            <TEXT>
            Triggers 
            
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：联合查询表中记录的列。-->
        <SQL id="DATA.TRIGGERS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             TRIGGERS.TRIGGER_CATALOG,  TRIGGERS.TRIGGER_SCHEMA,  TRIGGERS.TRIGGER_NAME,  TRIGGERS.EVENT_MANIPULATION,  TRIGGERS.EVENT_OBJECT_CATALOG,  TRIGGERS.EVENT_OBJECT_SCHEMA,  TRIGGERS.EVENT_OBJECT_TABLE,  TRIGGERS.ACTION_ORDER,  TRIGGERS.ACTION_CONDITION,  TRIGGERS.ACTION_STATEMENT,  TRIGGERS.ACTION_ORIENTATION,  TRIGGERS.ACTION_TIMING,  TRIGGERS.ACTION_REFERENCE_OLD_TABLE,  TRIGGERS.ACTION_REFERENCE_NEW_TABLE,  TRIGGERS.ACTION_REFERENCE_OLD_ROW,  TRIGGERS.ACTION_REFERENCE_NEW_ROW,  TRIGGERS.CREATED,  TRIGGERS.SQL_MODE,  TRIGGERS.DEFINER,  TRIGGERS.CHARACTER_SET_CLIENT,  TRIGGERS.COLLATION_CONNECTION,  TRIGGERS.DATABASE_COLLATION                       
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：联合查询表中记录的表名。-->
        <SQL id="DATA.TRIGGERS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Triggers 
            
            </TEXT>
        </SQL>

        <!--【TRIGGERS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.TRIGGERS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            TRIGGERS.TRIGGER_CATALOG, ;TRIGGERS.TRIGGER_SCHEMA, ;TRIGGERS.TRIGGER_NAME, ;TRIGGERS.EVENT_MANIPULATION, ;TRIGGERS.EVENT_OBJECT_CATALOG, ;TRIGGERS.EVENT_OBJECT_SCHEMA, ;TRIGGERS.EVENT_OBJECT_TABLE, ;TRIGGERS.ACTION_CONDITION, ;TRIGGERS.ACTION_STATEMENT, ;TRIGGERS.ACTION_ORIENTATION, ;TRIGGERS.ACTION_TIMING, ;TRIGGERS.ACTION_REFERENCE_OLD_TABLE, ;TRIGGERS.ACTION_REFERENCE_NEW_TABLE, ;TRIGGERS.ACTION_REFERENCE_OLD_ROW, ;TRIGGERS.ACTION_REFERENCE_NEW_ROW, ;TRIGGERS.SQL_MODE, ;TRIGGERS.DEFINER, ;TRIGGERS.CHARACTER_SET_CLIENT, ;TRIGGERS.COLLATION_CONNECTION, ;TRIGGERS.DATABASE_COLLATION,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Userprivileges" script="数据库表【Userprivileges】的基本数据库操作">
        <!--【USER_PRIVILEGES】：添加-向表中添加一条记录。-->
        <SQL id="DATA.USERPRIVILEGES.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Userprivileges(GRANTEE , TABLE_CATALOG , PRIVILEGE_TYPE , IS_GRANTABLE ) VALUES(@GRANTEE , @TABLE_CATALOG , @PRIVILEGE_TYPE , @IS_GRANTABLE )
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【USER_PRIVILEGES】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.USERPRIVILEGES.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Userprivileges SET GRANTEE = @GRANTEE ,TABLE_CATALOG = @TABLE_CATALOG ,PRIVILEGE_TYPE = @PRIVILEGE_TYPE ,IS_GRANTABLE = @IS_GRANTABLE  WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【USER_PRIVILEGES】：查询-取得表中一条记录。-->
        <SQL id="DATA.USERPRIVILEGES.GET" type="sqlserver">
            <TEXT>
            SELECT  GRANTEE,  TABLE_CATALOG,  PRIVILEGE_TYPE,  IS_GRANTABLE FROM Userprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【USER_PRIVILEGES】：删除-删除表中一条记录。-->
        <SQL id="DATA.USERPRIVILEGES.DELETE" type="sqlserver">
            <TEXT>
            DELETE Userprivileges WHERE GRANTEE = @GRANTEE
            
            </TEXT>

            <Paramers>
                <paramer name="@GRANTEE" value="GRANTEE" script="GRANTEE"/>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@PRIVILEGE_TYPE" value="PRIVILEGE_TYPE" script="PRIVILEGE_TYPE"/>
                <paramer name="@IS_GRANTABLE" value="IS_GRANTABLE" script="IS_GRANTABLE"/>
            </Paramers>
        </SQL>

        <!--【USER_PRIVILEGES】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.USERPRIVILEGES.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT GRANTEE AS KeyValue,GRANTEE AS KeyText FROM [Userprivileges];            
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.USERPRIVILEGES.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.USERPRIVILEGES.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：查询表中记录的列。-->
        <SQL id="DATA.USERPRIVILEGES.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 USER_PRIVILEGES.GRANTEE,  USER_PRIVILEGES.TABLE_CATALOG,  USER_PRIVILEGES.PRIVILEGE_TYPE,  USER_PRIVILEGES.IS_GRANTABLE                
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：表名。-->
        <SQL id="DATA.USERPRIVILEGES.DBTABLE" type="sqlserver">
            <TEXT>
            Userprivileges 
            
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：联合查询表中记录的列。-->
        <SQL id="DATA.USERPRIVILEGES.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             USER_PRIVILEGES.GRANTEE,  USER_PRIVILEGES.TABLE_CATALOG,  USER_PRIVILEGES.PRIVILEGE_TYPE,  USER_PRIVILEGES.IS_GRANTABLE                       
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：联合查询表中记录的表名。-->
        <SQL id="DATA.USERPRIVILEGES.DBTABLEEX" type="sqlserver">
            <TEXT>
            Userprivileges 
            
            </TEXT>
        </SQL>

        <!--【USER_PRIVILEGES】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.USERPRIVILEGES.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            USER_PRIVILEGES.GRANTEE, ;USER_PRIVILEGES.TABLE_CATALOG, ;USER_PRIVILEGES.PRIVILEGE_TYPE, ;USER_PRIVILEGES.IS_GRANTABLE,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Views" script="数据库表【Views】的基本数据库操作">
        <!--【VIEWS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.VIEWS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Views(TABLE_CATALOG , TABLE_SCHEMA , TABLE_NAME , VIEW_DEFINITION , CHECK_OPTION , IS_UPDATABLE , DEFINER , SECURITY_TYPE , CHARACTER_SET_CLIENT , COLLATION_CONNECTION ) VALUES(@TABLE_CATALOG , @TABLE_SCHEMA , @TABLE_NAME , @VIEW_DEFINITION , @CHECK_OPTION , @IS_UPDATABLE , @DEFINER , @SECURITY_TYPE , @CHARACTER_SET_CLIENT , @COLLATION_CONNECTION )
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@VIEW_DEFINITION" value="VIEW_DEFINITION" script="VIEW_DEFINITION"/>
                <paramer name="@CHECK_OPTION" value="CHECK_OPTION" script="CHECK_OPTION"/>
                <paramer name="@IS_UPDATABLE" value="IS_UPDATABLE" script="IS_UPDATABLE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
            </Paramers>
        </SQL>

        <!--【VIEWS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.VIEWS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Views SET TABLE_CATALOG = @TABLE_CATALOG ,TABLE_SCHEMA = @TABLE_SCHEMA ,TABLE_NAME = @TABLE_NAME ,VIEW_DEFINITION = @VIEW_DEFINITION ,CHECK_OPTION = @CHECK_OPTION ,IS_UPDATABLE = @IS_UPDATABLE ,DEFINER = @DEFINER ,SECURITY_TYPE = @SECURITY_TYPE ,CHARACTER_SET_CLIENT = @CHARACTER_SET_CLIENT ,COLLATION_CONNECTION = @COLLATION_CONNECTION  WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@VIEW_DEFINITION" value="VIEW_DEFINITION" script="VIEW_DEFINITION"/>
                <paramer name="@CHECK_OPTION" value="CHECK_OPTION" script="CHECK_OPTION"/>
                <paramer name="@IS_UPDATABLE" value="IS_UPDATABLE" script="IS_UPDATABLE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
            </Paramers>
        </SQL>

        <!--【VIEWS】：查询-取得表中一条记录。-->
        <SQL id="DATA.VIEWS.GET" type="sqlserver">
            <TEXT>
            SELECT  TABLE_CATALOG,  TABLE_SCHEMA,  TABLE_NAME,  VIEW_DEFINITION,  CHECK_OPTION,  IS_UPDATABLE,  DEFINER,  SECURITY_TYPE,  CHARACTER_SET_CLIENT,  COLLATION_CONNECTION FROM Views WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@VIEW_DEFINITION" value="VIEW_DEFINITION" script="VIEW_DEFINITION"/>
                <paramer name="@CHECK_OPTION" value="CHECK_OPTION" script="CHECK_OPTION"/>
                <paramer name="@IS_UPDATABLE" value="IS_UPDATABLE" script="IS_UPDATABLE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
            </Paramers>
        </SQL>

        <!--【VIEWS】：删除-删除表中一条记录。-->
        <SQL id="DATA.VIEWS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Views WHERE TABLE_CATALOG = @TABLE_CATALOG
            
            </TEXT>

            <Paramers>
                <paramer name="@TABLE_CATALOG" value="TABLE_CATALOG" script="TABLE_CATALOG"/>
                <paramer name="@TABLE_SCHEMA" value="TABLE_SCHEMA" script="TABLE_SCHEMA"/>
                <paramer name="@TABLE_NAME" value="TABLE_NAME" script="TABLE_NAME"/>
                <paramer name="@VIEW_DEFINITION" value="VIEW_DEFINITION" script="VIEW_DEFINITION"/>
                <paramer name="@CHECK_OPTION" value="CHECK_OPTION" script="CHECK_OPTION"/>
                <paramer name="@IS_UPDATABLE" value="IS_UPDATABLE" script="IS_UPDATABLE"/>
                <paramer name="@DEFINER" value="DEFINER" script="DEFINER"/>
                <paramer name="@SECURITY_TYPE" value="SECURITY_TYPE" script="SECURITY_TYPE"/>
                <paramer name="@CHARACTER_SET_CLIENT" value="CHARACTER_SET_CLIENT" script="CHARACTER_SET_CLIENT"/>
                <paramer name="@COLLATION_CONNECTION" value="COLLATION_CONNECTION" script="COLLATION_CONNECTION"/>
            </Paramers>
        </SQL>

        <!--【VIEWS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.VIEWS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT TABLE_CATALOG AS KeyValue,TABLE_CATALOG AS KeyText FROM [Views];            
            </TEXT>
        </SQL>

        <!--【VIEWS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.VIEWS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【VIEWS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.VIEWS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【VIEWS】：查询表中记录的列。-->
        <SQL id="DATA.VIEWS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 VIEWS.TABLE_CATALOG,  VIEWS.TABLE_SCHEMA,  VIEWS.TABLE_NAME,  VIEWS.VIEW_DEFINITION,  VIEWS.CHECK_OPTION,  VIEWS.IS_UPDATABLE,  VIEWS.DEFINER,  VIEWS.SECURITY_TYPE,  VIEWS.CHARACTER_SET_CLIENT,  VIEWS.COLLATION_CONNECTION                
            </TEXT>
        </SQL>

        <!--【VIEWS】：表名。-->
        <SQL id="DATA.VIEWS.DBTABLE" type="sqlserver">
            <TEXT>
            Views 
            
            </TEXT>
        </SQL>

        <!--【VIEWS】：联合查询表中记录的列。-->
        <SQL id="DATA.VIEWS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             VIEWS.TABLE_CATALOG,  VIEWS.TABLE_SCHEMA,  VIEWS.TABLE_NAME,  VIEWS.VIEW_DEFINITION,  VIEWS.CHECK_OPTION,  VIEWS.IS_UPDATABLE,  VIEWS.DEFINER,  VIEWS.SECURITY_TYPE,  VIEWS.CHARACTER_SET_CLIENT,  VIEWS.COLLATION_CONNECTION                       
            </TEXT>
        </SQL>

        <!--【VIEWS】：联合查询表中记录的表名。-->
        <SQL id="DATA.VIEWS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Views 
            
            </TEXT>
        </SQL>

        <!--【VIEWS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.VIEWS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            VIEWS.TABLE_CATALOG, ;VIEWS.TABLE_SCHEMA, ;VIEWS.TABLE_NAME, ;VIEWS.VIEW_DEFINITION, ;VIEWS.CHECK_OPTION, ;VIEWS.IS_UPDATABLE, ;VIEWS.DEFINER, ;VIEWS.SECURITY_TYPE, ;VIEWS.CHARACTER_SET_CLIENT, ;VIEWS.COLLATION_CONNECTION,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodbcmpreset" script="数据库表【Innodbcmpreset】的基本数据库操作">
        <!--【INNODB_CMP_RESET】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBCMPRESET.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodbcmpreset(page_size , compress_ops , compress_ops_ok , compress_time , uncompress_ops , uncompress_time ) VALUES(@page_size , @compress_ops , @compress_ops_ok , @compress_time , @uncompress_ops , @uncompress_time )
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP_RESET】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBCMPRESET.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodbcmpreset SET page_size = @page_size ,compress_ops = @compress_ops ,compress_ops_ok = @compress_ops_ok ,compress_time = @compress_time ,uncompress_ops = @uncompress_ops ,uncompress_time = @uncompress_time  WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP_RESET】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBCMPRESET.GET" type="sqlserver">
            <TEXT>
            SELECT  page_size,  compress_ops,  compress_ops_ok,  compress_time,  uncompress_ops,  uncompress_time FROM Innodbcmpreset WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP_RESET】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBCMPRESET.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodbcmpreset WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP_RESET】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPRESET.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT page_size AS KeyValue,page_size AS KeyText FROM [Innodbcmpreset];            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPRESET.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPRESET.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPRESET.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_CMP_RESET.page_size,  INNODB_CMP_RESET.compress_ops,  INNODB_CMP_RESET.compress_ops_ok,  INNODB_CMP_RESET.compress_time,  INNODB_CMP_RESET.uncompress_ops,  INNODB_CMP_RESET.uncompress_time                
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：表名。-->
        <SQL id="DATA.INNODBCMPRESET.DBTABLE" type="sqlserver">
            <TEXT>
            Innodbcmpreset 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPRESET.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_CMP_RESET.page_size,  INNODB_CMP_RESET.compress_ops,  INNODB_CMP_RESET.compress_ops_ok,  INNODB_CMP_RESET.compress_time,  INNODB_CMP_RESET.uncompress_ops,  INNODB_CMP_RESET.uncompress_time                       
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBCMPRESET.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodbcmpreset 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP_RESET】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPRESET.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
                        
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodbtrx" script="数据库表【Innodbtrx】的基本数据库操作">
        <!--【INNODB_TRX】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBTRX.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodbtrx(trx_id , trx_state , trx_started , trx_requested_lock_id , trx_wait_started , trx_weight , trx_mysql_thread_id , trx_query , trx_operation_state , trx_tables_in_use , trx_tables_locked , trx_lock_structs , trx_lock_memory_bytes , trx_rows_locked , trx_rows_modified , trx_concurrency_tickets , trx_isolation_level , trx_unique_checks , trx_foreign_key_checks , trx_last_foreign_key_error , trx_adaptive_hash_latched , trx_adaptive_hash_timeout ) VALUES(@trx_id , @trx_state , @trx_started , @trx_requested_lock_id , @trx_wait_started , @trx_weight , @trx_mysql_thread_id , @trx_query , @trx_operation_state , @trx_tables_in_use , @trx_tables_locked , @trx_lock_structs , @trx_lock_memory_bytes , @trx_rows_locked , @trx_rows_modified , @trx_concurrency_tickets , @trx_isolation_level , @trx_unique_checks , @trx_foreign_key_checks , @trx_last_foreign_key_error , @trx_adaptive_hash_latched , @trx_adaptive_hash_timeout )
            
            </TEXT>

            <Paramers>
                <paramer name="@trx_id" value="trx_id" script="trx_id"/>
                <paramer name="@trx_state" value="trx_state" script="trx_state"/>
                <paramer name="@trx_started" value="trx_started" script="trx_started"/>
                <paramer name="@trx_requested_lock_id" value="trx_requested_lock_id" script="trx_requested_lock_id"/>
                <paramer name="@trx_wait_started" value="trx_wait_started" script="trx_wait_started"/>
                <paramer name="@trx_weight" value="trx_weight" script="trx_weight"/>
                <paramer name="@trx_mysql_thread_id" value="trx_mysql_thread_id" script="trx_mysql_thread_id"/>
                <paramer name="@trx_query" value="trx_query" script="trx_query"/>
                <paramer name="@trx_operation_state" value="trx_operation_state" script="trx_operation_state"/>
                <paramer name="@trx_tables_in_use" value="trx_tables_in_use" script="trx_tables_in_use"/>
                <paramer name="@trx_tables_locked" value="trx_tables_locked" script="trx_tables_locked"/>
                <paramer name="@trx_lock_structs" value="trx_lock_structs" script="trx_lock_structs"/>
                <paramer name="@trx_lock_memory_bytes" value="trx_lock_memory_bytes" script="trx_lock_memory_bytes"/>
                <paramer name="@trx_rows_locked" value="trx_rows_locked" script="trx_rows_locked"/>
                <paramer name="@trx_rows_modified" value="trx_rows_modified" script="trx_rows_modified"/>
                <paramer name="@trx_concurrency_tickets" value="trx_concurrency_tickets" script="trx_concurrency_tickets"/>
                <paramer name="@trx_isolation_level" value="trx_isolation_level" script="trx_isolation_level"/>
                <paramer name="@trx_unique_checks" value="trx_unique_checks" script="trx_unique_checks"/>
                <paramer name="@trx_foreign_key_checks" value="trx_foreign_key_checks" script="trx_foreign_key_checks"/>
                <paramer name="@trx_last_foreign_key_error" value="trx_last_foreign_key_error" script="trx_last_foreign_key_error"/>
                <paramer name="@trx_adaptive_hash_latched" value="trx_adaptive_hash_latched" script="trx_adaptive_hash_latched"/>
                <paramer name="@trx_adaptive_hash_timeout" value="trx_adaptive_hash_timeout" script="trx_adaptive_hash_timeout"/>
            </Paramers>
        </SQL>

        <!--【INNODB_TRX】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBTRX.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodbtrx SET trx_id = @trx_id ,trx_state = @trx_state ,trx_started = @trx_started ,trx_requested_lock_id = @trx_requested_lock_id ,trx_wait_started = @trx_wait_started ,trx_weight = @trx_weight ,trx_mysql_thread_id = @trx_mysql_thread_id ,trx_query = @trx_query ,trx_operation_state = @trx_operation_state ,trx_tables_in_use = @trx_tables_in_use ,trx_tables_locked = @trx_tables_locked ,trx_lock_structs = @trx_lock_structs ,trx_lock_memory_bytes = @trx_lock_memory_bytes ,trx_rows_locked = @trx_rows_locked ,trx_rows_modified = @trx_rows_modified ,trx_concurrency_tickets = @trx_concurrency_tickets ,trx_isolation_level = @trx_isolation_level ,trx_unique_checks = @trx_unique_checks ,trx_foreign_key_checks = @trx_foreign_key_checks ,trx_last_foreign_key_error = @trx_last_foreign_key_error ,trx_adaptive_hash_latched = @trx_adaptive_hash_latched ,trx_adaptive_hash_timeout = @trx_adaptive_hash_timeout  WHERE trx_id = @trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@trx_id" value="trx_id" script="trx_id"/>
                <paramer name="@trx_state" value="trx_state" script="trx_state"/>
                <paramer name="@trx_started" value="trx_started" script="trx_started"/>
                <paramer name="@trx_requested_lock_id" value="trx_requested_lock_id" script="trx_requested_lock_id"/>
                <paramer name="@trx_wait_started" value="trx_wait_started" script="trx_wait_started"/>
                <paramer name="@trx_weight" value="trx_weight" script="trx_weight"/>
                <paramer name="@trx_mysql_thread_id" value="trx_mysql_thread_id" script="trx_mysql_thread_id"/>
                <paramer name="@trx_query" value="trx_query" script="trx_query"/>
                <paramer name="@trx_operation_state" value="trx_operation_state" script="trx_operation_state"/>
                <paramer name="@trx_tables_in_use" value="trx_tables_in_use" script="trx_tables_in_use"/>
                <paramer name="@trx_tables_locked" value="trx_tables_locked" script="trx_tables_locked"/>
                <paramer name="@trx_lock_structs" value="trx_lock_structs" script="trx_lock_structs"/>
                <paramer name="@trx_lock_memory_bytes" value="trx_lock_memory_bytes" script="trx_lock_memory_bytes"/>
                <paramer name="@trx_rows_locked" value="trx_rows_locked" script="trx_rows_locked"/>
                <paramer name="@trx_rows_modified" value="trx_rows_modified" script="trx_rows_modified"/>
                <paramer name="@trx_concurrency_tickets" value="trx_concurrency_tickets" script="trx_concurrency_tickets"/>
                <paramer name="@trx_isolation_level" value="trx_isolation_level" script="trx_isolation_level"/>
                <paramer name="@trx_unique_checks" value="trx_unique_checks" script="trx_unique_checks"/>
                <paramer name="@trx_foreign_key_checks" value="trx_foreign_key_checks" script="trx_foreign_key_checks"/>
                <paramer name="@trx_last_foreign_key_error" value="trx_last_foreign_key_error" script="trx_last_foreign_key_error"/>
                <paramer name="@trx_adaptive_hash_latched" value="trx_adaptive_hash_latched" script="trx_adaptive_hash_latched"/>
                <paramer name="@trx_adaptive_hash_timeout" value="trx_adaptive_hash_timeout" script="trx_adaptive_hash_timeout"/>
            </Paramers>
        </SQL>

        <!--【INNODB_TRX】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBTRX.GET" type="sqlserver">
            <TEXT>
            SELECT  trx_id,  trx_state,  trx_started,  trx_requested_lock_id,  trx_wait_started,  trx_weight,  trx_mysql_thread_id,  trx_query,  trx_operation_state,  trx_tables_in_use,  trx_tables_locked,  trx_lock_structs,  trx_lock_memory_bytes,  trx_rows_locked,  trx_rows_modified,  trx_concurrency_tickets,  trx_isolation_level,  trx_unique_checks,  trx_foreign_key_checks,  trx_last_foreign_key_error,  trx_adaptive_hash_latched,  trx_adaptive_hash_timeout FROM Innodbtrx WHERE trx_id = @trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@trx_id" value="trx_id" script="trx_id"/>
                <paramer name="@trx_state" value="trx_state" script="trx_state"/>
                <paramer name="@trx_started" value="trx_started" script="trx_started"/>
                <paramer name="@trx_requested_lock_id" value="trx_requested_lock_id" script="trx_requested_lock_id"/>
                <paramer name="@trx_wait_started" value="trx_wait_started" script="trx_wait_started"/>
                <paramer name="@trx_weight" value="trx_weight" script="trx_weight"/>
                <paramer name="@trx_mysql_thread_id" value="trx_mysql_thread_id" script="trx_mysql_thread_id"/>
                <paramer name="@trx_query" value="trx_query" script="trx_query"/>
                <paramer name="@trx_operation_state" value="trx_operation_state" script="trx_operation_state"/>
                <paramer name="@trx_tables_in_use" value="trx_tables_in_use" script="trx_tables_in_use"/>
                <paramer name="@trx_tables_locked" value="trx_tables_locked" script="trx_tables_locked"/>
                <paramer name="@trx_lock_structs" value="trx_lock_structs" script="trx_lock_structs"/>
                <paramer name="@trx_lock_memory_bytes" value="trx_lock_memory_bytes" script="trx_lock_memory_bytes"/>
                <paramer name="@trx_rows_locked" value="trx_rows_locked" script="trx_rows_locked"/>
                <paramer name="@trx_rows_modified" value="trx_rows_modified" script="trx_rows_modified"/>
                <paramer name="@trx_concurrency_tickets" value="trx_concurrency_tickets" script="trx_concurrency_tickets"/>
                <paramer name="@trx_isolation_level" value="trx_isolation_level" script="trx_isolation_level"/>
                <paramer name="@trx_unique_checks" value="trx_unique_checks" script="trx_unique_checks"/>
                <paramer name="@trx_foreign_key_checks" value="trx_foreign_key_checks" script="trx_foreign_key_checks"/>
                <paramer name="@trx_last_foreign_key_error" value="trx_last_foreign_key_error" script="trx_last_foreign_key_error"/>
                <paramer name="@trx_adaptive_hash_latched" value="trx_adaptive_hash_latched" script="trx_adaptive_hash_latched"/>
                <paramer name="@trx_adaptive_hash_timeout" value="trx_adaptive_hash_timeout" script="trx_adaptive_hash_timeout"/>
            </Paramers>
        </SQL>

        <!--【INNODB_TRX】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBTRX.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodbtrx WHERE trx_id = @trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@trx_id" value="trx_id" script="trx_id"/>
                <paramer name="@trx_state" value="trx_state" script="trx_state"/>
                <paramer name="@trx_started" value="trx_started" script="trx_started"/>
                <paramer name="@trx_requested_lock_id" value="trx_requested_lock_id" script="trx_requested_lock_id"/>
                <paramer name="@trx_wait_started" value="trx_wait_started" script="trx_wait_started"/>
                <paramer name="@trx_weight" value="trx_weight" script="trx_weight"/>
                <paramer name="@trx_mysql_thread_id" value="trx_mysql_thread_id" script="trx_mysql_thread_id"/>
                <paramer name="@trx_query" value="trx_query" script="trx_query"/>
                <paramer name="@trx_operation_state" value="trx_operation_state" script="trx_operation_state"/>
                <paramer name="@trx_tables_in_use" value="trx_tables_in_use" script="trx_tables_in_use"/>
                <paramer name="@trx_tables_locked" value="trx_tables_locked" script="trx_tables_locked"/>
                <paramer name="@trx_lock_structs" value="trx_lock_structs" script="trx_lock_structs"/>
                <paramer name="@trx_lock_memory_bytes" value="trx_lock_memory_bytes" script="trx_lock_memory_bytes"/>
                <paramer name="@trx_rows_locked" value="trx_rows_locked" script="trx_rows_locked"/>
                <paramer name="@trx_rows_modified" value="trx_rows_modified" script="trx_rows_modified"/>
                <paramer name="@trx_concurrency_tickets" value="trx_concurrency_tickets" script="trx_concurrency_tickets"/>
                <paramer name="@trx_isolation_level" value="trx_isolation_level" script="trx_isolation_level"/>
                <paramer name="@trx_unique_checks" value="trx_unique_checks" script="trx_unique_checks"/>
                <paramer name="@trx_foreign_key_checks" value="trx_foreign_key_checks" script="trx_foreign_key_checks"/>
                <paramer name="@trx_last_foreign_key_error" value="trx_last_foreign_key_error" script="trx_last_foreign_key_error"/>
                <paramer name="@trx_adaptive_hash_latched" value="trx_adaptive_hash_latched" script="trx_adaptive_hash_latched"/>
                <paramer name="@trx_adaptive_hash_timeout" value="trx_adaptive_hash_timeout" script="trx_adaptive_hash_timeout"/>
            </Paramers>
        </SQL>

        <!--【INNODB_TRX】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBTRX.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT trx_id AS KeyValue,trx_id AS KeyText FROM [Innodbtrx];            
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBTRX.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBTRX.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：查询表中记录的列。-->
        <SQL id="DATA.INNODBTRX.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_TRX.trx_id,  INNODB_TRX.trx_state,  INNODB_TRX.trx_started,  INNODB_TRX.trx_requested_lock_id,  INNODB_TRX.trx_wait_started,  INNODB_TRX.trx_weight,  INNODB_TRX.trx_mysql_thread_id,  INNODB_TRX.trx_query,  INNODB_TRX.trx_operation_state,  INNODB_TRX.trx_tables_in_use,  INNODB_TRX.trx_tables_locked,  INNODB_TRX.trx_lock_structs,  INNODB_TRX.trx_lock_memory_bytes,  INNODB_TRX.trx_rows_locked,  INNODB_TRX.trx_rows_modified,  INNODB_TRX.trx_concurrency_tickets,  INNODB_TRX.trx_isolation_level,  INNODB_TRX.trx_unique_checks,  INNODB_TRX.trx_foreign_key_checks,  INNODB_TRX.trx_last_foreign_key_error,  INNODB_TRX.trx_adaptive_hash_latched,  INNODB_TRX.trx_adaptive_hash_timeout                
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：表名。-->
        <SQL id="DATA.INNODBTRX.DBTABLE" type="sqlserver">
            <TEXT>
            Innodbtrx 
            
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBTRX.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_TRX.trx_id,  INNODB_TRX.trx_state,  INNODB_TRX.trx_started,  INNODB_TRX.trx_requested_lock_id,  INNODB_TRX.trx_wait_started,  INNODB_TRX.trx_weight,  INNODB_TRX.trx_mysql_thread_id,  INNODB_TRX.trx_query,  INNODB_TRX.trx_operation_state,  INNODB_TRX.trx_tables_in_use,  INNODB_TRX.trx_tables_locked,  INNODB_TRX.trx_lock_structs,  INNODB_TRX.trx_lock_memory_bytes,  INNODB_TRX.trx_rows_locked,  INNODB_TRX.trx_rows_modified,  INNODB_TRX.trx_concurrency_tickets,  INNODB_TRX.trx_isolation_level,  INNODB_TRX.trx_unique_checks,  INNODB_TRX.trx_foreign_key_checks,  INNODB_TRX.trx_last_foreign_key_error,  INNODB_TRX.trx_adaptive_hash_latched,  INNODB_TRX.trx_adaptive_hash_timeout                       
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBTRX.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodbtrx 
            
            </TEXT>
        </SQL>

        <!--【INNODB_TRX】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBTRX.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            INNODB_TRX.trx_id, ;INNODB_TRX.trx_state, ;INNODB_TRX.trx_requested_lock_id, ;INNODB_TRX.trx_query, ;INNODB_TRX.trx_operation_state, ;INNODB_TRX.trx_isolation_level, ;INNODB_TRX.trx_last_foreign_key_error,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodbcmpmemreset" script="数据库表【Innodbcmpmemreset】的基本数据库操作">
        <!--【INNODB_CMPMEM_RESET】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBCMPMEMRESET.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodbcmpmemreset(page_size , buffer_pool_instance , pages_used , pages_free , relocation_ops , relocation_time ) VALUES(@page_size , @buffer_pool_instance , @pages_used , @pages_free , @relocation_ops , @relocation_time )
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEMRESET.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodbcmpmemreset SET page_size = @page_size ,buffer_pool_instance = @buffer_pool_instance ,pages_used = @pages_used ,pages_free = @pages_free ,relocation_ops = @relocation_ops ,relocation_time = @relocation_time  WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEMRESET.GET" type="sqlserver">
            <TEXT>
            SELECT  page_size,  buffer_pool_instance,  pages_used,  pages_free,  relocation_ops,  relocation_time FROM Innodbcmpmemreset WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEMRESET.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodbcmpmemreset WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPMEMRESET.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT page_size AS KeyValue,page_size AS KeyText FROM [Innodbcmpmemreset];            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPMEMRESET.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPMEMRESET.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPMEMRESET.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_CMPMEM_RESET.page_size,  INNODB_CMPMEM_RESET.buffer_pool_instance,  INNODB_CMPMEM_RESET.pages_used,  INNODB_CMPMEM_RESET.pages_free,  INNODB_CMPMEM_RESET.relocation_ops,  INNODB_CMPMEM_RESET.relocation_time                
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：表名。-->
        <SQL id="DATA.INNODBCMPMEMRESET.DBTABLE" type="sqlserver">
            <TEXT>
            Innodbcmpmemreset 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPMEMRESET.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_CMPMEM_RESET.page_size,  INNODB_CMPMEM_RESET.buffer_pool_instance,  INNODB_CMPMEM_RESET.pages_used,  INNODB_CMPMEM_RESET.pages_free,  INNODB_CMPMEM_RESET.relocation_ops,  INNODB_CMPMEM_RESET.relocation_time                       
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBCMPMEMRESET.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodbcmpmemreset 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM_RESET】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPMEMRESET.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
                        
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodblockwaits" script="数据库表【Innodblockwaits】的基本数据库操作">
        <!--【INNODB_LOCK_WAITS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBLOCKWAITS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodblockwaits(requesting_trx_id , requested_lock_id , blocking_trx_id , blocking_lock_id ) VALUES(@requesting_trx_id , @requested_lock_id , @blocking_trx_id , @blocking_lock_id )
            
            </TEXT>

            <Paramers>
                <paramer name="@requesting_trx_id" value="requesting_trx_id" script="requesting_trx_id"/>
                <paramer name="@requested_lock_id" value="requested_lock_id" script="requested_lock_id"/>
                <paramer name="@blocking_trx_id" value="blocking_trx_id" script="blocking_trx_id"/>
                <paramer name="@blocking_lock_id" value="blocking_lock_id" script="blocking_lock_id"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBLOCKWAITS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodblockwaits SET requesting_trx_id = @requesting_trx_id ,requested_lock_id = @requested_lock_id ,blocking_trx_id = @blocking_trx_id ,blocking_lock_id = @blocking_lock_id  WHERE requesting_trx_id = @requesting_trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@requesting_trx_id" value="requesting_trx_id" script="requesting_trx_id"/>
                <paramer name="@requested_lock_id" value="requested_lock_id" script="requested_lock_id"/>
                <paramer name="@blocking_trx_id" value="blocking_trx_id" script="blocking_trx_id"/>
                <paramer name="@blocking_lock_id" value="blocking_lock_id" script="blocking_lock_id"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBLOCKWAITS.GET" type="sqlserver">
            <TEXT>
            SELECT  requesting_trx_id,  requested_lock_id,  blocking_trx_id,  blocking_lock_id FROM Innodblockwaits WHERE requesting_trx_id = @requesting_trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@requesting_trx_id" value="requesting_trx_id" script="requesting_trx_id"/>
                <paramer name="@requested_lock_id" value="requested_lock_id" script="requested_lock_id"/>
                <paramer name="@blocking_trx_id" value="blocking_trx_id" script="blocking_trx_id"/>
                <paramer name="@blocking_lock_id" value="blocking_lock_id" script="blocking_lock_id"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBLOCKWAITS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodblockwaits WHERE requesting_trx_id = @requesting_trx_id
            
            </TEXT>

            <Paramers>
                <paramer name="@requesting_trx_id" value="requesting_trx_id" script="requesting_trx_id"/>
                <paramer name="@requested_lock_id" value="requested_lock_id" script="requested_lock_id"/>
                <paramer name="@blocking_trx_id" value="blocking_trx_id" script="blocking_trx_id"/>
                <paramer name="@blocking_lock_id" value="blocking_lock_id" script="blocking_lock_id"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBLOCKWAITS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT requesting_trx_id AS KeyValue,requesting_trx_id AS KeyText FROM [Innodblockwaits];            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBLOCKWAITS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBLOCKWAITS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：查询表中记录的列。-->
        <SQL id="DATA.INNODBLOCKWAITS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_LOCK_WAITS.requesting_trx_id,  INNODB_LOCK_WAITS.requested_lock_id,  INNODB_LOCK_WAITS.blocking_trx_id,  INNODB_LOCK_WAITS.blocking_lock_id                
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：表名。-->
        <SQL id="DATA.INNODBLOCKWAITS.DBTABLE" type="sqlserver">
            <TEXT>
            Innodblockwaits 
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBLOCKWAITS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_LOCK_WAITS.requesting_trx_id,  INNODB_LOCK_WAITS.requested_lock_id,  INNODB_LOCK_WAITS.blocking_trx_id,  INNODB_LOCK_WAITS.blocking_lock_id                       
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBLOCKWAITS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodblockwaits 
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCK_WAITS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBLOCKWAITS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            INNODB_LOCK_WAITS.requesting_trx_id, ;INNODB_LOCK_WAITS.requested_lock_id, ;INNODB_LOCK_WAITS.blocking_trx_id, ;INNODB_LOCK_WAITS.blocking_lock_id,             
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodbcmpmem" script="数据库表【Innodbcmpmem】的基本数据库操作">
        <!--【INNODB_CMPMEM】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBCMPMEM.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodbcmpmem(page_size , buffer_pool_instance , pages_used , pages_free , relocation_ops , relocation_time ) VALUES(@page_size , @buffer_pool_instance , @pages_used , @pages_free , @relocation_ops , @relocation_time )
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEM.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodbcmpmem SET page_size = @page_size ,buffer_pool_instance = @buffer_pool_instance ,pages_used = @pages_used ,pages_free = @pages_free ,relocation_ops = @relocation_ops ,relocation_time = @relocation_time  WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEM.GET" type="sqlserver">
            <TEXT>
            SELECT  page_size,  buffer_pool_instance,  pages_used,  pages_free,  relocation_ops,  relocation_time FROM Innodbcmpmem WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBCMPMEM.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodbcmpmem WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@buffer_pool_instance" value="buffer_pool_instance" script="buffer_pool_instance"/>
                <paramer name="@pages_used" value="pages_used" script="pages_used"/>
                <paramer name="@pages_free" value="pages_free" script="pages_free"/>
                <paramer name="@relocation_ops" value="relocation_ops" script="relocation_ops"/>
                <paramer name="@relocation_time" value="relocation_time" script="relocation_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMPMEM】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPMEM.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT page_size AS KeyValue,page_size AS KeyText FROM [Innodbcmpmem];            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPMEM.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBCMPMEM.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPMEM.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_CMPMEM.page_size,  INNODB_CMPMEM.buffer_pool_instance,  INNODB_CMPMEM.pages_used,  INNODB_CMPMEM.pages_free,  INNODB_CMPMEM.relocation_ops,  INNODB_CMPMEM.relocation_time                
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：表名。-->
        <SQL id="DATA.INNODBCMPMEM.DBTABLE" type="sqlserver">
            <TEXT>
            Innodbcmpmem 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBCMPMEM.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_CMPMEM.page_size,  INNODB_CMPMEM.buffer_pool_instance,  INNODB_CMPMEM.pages_used,  INNODB_CMPMEM.pages_free,  INNODB_CMPMEM.relocation_ops,  INNODB_CMPMEM.relocation_time                       
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBCMPMEM.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodbcmpmem 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMPMEM】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMPMEM.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
                        
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodbcmp" script="数据库表【Innodbcmp】的基本数据库操作">
        <!--【INNODB_CMP】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBCMP.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodbcmp(page_size , compress_ops , compress_ops_ok , compress_time , uncompress_ops , uncompress_time ) VALUES(@page_size , @compress_ops , @compress_ops_ok , @compress_time , @uncompress_ops , @uncompress_time )
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBCMP.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodbcmp SET page_size = @page_size ,compress_ops = @compress_ops ,compress_ops_ok = @compress_ops_ok ,compress_time = @compress_time ,uncompress_ops = @uncompress_ops ,uncompress_time = @uncompress_time  WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBCMP.GET" type="sqlserver">
            <TEXT>
            SELECT  page_size,  compress_ops,  compress_ops_ok,  compress_time,  uncompress_ops,  uncompress_time FROM Innodbcmp WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBCMP.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodbcmp WHERE page_size = @page_size
            
            </TEXT>

            <Paramers>
                <paramer name="@page_size" value="page_size" script="page_size"/>
                <paramer name="@compress_ops" value="compress_ops" script="compress_ops"/>
                <paramer name="@compress_ops_ok" value="compress_ops_ok" script="compress_ops_ok"/>
                <paramer name="@compress_time" value="compress_time" script="compress_time"/>
                <paramer name="@uncompress_ops" value="uncompress_ops" script="uncompress_ops"/>
                <paramer name="@uncompress_time" value="uncompress_time" script="uncompress_time"/>
            </Paramers>
        </SQL>

        <!--【INNODB_CMP】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMP.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT page_size AS KeyValue,page_size AS KeyText FROM [Innodbcmp];            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBCMP.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBCMP.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：查询表中记录的列。-->
        <SQL id="DATA.INNODBCMP.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_CMP.page_size,  INNODB_CMP.compress_ops,  INNODB_CMP.compress_ops_ok,  INNODB_CMP.compress_time,  INNODB_CMP.uncompress_ops,  INNODB_CMP.uncompress_time                
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：表名。-->
        <SQL id="DATA.INNODBCMP.DBTABLE" type="sqlserver">
            <TEXT>
            Innodbcmp 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBCMP.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_CMP.page_size,  INNODB_CMP.compress_ops,  INNODB_CMP.compress_ops_ok,  INNODB_CMP.compress_time,  INNODB_CMP.uncompress_ops,  INNODB_CMP.uncompress_time                       
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBCMP.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodbcmp 
            
            </TEXT>
        </SQL>

        <!--【INNODB_CMP】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBCMP.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
                        
            </TEXT>
        </SQL>

    </MODULE>
    <MODULE id="Innodblocks" script="数据库表【Innodblocks】的基本数据库操作">
        <!--【INNODB_LOCKS】：添加-向表中添加一条记录。-->
        <SQL id="DATA.INNODBLOCKS.ADD" type="sqlserver">
            <TEXT>
            INSERT INTO Innodblocks(lock_id , lock_trx_id , lock_mode , lock_type , lock_table , lock_index , lock_space , lock_page , lock_rec , lock_data ) VALUES(@lock_id , @lock_trx_id , @lock_mode , @lock_type , @lock_table , @lock_index , @lock_space , @lock_page , @lock_rec , @lock_data )
            
            </TEXT>

            <Paramers>
                <paramer name="@lock_id" value="lock_id" script="lock_id"/>
                <paramer name="@lock_trx_id" value="lock_trx_id" script="lock_trx_id"/>
                <paramer name="@lock_mode" value="lock_mode" script="lock_mode"/>
                <paramer name="@lock_type" value="lock_type" script="lock_type"/>
                <paramer name="@lock_table" value="lock_table" script="lock_table"/>
                <paramer name="@lock_index" value="lock_index" script="lock_index"/>
                <paramer name="@lock_space" value="lock_space" script="lock_space"/>
                <paramer name="@lock_page" value="lock_page" script="lock_page"/>
                <paramer name="@lock_rec" value="lock_rec" script="lock_rec"/>
                <paramer name="@lock_data" value="lock_data" script="lock_data"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCKS】：编辑-编辑表中一条记录。-->
        <SQL id="DATA.INNODBLOCKS.EDIT" type="sqlserver">
            <TEXT>
            UPDATE Innodblocks SET lock_id = @lock_id ,lock_trx_id = @lock_trx_id ,lock_mode = @lock_mode ,lock_type = @lock_type ,lock_table = @lock_table ,lock_index = @lock_index ,lock_space = @lock_space ,lock_page = @lock_page ,lock_rec = @lock_rec ,lock_data = @lock_data  WHERE lock_id = @lock_id
            
            </TEXT>

            <Paramers>
                <paramer name="@lock_id" value="lock_id" script="lock_id"/>
                <paramer name="@lock_trx_id" value="lock_trx_id" script="lock_trx_id"/>
                <paramer name="@lock_mode" value="lock_mode" script="lock_mode"/>
                <paramer name="@lock_type" value="lock_type" script="lock_type"/>
                <paramer name="@lock_table" value="lock_table" script="lock_table"/>
                <paramer name="@lock_index" value="lock_index" script="lock_index"/>
                <paramer name="@lock_space" value="lock_space" script="lock_space"/>
                <paramer name="@lock_page" value="lock_page" script="lock_page"/>
                <paramer name="@lock_rec" value="lock_rec" script="lock_rec"/>
                <paramer name="@lock_data" value="lock_data" script="lock_data"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCKS】：查询-取得表中一条记录。-->
        <SQL id="DATA.INNODBLOCKS.GET" type="sqlserver">
            <TEXT>
            SELECT  lock_id,  lock_trx_id,  lock_mode,  lock_type,  lock_table,  lock_index,  lock_space,  lock_page,  lock_rec,  lock_data FROM Innodblocks WHERE lock_id = @lock_id
            
            </TEXT>

            <Paramers>
                <paramer name="@lock_id" value="lock_id" script="lock_id"/>
                <paramer name="@lock_trx_id" value="lock_trx_id" script="lock_trx_id"/>
                <paramer name="@lock_mode" value="lock_mode" script="lock_mode"/>
                <paramer name="@lock_type" value="lock_type" script="lock_type"/>
                <paramer name="@lock_table" value="lock_table" script="lock_table"/>
                <paramer name="@lock_index" value="lock_index" script="lock_index"/>
                <paramer name="@lock_space" value="lock_space" script="lock_space"/>
                <paramer name="@lock_page" value="lock_page" script="lock_page"/>
                <paramer name="@lock_rec" value="lock_rec" script="lock_rec"/>
                <paramer name="@lock_data" value="lock_data" script="lock_data"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCKS】：删除-删除表中一条记录。-->
        <SQL id="DATA.INNODBLOCKS.DELETE" type="sqlserver">
            <TEXT>
            DELETE Innodblocks WHERE lock_id = @lock_id
            
            </TEXT>

            <Paramers>
                <paramer name="@lock_id" value="lock_id" script="lock_id"/>
                <paramer name="@lock_trx_id" value="lock_trx_id" script="lock_trx_id"/>
                <paramer name="@lock_mode" value="lock_mode" script="lock_mode"/>
                <paramer name="@lock_type" value="lock_type" script="lock_type"/>
                <paramer name="@lock_table" value="lock_table" script="lock_table"/>
                <paramer name="@lock_index" value="lock_index" script="lock_index"/>
                <paramer name="@lock_space" value="lock_space" script="lock_space"/>
                <paramer name="@lock_page" value="lock_page" script="lock_page"/>
                <paramer name="@lock_rec" value="lock_rec" script="lock_rec"/>
                <paramer name="@lock_data" value="lock_data" script="lock_data"/>
            </Paramers>
        </SQL>

        <!--【INNODB_LOCKS】：取得表中的记录作为下拉菜单的数据源。-->
        <SQL id="DATA.INNODBLOCKS.GETDATASOURCE" type="sqlserver">
            <TEXT>
            SELECT lock_id AS KeyValue,lock_id AS KeyText FROM [Innodblocks];            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：在向表中添加一条记录时，判断记录是否已经存在。-->
        <SQL id="DATA.INNODBLOCKS.ISEXISTFORADD" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：编辑表中一条记录时，判断相似记录是否已经存在。-->
        <SQL id="DATA.INNODBLOCKS.ISEXISTFOREDIT" type="sqlserver">
            <TEXT>
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：查询表中记录的列。-->
        <SQL id="DATA.INNODBLOCKS.DBFIELDLIST" type="sqlserver">
            <TEXT>
                 INNODB_LOCKS.lock_id,  INNODB_LOCKS.lock_trx_id,  INNODB_LOCKS.lock_mode,  INNODB_LOCKS.lock_type,  INNODB_LOCKS.lock_table,  INNODB_LOCKS.lock_index,  INNODB_LOCKS.lock_space,  INNODB_LOCKS.lock_page,  INNODB_LOCKS.lock_rec,  INNODB_LOCKS.lock_data                
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：表名。-->
        <SQL id="DATA.INNODBLOCKS.DBTABLE" type="sqlserver">
            <TEXT>
            Innodblocks 
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：联合查询表中记录的列。-->
        <SQL id="DATA.INNODBLOCKS.DBFIELDLISTEX" type="sqlserver">
            <TEXT>
             INNODB_LOCKS.lock_id,  INNODB_LOCKS.lock_trx_id,  INNODB_LOCKS.lock_mode,  INNODB_LOCKS.lock_type,  INNODB_LOCKS.lock_table,  INNODB_LOCKS.lock_index,  INNODB_LOCKS.lock_space,  INNODB_LOCKS.lock_page,  INNODB_LOCKS.lock_rec,  INNODB_LOCKS.lock_data                       
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：联合查询表中记录的表名。-->
        <SQL id="DATA.INNODBLOCKS.DBTABLEEX" type="sqlserver">
            <TEXT>
            Innodblocks 
            
            </TEXT>
        </SQL>

        <!--【INNODB_LOCKS】：查询时候下拉菜单的数据源。-->
        <SQL id="DATA.INNODBLOCKS.SEARCHCOLUMNSLIST" type="sqlserver">
            <TEXT>
            INNODB_LOCKS.lock_id, ;INNODB_LOCKS.lock_trx_id, ;INNODB_LOCKS.lock_mode, ;INNODB_LOCKS.lock_type, ;INNODB_LOCKS.lock_table, ;INNODB_LOCKS.lock_index, ;INNODB_LOCKS.lock_data,             
            </TEXT>
        </SQL>

    </MODULE>
</SQL-List>
